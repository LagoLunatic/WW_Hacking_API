
undefined FUN_80003100();
undefined FUN_80003140();
undefined FUN_80003278();
undefined FUN_80003294();
undefined FUN_80003354();
undefined FUN_80003374();
undefined FUN_800033a8();
undefined FUN_800033d8();
void FUN_80003490(uint param_1, uint param_2, int param_3);
undefined FUN_800034e0();
undefined FUN_80003510();
undefined FUN_80005468();
undefined m_Do_main__version_check();
undefined HeapCheck__CheckHeap1(HeapCheck * this);
undefined m_Do_main__CheckHeap();
undefined m_Do_main__countUsed();
undefined HeapCheck__getUsedCount(HeapCheck * this);
undefined HeapCheck__heapDisplay(HeapCheck * this);
undefined m_Do_main__debugDisplay();
undefined m_Do_main__Debug_console();
undefined JKRHeap__dump_sort(JKRHeap * this);
undefined m_Do_main__LOAD_COPYDATE();
undefined m_Do_main__debug();
undefined m_Do_main__main01();
undefined m_Do_main__main();
undefined OSGetCallerPC();
undefined OSGetActiveThreadID();
undefined search_partial_address();
undefined convert_partial_address();
undefined OSReportDisable();
undefined OSReportEnable();
undefined OSReportForceEnableOn();
undefined OSReportForceEnableOff();
undefined OSReportInit();
undefined OSVReport();
undefined OSReport();
undefined OSReport_FatalError();
undefined OSReport_Error();
undefined OSReport_Warning();
undefined OSPanic();
undefined mDoAud_zelAudio_c__reset(mDoAud_zelAudio_c * this);
undefined mDoAud_zelAudio_c__calcLoadTimer(mDoAud_zelAudio_c * this);
undefined m_Do_audio__mDoAud_isUsedHeapForStreamBuffer();
undefined m_Do_audio__mDoAud_allocStreamBuffer();
undefined m_Do_audio__mDoAud_deallocStreamBuffer();
undefined m_Do_audio__mDoAud_executeStreamBuffer();
undefined m_Do_audio__mDoAud_setupStreamBuffer();
undefined m_Do_audio__mDoAud_Create();
undefined m_Do_audio__mDoAud_Execute();
undefined m_Do_audio__mDoAud_getTactDirection();
undefined m_Do_audio__mDoAud_setSceneName();
undefined m_Do_audio__mDoAud_load1stDynamicWave();
undefined m_Do_audio__cLib_calcTimer();
undefined m_Do_audio____sinit_m_Do_audio_cpp();
void mDoAud_zelAudio_c__mDoAud_zelAudio_c_destructor(mDoAud_zelAudio_c * this);
void JAIZelInst__JAIZelInst_destructor(JAIZelInst * this);
undefined4 m_Do_controller_pad__mDoCPd_Convert(undefined4 * param_1, JUTGamePad * param_2);
undefined m_Do_controller_pad__mDoCPd_Read();
undefined m_Do_controller_pad__mDoCPd_Create();
undefined mDoGph_gInf_c__create(mDoGph_gInf_c * this);
undefined mDoGph_gInf_c__createHeap(mDoGph_gInf_c * this);
void * mDoGph_gInf_c__alloc(ulong param_1, int param_2);
void mDoGph_gInf_c__free(mDoGph_gInf_c * this, void * __ptr);
undefined mDoGph_gInf_c__fadeOut(float param_1, _GXColor * param_2);
undefined mDoGph_gInf_c__onBlure(mDoGph_gInf_c * this);
// undefined mDoGph_gInf_c__onBlure(mDoGph_gInf_c * this, float * param_1);
// void mDoGph_gInf_c__fadeOut(float param_1);
undefined mDoGph_gInf_c__calcFade(mDoGph_gInf_c * this);
void mDoGph_gInf_c__onMonotone(void);
void mDoGph_gInf_c__offMonotone(void);
undefined mDoGph_gInf_c__calcMonotone(mDoGph_gInf_c * this);
undefined m_Do_graphic__mDoGph_BlankingON();
undefined m_Do_graphic__mDoGph_BlankingOFF();
undefined m_Do_graphic__dScnPly_BeforeOfPaint();
undefined m_Do_graphic__mDoGph_BeforeOfDraw();
undefined m_Do_graphic__mDoGph_AfterOfDraw();
undefined m_Do_graphic__clearAlphaBuffer();
void m_Do_graphic__drawAlphaBuffer(int param_1, _GXColor * param_2);
undefined m_Do_graphic__drawSpot();
undefined m_Do_graphic__drawDepth();
undefined dStage_roomDt_c__getFileListInfo(dStage_roomDt_c * this);
undefined m_Do_graphic__motionBlure();
undefined m_Do_graphic__mCaptureAlarmHandler();
undefined m_Do_graphic__mDoGph_setCaptureStep();
undefined m_Do_graphic__mDoGph_getCaptureStep();
undefined m_Do_graphic__mDoGph_getCaptureTextureBuffer();
undefined m_Do_graphic__mDoGph_setCaptureTextureFormat();
undefined m_Do_graphic__mDoGph_setCaptureCaptureFormat();
undefined m_Do_graphic__mDoGph_CaptureCansel();
undefined m_Do_graphic__blockenc();
undefined m_Do_graphic__encode_s3tc();
undefined m_Do_graphic__setUpRectangle();
undefined m_Do_graphic__drawRectangle();
undefined m_Do_graphic__mDoGph_allocFromAny();
undefined m_Do_graphic__mDoGph_screenCaptureDraw();
undefined m_Do_graphic__mCaptureProc();
undefined m_Do_graphic__mCaptureGXDrawSyncCallback();
undefined m_Do_graphic__mCaptureGXDrawSyncTimeOut();
undefined m_Do_graphic__mDoGph_screenCapture();
undefined m_Do_graphic__setLight();
undefined m_Do_graphic__mDoGph_Painter();
void J2DOrthoGraph__J2DOrthoGraph_destructor(J2DOrthoGraph * this);
undefined m_Do_graphic__mDoGph_Create();
undefined m_Do_graphic____sinit_m_Do_graphic_cpp();
undefined m_Do_machine__myGetHeapTypeByString();
undefined m_Do_machine__myMemoryErrorRoutine();
undefined m_Do_machine__myHeapCheckRecursive();
undefined m_Do_machine__mDoMch_HeapCheckAll();
undefined m_Do_machine__developKeyCheck();
undefined m_Do_machine__myExceptionCallback();
undefined m_Do_machine__fault_callback_scroll();
undefined m_Do_machine__mDoMch_Create();
undefined mDoMtx_XYZrotM();
undefined mDoMtx_ZXYrotS();
undefined mDoMtx_ZXYrotM();
undefined mDoMtx_XrotS();
void mDoMtx_XrotM(MTX34 * param_1, short param_2);
undefined mDoMtx_YrotS();
void mDoMtx_YrotM(MTX34 * param_1, short param_2);
undefined mDoMtx_ZrotS();
void mDoMtx_ZrotM(MTX34 * param_1, short param_2);
undefined mDoMtx_lookAt();
void cXyz__cXyz_destructor(cXyz * this);
// undefined mDoMtx_lookAt();
undefined mDoMtx_concatProjView();
void mDoMtx_inverseTranspose(MTX34 * param_1, MTX34 * param_2);
undefined mDoMtx_QuatConcat();
undefined mDoMtx_MtxToRot();
undefined4 mDoMtx_stack_c__push(void);
undefined4 mDoMtx_stack_c__pop(void);
void mDoMtx_stack_c__transM(float param_1, float param_2, float param_3);
void mDoMtx_stack_c__scaleM(float param_1, float param_2, float param_3);
undefined mDoMtx_stack_c__lYrotM(mDoMtx_stack_c * this, long param_1);
undefined mDoMtx_stack_c__rYrotM(mDoMtx_stack_c * this, float param_1);
void mDoMtx_stack_c__quatM(Quaternion * param_1);
undefined __sinit_m_Do_mtx_cpp();
void mDoMtx_quatStack_c__mDoMtx_quatStack_c_destructor(mDoMtx_quatStack_c * this);
void mDoMtx_stack_c__mDoMtx_stack_c_destructor(mDoMtx_stack_c * this);
undefined mDoExt_setJ3DData();
undefined J3DAnmTransform__getTransform(J3DAnmTransform * this, ushort param_1, J3DTransformInfo * param_2);
undefined isCurrentSolidHeap();
undefined4 mDoExt_baseAnm__initPlay(mDoExt_baseAnm * this, short duration, J3DFrameCtrl__LoopMode loopMode, float speed, short startFrame, short endFrame, bool i_modify);
undefined mDoExt_baseAnm__play(mDoExt_baseAnm * this);
int mDoExt_bpkAnm__init(mDoExt_bpkAnm * this, EVP_PKEY_CTX * ctx);
undefined mDoExt_bpkAnm__entry(mDoExt_bpkAnm * this, J3DModelData * param_1, float param_2);
// int mDoExt_bpkAnm__init(mDoExt_bpkAnm * this, EVP_PKEY_CTX * ctx);
void J3DMatColorAnm__J3DMatColorAnm_destructor(J3DMatColorAnm * this);
void J3DMatColorAnm__J3DMatColorAnm(J3DMatColorAnm * this);
// undefined mDoExt_bpkAnm__entry(mDoExt_bpkAnm * this, J3DMaterialTable * param_1, float param_2);
int mDoExt_btpAnm__init(mDoExt_btpAnm * this, J3DModelData * param_1, J3DAnmTexPattern * param_2, int param_3, int param_4, float param_5, short param_6, short param_7, bool param_8, int param_9);
undefined mDoExt_btpAnm__entry(mDoExt_btpAnm * this, J3DModelData * param_1, short param_2);
// int mDoExt_btpAnm__init(mDoExt_btpAnm * this, EVP_PKEY_CTX * ctx);
void J3DTexNoAnm__J3DTexNoAnm_destructor(J3DTexNoAnm * this);
void J3DTexNoAnm__J3DTexNoAnm(J3DTexNoAnm * this);
// undefined mDoExt_btpAnm__entry(mDoExt_btpAnm * this, J3DMaterialTable * param_1, short param_2);
int mDoExt_btkAnm__init(mDoExt_btkAnm * this, J3DModelData * param_1, J3DAnmTextureSRTKey * param_2, bool param_3, J3DFrameCtrl__LoopMode param_4, float param_5, short param_6, short param_7, bool param_8, int param_9);
undefined mDoExt_btkAnm__entry(mDoExt_btkAnm * this, J3DModelData * param_1, float param_2);
// int mDoExt_btkAnm__init(mDoExt_btkAnm * this, J3DMaterialTable * ctx, J3DAnmTextureSRTKey * param_2, bool bStartPlaying, J3DFrameCtrl__LoopMode loopMode, float param_5, short param_6, short param_7, bool param_8, int param_9);
void J3DTexMtxAnm__J3DTexMtxAnm_destructor(J3DTexMtxAnm * this);
void J3DTexMtxAnm__J3DTexMtxAnm(J3DTexMtxAnm * this);
undefined J3DTexGenBlock__getTexMtx(J3DTexGenBlock * this, ulong param_1);
// undefined mDoExt_btkAnm__entry(mDoExt_btkAnm * this, J3DMaterialTable * param_1, float param_2);
int mDoExt_brkAnm__init(mDoExt_brkAnm * this, J3DModelData * param_1, J3DAnmTevRegKey * param_2, bool param_3, J3DFrameCtrl__LoopMode param_4, float param_5, short param_6, short param_7, bool param_8, int param_9);
undefined mDoExt_brkAnm__entry(mDoExt_brkAnm * this, J3DModelData * param_1, float param_2);
// int mDoExt_brkAnm__init(mDoExt_brkAnm * this, J3DMaterialTable * pMatTbl, J3DAnmTevRegKey * pRegKey, int param_3, int param_4, float param_5, short param_6, short param_7, bool i_modify, int param_9);
void J3DTevKColorAnm__J3DTevKColorAnm_destructor(J3DTevKColorAnm * this);
void J3DTevKColorAnm__J3DTevKColorAnm(J3DTevKColorAnm * this);
void J3DTevColorAnm__J3DTevColorAnm_destructor(J3DTevColorAnm * this);
void J3DTevColorAnm__J3DTevColorAnm(J3DTevColorAnm * this);
// undefined mDoExt_brkAnm__entry(mDoExt_brkAnm * this, J3DMaterialTable * param_1, float param_2);
int mDoExt_bvaAnm__init(mDoExt_bvaAnm * this, J3DModel * ctx, J3DAnmVisibilityFull * param_2, int param_3, int param_4, float param_5, short param_6, short param_7, bool param_8, int param_9);
undefined mDoExt_bvaAnm__entry(mDoExt_bvaAnm * this, J3DModel * param_1, short param_2);
int mDoExt_bckAnm__init(mDoExt_bckAnm * this, J3DModelData * ctx, J3DAnmTransform * param_2, bool param_3, J3DFrameCtrl__LoopMode param_4, float param_5, short param_6, short param_7, bool param_8);
void J3DMtxCalcAnm__J3DMtxCalcAnm_destructor(J3DMtxCalcAnm * this);
void J3DMtxCalcMaya__J3DMtxCalcMaya_destructor(J3DMtxCalcMaya * this);
void J3DMtxCalcBasic__J3DMtxCalcBasic_destructor(J3DMtxCalcBasic * this);
undefined mDoExt_bckAnm__changeBckOnly(mDoExt_bckAnm * this, J3DAnmTransform * param_1);
undefined mDoExt_bckAnm__entry(mDoExt_bckAnm * this, J3DModelData * param_1, float param_2);
undefined mDoExt_changeMaterial();
undefined mDoExt_modelTexturePatch(J3DModelData * param_1);
undefined J3DTevBlock__patchTexNoAndTexCoordScale(J3DTevBlock * this);
undefined J3DPEBlock__patch(J3DPEBlock * this);
undefined J3DColorBlock__patchLight(J3DColorBlock * this);
undefined J3DTevBlock__patch(J3DTevBlock * this);
undefined mDoExt_modelDiff();
undefined mDoExt_modelUpdate();
void mDoExt_modelUpdateDL(J3DModel * param_1);
undefined mDoExt_modelEntry();
void mDoExt_modelEntryDL(J3DModel * model);
undefined mDoExt_backupMatBlock_c__store(mDoExt_backupMatBlock_c * this, J3DMaterial * param_1);
undefined J3DPEBlock__getZCompLoc(J3DPEBlock * this);
undefined J3DPEBlock__getZMode(J3DPEBlock * this);
undefined J3DPEBlock__getBlend(J3DPEBlock * this);
undefined J3DPEBlock__getAlphaComp(J3DPEBlock * this);
undefined J3DPEBlock__getFog(J3DPEBlock * this);
undefined J3DIndBlock__getIndTexCoordScale(J3DIndBlock * this, ulong param_1);
undefined J3DIndBlock__getIndTexMtx(J3DIndBlock * this, ulong param_1);
undefined J3DIndBlock__getIndTexOrder(J3DIndBlock * this, ulong param_1);
undefined J3DIndBlock__getIndTexStageNum(J3DIndBlock * this);
undefined J3DTevBlock__getIndTevStage(J3DTevBlock * this, ulong param_1);
undefined J3DTevBlock__getTevStage(J3DTevBlock * this, ulong param_1);
undefined J3DTevBlock__getTexNo(J3DTevBlock * this, ulong param_1);
undefined J3DTevBlock__getTevSwapModeTable(J3DTevBlock * this, ulong param_1);
undefined J3DTevBlock__getTevKAlphaSel(J3DTevBlock * this, ulong param_1);
undefined J3DTevBlock__getTevKColorSel(J3DTevBlock * this, ulong param_1);
undefined J3DTevBlock__getTevOrder(J3DTevBlock * this, ulong param_1);
undefined J3DTevBlock__getTevKColor(J3DTevBlock * this, ulong param_1);
undefined J3DTevBlock__getTevColor(J3DTevBlock * this, ulong param_1);
undefined J3DTevBlock__getTevStageNum(J3DTevBlock * this);
undefined J3DTexGenBlock__getTexCoord(J3DTexGenBlock * this, ulong param_1);
undefined J3DTexGenBlock__getTexGenNum(J3DTexGenBlock * this);
undefined J3DColorBlock__getAmbColor(J3DColorBlock * this, ulong param_1);
undefined J3DColorBlock__getColorChan(J3DColorBlock * this, ulong param_1);
undefined J3DColorBlock__getMatColor(J3DColorBlock * this, ulong param_1);
undefined J3DColorBlock__getColorChanNum(J3DColorBlock * this);
undefined mDoExt_backupMatBlock_c__restore(mDoExt_backupMatBlock_c * this, J3DMaterial * param_1);
undefined J3DPEBlock__setZCompLoc(J3DPEBlock * this, uchar param_1);
undefined J3DPEBlock__setZMode(J3DPEBlock * this, J3DZMode param_1);
undefined J3DPEBlock__setBlend(J3DPEBlock * this, J3DBlend param_1);
undefined J3DPEBlock__setAlphaComp(J3DPEBlock * this, J3DAlphaComp param_1);
undefined J3DIndBlock__setIndTexCoordScale(J3DIndBlock * this, ulong param_1, J3DIndTexCoordScale param_2);
void J3DIndTexCoordScale__J3DIndTexCoordScale_destructor(J3DIndTexCoordScale * this);
undefined J3DIndBlock__setIndTexMtx(J3DIndBlock * this, ulong param_1, J3DIndTexMtx param_2);
void J3DIndTexMtx__J3DIndTexMtx_destructor(J3DIndTexMtx * this);
undefined J3DIndBlock__setIndTexStageNum(J3DIndBlock * this, uchar param_1);
undefined J3DTevBlock__setIndTevStage(J3DTevBlock * this, ulong param_1, J3DIndTevStage param_2);
undefined J3DTevBlock__setTevStage(J3DTevBlock * this, ulong param_1, undefined param_2);
undefined J3DTevBlock__setTexNo(J3DTevBlock * this, ulong param_1, ushort param_2);
undefined J3DTevBlock__setTevSwapModeTable(J3DTevBlock * this, ulong param_1, J3DTevSwapModeTable param_2);
undefined J3DTevBlock__setTevKAlphaSel(J3DTevBlock * this, ulong param_1, uchar param_2);
undefined J3DTevBlock__setTevKColorSel(J3DTevBlock * this, ulong param_1, uchar param_2);
undefined J3DTevBlock__setTevOrder(J3DTevBlock * this, ulong param_1, J3DTevOrder param_2);
undefined J3DTevBlock__setTevKColor(J3DTevBlock * this, ulong param_1, J3DGXColor param_2);
undefined J3DTevBlock__setTevColor(J3DTevBlock * this, ulong param_1, J3DGXColorS10 param_2);
undefined J3DTevBlock__setTevStageNum(J3DTevBlock * this, uchar param_1);
undefined J3DTexGenBlock__setTexCoord(J3DTexGenBlock * this, ulong param_1, J3DTexCoord * param_2);
undefined J3DTexGenBlock__setTexGenNum(J3DTexGenBlock * this, ulong param_1);
undefined J3DColorBlock__setAmbColor(J3DColorBlock * this, ulong param_1, J3DGXColor param_2);
undefined J3DColorBlock__setColorChan(J3DColorBlock * this, ulong param_1, J3DColorChan * param_2);
undefined J3DColorBlock__setMatColor(J3DColorBlock * this, ulong param_1, J3DGXColor param_2);
undefined J3DColorBlock__setColorChanNum(J3DColorBlock * this, uchar param_1);
undefined mDoExt_backupMaterial_c__create(mDoExt_backupMaterial_c * this, J3DModelData * param_1);
void mDoExt_backupMatBlock_c__mDoExt_backupMatBlock_c_destructor(mDoExt_backupMatBlock_c * this);
void J3DTexMtx__J3DTexMtx_destructor(J3DTexMtx * this);
void mDoExt_backupMatBlock_c__mDoExt_backupMatBlock_c(mDoExt_backupMatBlock_c * this);
void J3DIndTexCoordScale__J3DIndTexCoordScale(J3DIndTexCoordScale * this);
void J3DIndTexMtx__J3DIndTexMtx(J3DIndTexMtx * this);
void J3DIndTexOrder__J3DIndTexOrder(J3DIndTexOrder * this);
void J3DTevSwapModeTable__J3DTevSwapModeTable(J3DTevSwapModeTable * this);
void J3DTevOrder__J3DTevOrder(J3DTevOrder * this);
void J3DIndTevStage__J3DIndTevStage(J3DIndTevStage * this);
void J3DTevStage__J3DTevStage(J3DTevStage * this);
undefined J3DTevStage__setTevStageInfo(J3DTevStage * this, J3DTevStageInfo * param_1);
void J3DGXColorS10__J3DGXColorS10(J3DGXColorS10 * this);
void J3DTexMtx__J3DTexMtx(J3DTexMtx * this);
void J3DTexCoord__J3DTexCoord(J3DTexCoord * this);
void J3DColorChan__J3DColorChan(J3DColorChan * this);
void J3DGXColor__J3DGXColor(J3DGXColor * this);
// undefined mDoExt_backupMaterial_c__create(mDoExt_backupMaterial_c * this, ushort param_1);
undefined mDoExt_backupMaterial_c__restore(mDoExt_backupMaterial_c * this, J3DModelData * param_1);
undefined mDoExt_invisibleModel__create(mDoExt_invisibleModel * this, J3DModel * param_1);
void mDoExt_invJntPacket__mDoExt_invJntPacket_destructor(mDoExt_invJntPacket * this);
void mDoExt_invJntPacket__mDoExt_invJntPacket(mDoExt_invJntPacket * this);
void J3DPacket__J3DPacket_destructor(J3DPacket * this);
undefined mDoExt_invisibleModel__entry(mDoExt_invisibleModel * this);
undefined mDoExt_invisibleModel__entryMaskOff(mDoExt_invisibleModel * this);
undefined mDoExt_invisibleModel__updateDL(mDoExt_invisibleModel * this, J3DModel * param_1);
// undefined mDoExt_invisibleModel__updateDL(mDoExt_invisibleModel * this, mDoExt_McaMorf * param_1);
undefined mDoExt_createGameHeap();
JKRHeap * mDoExt_getGameHeap(void);
undefined mDoExt_setSafeGameHeapSize();
undefined mDoExt_getSafeGameHeapSize();
undefined mDoExt_createZeldaHeap();
JKRHeap * mDoExt_getZeldaHeap(void);
undefined mDoExt_setSafeZeldaHeapSize();
undefined mDoExt_getSafeZeldaHeapSize();
undefined mDoExt_createCommandHeap();
JKRHeap * mDoExt_getCommandHeap(void);
undefined mDoExt_setSafeCommandHeapSize();
undefined mDoExt_getSafeCommandHeapSize();
undefined mDoExt_createArchiveHeap();
undefined mDoExt_setSafeArchiveHeapSize();
undefined mDoExt_getSafeArchiveHeapSize();
JKRHeap * mDoExt_getArchiveHeap(void);
JKRHeap * mDoExt_createSolidHeap(int param_1, ulong param_2, uint param_3, bool param_4);
undefined mDoExt_createSolidHeapFromGame();
JKRHeap * mDoExt_createSolidHeapFromSystem(int param_1, uint param_2, undefined4 param_3, bool param_4);
undefined mDoExt_createSolidHeapToCurrent();
JKRHeap * mDoExt_createSolidHeapFromGameToCurrent(int param_1, int param_2);
undefined mDoExt_adjustSolidHeap();
undefined mDoExt_destroySolidHeap();
undefined mDoExt_setCurrentHeap();
undefined mDoExt_getCurrentHeap();
undefined mDoExt_restoreCurrentHeap();
undefined mDoExt_resIDToIndex();
undefined mDoExt_MtxCalcAnmBlendTbl__calc(mDoExt_MtxCalcAnmBlendTbl * this, ushort param_1);
undefined mDoExt_MtxCalcAnmBlendTblOld__calc(mDoExt_MtxCalcAnmBlendTblOld * this, ushort param_1);
undefined mDoExt_MtxCalcOldFrame__initOldFrameMorf(mDoExt_MtxCalcOldFrame * this, float param_1, ushort param_2, ushort param_3);
undefined mDoExt_MtxCalcOldFrame__decOldFrameMorfCounter(mDoExt_MtxCalcOldFrame * this);
void mDoExt_McaMorf__mDoExt_McaMorf(mDoExt_McaMorf * this, short param_2, J3DModelData * param_3, mDoExt_McaMorfCallBack1_c * param_4, mDoExt_McaMorfCallBack2_c * param_5, J3DAnmTransformKey * param_6, int param_7, float param_8, int param_9, int param_10, int param_11, void * param_12, ulong param_13, ulong param_14);
void J3DFrameCtrl__J3DFrameCtrl_destructor(J3DFrameCtrl * this);
undefined mDoExt_McaMorf__calc_vtbl_cb(mDoExt_McaMorf * this, ushort param_1);
undefined mDoExt_McaMorf__setAnm(mDoExt_McaMorf * this, J3DAnmTransform * param_1, J3DFrameCtrl__LoopMode loopMode, float morf, float speed, float startFrame, float duration, void * param_7);
undefined mDoExt_McaMorf__setMorf(mDoExt_McaMorf * this, float param_1);
undefined mDoExt_McaMorf__play(mDoExt_McaMorf * this, cXyz * param_1, ulong param_2, char param_3);
undefined mDoExt_McaMorf__update(mDoExt_McaMorf * this);
undefined mDoExt_McaMorf__updateDL(mDoExt_McaMorf * this);
// undefined mDoExt_McaMorf__updateDL(mDoExt_McaMorf * this, J3DMaterialTable * param_1);
undefined mDoExt_McaMorf__entry(mDoExt_McaMorf * this);
undefined mDoExt_McaMorf__entryDL(mDoExt_McaMorf * this);
// undefined mDoExt_McaMorf__entryDL(mDoExt_McaMorf * this, J3DMaterialTable * param_1);
undefined mDoExt_McaMorf__calc(mDoExt_McaMorf * this);
undefined mDoExt_McaMorf__stopZelAnime(mDoExt_McaMorf * this);
void mDoExt_McaMorf2__mDoExt_McaMorf2(mDoExt_McaMorf2 * this, J3DModelData * param_1, mDoExt_McaMorfCallBack1_c * param_2, mDoExt_McaMorfCallBack2_c * param_3, J3DAnmTransform * param_4, J3DAnmTransform * param_5, int param_6, float param_7, int param_8, int param_9, int param_10, void * param_11, ulong param_12, ulong param_13);
undefined mDoExt_McaMorf2__ERROR_EXIT(mDoExt_McaMorf2 * this);
undefined mDoExt_McaMorf2__calc(mDoExt_McaMorf2 * this, ushort param_1);
undefined mDoExt_McaMorf2__setAnm(mDoExt_McaMorf2 * this, J3DAnmTransform * param_1, J3DAnmTransform * param_2, float param_3, int param_4, float param_5, float param_6, float param_7, float param_8, void * param_9);
undefined mDoExt_McaMorf2__setMorf(mDoExt_McaMorf2 * this, float param_1);
undefined mDoExt_McaMorf2__play(mDoExt_McaMorf2 * this, Vec * param_1, ulong param_2, char param_3);
undefined mDoExt_McaMorf2__entryDL(mDoExt_McaMorf2 * this);
// undefined mDoExt_McaMorf2__calc(mDoExt_McaMorf2 * this);
undefined mDoExt_McaMorf2__stopZelAnime(mDoExt_McaMorf2 * this);
undefined mDoExt_offCupOnAupPacket__draw(mDoExt_offCupOnAupPacket * this);
undefined mDoExt_onCupOffAupPacket__draw(mDoExt_onCupOffAupPacket * this);
undefined mDoExt_invJntPacket__draw(mDoExt_invJntPacket * this);
int mDoExt_3Dline_c__init(mDoExt_3Dline_c * this, int numSegments, int param_2);
void cXyz__cXyz(cXyz * this);
int mDoExt_3DlineMat0_c__init(mDoExt_3DlineMat0_c * this, ushort numLines, ushort numSegmentsPerLine, int param_3);
void mDoExt_3Dline_c__mDoExt_3Dline_c_destructor(mDoExt_3Dline_c * this);
void mDoExt_3Dline_c__mDoExt_3Dline_c(mDoExt_3Dline_c * this);
void mDoExt_3DlineMat0_c__setMaterial(mDoExt_3DlineMat0_c * this);
undefined mDoExt_3DlineMat0_c__draw(mDoExt_3DlineMat0_c * this);
undefined mDoExt_3DlineMat0_c__update(mDoExt_3DlineMat0_c * this, ushort param_1, float param_2, _GXColor * color, ushort param_4, dKy_tevstr_c * param_5);
// undefined mDoExt_3DlineMat0_c__update(mDoExt_3DlineMat0_c * this, ushort param_1, _GXColor * param_2, dKy_tevstr_c * param_3);
int mDoExt_3DlineMat1_c__init(mDoExt_3DlineMat1_c * this, ushort param_1, ushort param_2, ResTIMG * param_3, int param_4);
undefined mDoExt_3DlineMat1_c__setMaterial(mDoExt_3DlineMat1_c * this);
undefined mDoExt_3DlineMat1_c__draw(mDoExt_3DlineMat1_c * this);
undefined mDoExt_3DlineMat1_c__update(mDoExt_3DlineMat1_c * this, ushort param_1, float param_2, _GXColor * param_3, ushort param_4, dKy_tevstr_c * param_5);
// undefined mDoExt_3DlineMat1_c__update(mDoExt_3DlineMat1_c * this, ushort param_1, _GXColor * param_2, dKy_tevstr_c * param_3);
undefined mDoExt_3DlineMatSortPacket__setMat(mDoExt_3DlineMatSortPacket * this, mDoExt_3DlineMat_c * param_1);
undefined mDoExt_3DlineMatSortPacket__draw(mDoExt_3DlineMatSortPacket * this);
undefined mDoExt_initFontCommon();
void JUTFont__JUTFont_destructor(JUTFont * this);
undefined mDoExt_initFont0();
undefined mDoExt_getMesgFont();
undefined mDoExt_removeMesgFont();
undefined mDoExt_initFont1();
undefined mDoExt_getRubyFont();
undefined mDoExt_removeRubyFont();
J3DModel * mDoExt_J3DModel__create(J3DModelData * model, ulong param_2, ulong param_3);
undefined JUTFont__setGX(JUTFont * this, TColor param_1, TColor param_2);
undefined JUTFont__getCellWidth(JUTFont * this);
undefined JUTFont__getCellHeight(JUTFont * this);
void mDoExt_3DlineMatSortPacket__mDoExt_3DlineMatSortPacket_destructor(mDoExt_3DlineMatSortPacket * this);
undefined mDoExt_3DlineMat1_c__getMaterialID(mDoExt_3DlineMat1_c * this);
undefined mDoExt_3DlineMat0_c__getMaterialID(mDoExt_3DlineMat0_c * this);
void mDoExt_onCupOffAupPacket__mDoExt_onCupOffAupPacket_destructor(mDoExt_onCupOffAupPacket * this);
void mDoExt_offCupOnAupPacket__mDoExt_offCupOnAupPacket_destructor(mDoExt_offCupOnAupPacket * this);
void mDoExt_McaMorf2__mDoExt_McaMorf2_destructor(mDoExt_McaMorf2 * this);
int J3DMtxCalcMaya__init(J3DMtxCalcMaya * this, EVP_PKEY_CTX * ctx);
void mDoExt_McaMorf__mDoExt_McaMorf_destructor(mDoExt_McaMorf * this);
void mDoExt_MtxCalcAnmBlendTblOld__mDoExt_MtxCalcAnmBlendTblOld_destructor(mDoExt_MtxCalcAnmBlendTblOld * this);
void mDoExt_MtxCalcAnmBlendTbl__mDoExt_MtxCalcAnmBlendTbl_destructor(mDoExt_MtxCalcAnmBlendTbl * this);
void J3DMtxCalcMayaAnm__J3DMtxCalcMayaAnm_destructor(J3DMtxCalcMayaAnm * this);
undefined J3DMtxCalcMayaAnm__calc(J3DMtxCalcMayaAnm * this, ushort param_1);
int J3DMtxCalc__init(J3DMtxCalc * this, EVP_PKEY_CTX * ctx);
undefined J3DMtxCalc__recursiveCalc(J3DMtxCalc * this, J3DNode * param_1);
undefined J3DMtxCalc__calcTransform(J3DMtxCalc * this, ushort param_1, J3DTransformInfo * param_2);
undefined J3DMtxCalc__calc(J3DMtxCalc * this, ushort param_1);
// undefined J3DMtxCalcMayaAnm__calc(J3DMtxCalcMayaAnm * this, ushort param_1);
// undefined J3DMtxCalcMayaAnm__calc(J3DMtxCalcMayaAnm * this, ushort param_1);
// void J3DMtxCalcMayaAnm__J3DMtxCalcMayaAnm_destructor(J3DMtxCalcMayaAnm * this);
// undefined mDoExt_MtxCalcAnmBlendTbl__calc(mDoExt_MtxCalcAnmBlendTbl * this, ushort param_1);
undefined J3DMtxCalcMaya__calcTransform(J3DMtxCalcMaya * this, ushort param_1, J3DTransformInfo * param_2);
undefined J3DMtxCalcBasic__recursiveCalc(J3DMtxCalcBasic * this, J3DNode * param_1);
// int J3DMtxCalcMaya__init(J3DMtxCalcMaya * this, EVP_PKEY_CTX * ctx);
// undefined mDoExt_MtxCalcAnmBlendTblOld__calc(mDoExt_MtxCalcAnmBlendTblOld * this, ushort param_1);
// undefined J3DMtxCalcMaya__calcTransform(J3DMtxCalcMaya * this, ushort param_1, J3DTransformInfo * param_2);
// undefined J3DMtxCalcBasic__recursiveCalc(J3DMtxCalcBasic * this, J3DNode * param_1);
// int J3DMtxCalcMaya__init(J3DMtxCalcMaya * this, EVP_PKEY_CTX * ctx);
// undefined mDoExt_McaMorf__calc(mDoExt_McaMorf * this, ushort param_1);
// undefined J3DMtxCalcMaya__calcTransform(J3DMtxCalcMaya * this, ushort param_1, J3DTransformInfo * param_2);
// undefined J3DMtxCalcBasic__recursiveCalc(J3DMtxCalcBasic * this, J3DNode * param_1);
// int J3DMtxCalcMaya__init(J3DMtxCalcMaya * this, EVP_PKEY_CTX * ctx);
// undefined mDoExt_McaMorf2__calc(mDoExt_McaMorf2 * this, ushort param_1);
// undefined J3DMtxCalcMaya__calcTransform(J3DMtxCalcMaya * this, ushort param_1, J3DTransformInfo * param_2);
// undefined J3DMtxCalcBasic__recursiveCalc(J3DMtxCalcBasic * this, J3DNode * param_1);
// int J3DMtxCalcMaya__init(J3DMtxCalcMaya * this, EVP_PKEY_CTX * ctx);
undefined m_Do_lib__mDoLib_setResTimgObj(ResTIMG * param_1, undefined4 param_2, long param_3, GXTlutObj * param_4);
undefined mDoLib_clipper__setup(mDoLib_clipper * this, float param_1, float param_2, float param_3, float param_4);
void m_Do_lib__mDoLib_project(cXyz * param_1, cXyz * param_2);
undefined m_Do_lib__mDoLib_pos2camera();
undefined m_Do_lib__mDoLib_cnvind32();
undefined m_Do_lib__mDoLib_cnvind16();
undefined m_Do_lib____sinit_m_Do_lib_cpp();
void J3DUClipper__J3DUClipper_destructor(J3DUClipper * this);
undefined mDoHIO_root_c__update(mDoHIO_root_c * this);
undefined mDoHIO_subRoot_c__createChild(mDoHIO_subRoot_c * this, char * param_1, JORReflexible * param_2);
undefined mDoHIO_subRoot_c__deleteChild(mDoHIO_subRoot_c * this, char param_1);
undefined m_Do_hostIO____sinit_m_Do_hostIO_cpp();
void mDoHIO_root_c__mDoHIO_root_c_destructor(mDoHIO_root_c * this);
void mDoHIO_subRoot_c__mDoHIO_subRoot_c_destructor(mDoHIO_subRoot_c * this);
void mDoHIO_child_c__mDoHIO_child_c_destructor(mDoHIO_child_c * this);
void mDoHIO_child_c__mDoHIO_child_c(mDoHIO_child_c * this);
undefined m_Do_Reset__my_OSCancelAlarmAll();
undefined m_Do_Reset__destroyVideo();
undefined m_Do_Reset__mDoRst_reset();
undefined m_Do_Reset__mDoRst_resetCallBack();
undefined mDoRst__getResetData(mDoRst * this);
undefined mDoDvdThd__main(mDoDvdThd * this, void * param_1);
undefined mDoDvdThd__create(mDoDvdThd * this, long param_1);
undefined mDoDvdThd__suspend(mDoDvdThd * this);
undefined m_Do_dvd_thread__my_DVDConvertPathToEntrynum();
void mDoDvdThd_command_c__mDoDvdThd_command_c_destructor(mDoDvdThd_command_c * this);
void mDoDvdThd_param_c__mDoDvdThd_param_c(mDoDvdThd_param_c * this);
undefined mDoDvdThd_param_c__kick(mDoDvdThd_param_c * this);
undefined mDoDvdThd_param_c__waitForKick(mDoDvdThd_param_c * this);
undefined mDoDvdThd_param_c__getFirstCommand(mDoDvdThd_param_c * this);
undefined mDoDvdThd_param_c__addition(mDoDvdThd_param_c * this, mDoDvdThd_command_c * param_1);
undefined mDoDvdThd_param_c__cut(mDoDvdThd_param_c * this, mDoDvdThd_command_c * param_1);
undefined m_Do_dvd_thread__cb();
undefined mDoDvdThd_param_c__mainLoop(mDoDvdThd_param_c * this);
void mDoDvdThd_command_c__mDoDvdThd_command_c(mDoDvdThd_command_c * this);
void mDoDvdThd_callback_c__mDoDvdThd_callback_c_destructor(mDoDvdThd_callback_c * this);
void mDoDvdThd_callback_c__mDoDvdThd_callback_c(mDoDvdThd_callback_c * this, void * param_1, void * param_2);
undefined mDoDvdThd_callback_c__create(mDoDvdThd_callback_c * this, void * param_1, void * param_2);
undefined mDoDvdThd_callback_c__execute(mDoDvdThd_callback_c * this);
void mDoDvdThd_mountArchive_c__mDoDvdThd_mountArchive_c_destructor(mDoDvdThd_mountArchive_c * this);
void mDoDvdThd_mountArchive_c__mDoDvdThd_mountArchive_c(mDoDvdThd_mountArchive_c * this, uchar param_1);
mDoDvdThd_command_c * mDoDvdThd_mountArchive_c__create(char * param_1, uchar param_2, JKRHeap * param_3);
undefined mDoDvdThd_mountArchive_c__execute(mDoDvdThd_mountArchive_c * this);
void mDoDvdThd_mountXArchive_c__mDoDvdThd_mountXArchive_c_destructor(mDoDvdThd_mountXArchive_c * this);
void mDoDvdThd_mountXArchive_c__mDoDvdThd_mountXArchive_c(mDoDvdThd_mountXArchive_c * this, uchar param_1, EMountMode param_2);
mDoDvdThd_mountXArchive_c * mDoDvdThd_mountXArchive_c__create(char * param_1, byte param_2, EMountMode param_3);
undefined mDoDvdThd_mountXArchive_c__execute(mDoDvdThd_mountXArchive_c * this);
void mDoDvdThd_toMainRam_c__mDoDvdThd_toMainRam_c(mDoDvdThd_toMainRam_c * this, uchar param_1);
undefined mDoDvdThd_toMainRam_c__create(char * param_1, uchar param_2, JKRHeap * param_3);
void mDoDvdThd_toMainRam_c__mDoDvdThd_toMainRam_c_destructor(mDoDvdThd_toMainRam_c * this);
undefined mDoDvdThd_toMainRam_c__execute(mDoDvdThd_toMainRam_c * this);
undefined m_Do_dvd_thread____sinit_m_Do_dvd_thread_cpp();
undefined m_Do_DVDError__mDoDvdErr_ThdInit();
undefined m_Do_DVDError__mDoDvdErr_ThdCleanup();
undefined m_Do_DVDError__mDoDvdErr_Watch();
undefined m_Do_DVDError__AlarmHandler();
void mDoMemCd_Ctrl_c__mDoMemCd_Ctrl_c(mDoMemCd_Ctrl_c * this);
undefined mDoMemCd_Ctrl_c__ThdInit(mDoMemCd_Ctrl_c * this);
undefined mDoMemCd_Ctrl_c__main(mDoMemCd_Ctrl_c * this);
undefined mDoMemCd_Ctrl_c__update(mDoMemCd_Ctrl_c * this);
undefined mDoMemCd_Ctrl_c__restore(mDoMemCd_Ctrl_c * this);
undefined mDoMemCd_Ctrl_c__store(mDoMemCd_Ctrl_c * this);
undefined mDoMemCd_Ctrl_c__command_format(mDoMemCd_Ctrl_c * this);
undefined mDoMemCd_Ctrl_c__save(mDoMemCd_Ctrl_c * this, void * param_1, ulong param_2, ulong param_3);
undefined mDoMemCd_Ctrl_c__load(mDoMemCd_Ctrl_c * this);
undefined mDoMemCd_Ctrl_c__LoadSync(mDoMemCd_Ctrl_c * this, void * param_1, ulong param_2, ulong param_3);
undefined mDoMemCd_Ctrl_c__SaveSync(mDoMemCd_Ctrl_c * this);
undefined mDoMemCd_Ctrl_c__getStatus(mDoMemCd_Ctrl_c * this, ulong param_1);
undefined mDoMemCd_Ctrl_c__format(mDoMemCd_Ctrl_c * this);
undefined mDoMemCd_Ctrl_c__FormatSync(mDoMemCd_Ctrl_c * this);
undefined mDoMemCd_Ctrl_c__attach(mDoMemCd_Ctrl_c * this);
undefined mDoMemCd_Ctrl_c__detach(mDoMemCd_Ctrl_c * this);
int mDoMemCd_Ctrl_c__mount(mDoMemCd_Ctrl_c * this, char * __special_file, char * __dir, char * __fstype, ulong __rwflag, void * __data);
undefined mDoMemCd_Ctrl_c__loadfile(mDoMemCd_Ctrl_c * this);
undefined mDoMemCd_Ctrl_c__checkspace(mDoMemCd_Ctrl_c * this);
undefined mDoMemCd_Ctrl_c__setCardState(mDoMemCd_Ctrl_c * this, long param_1);
undefined m_Do_MemCard__mDoMemCd_main();
undefined m_Do_MemCard____sinit_m_Do_MemCard_cpp();
undefined m_Do_MemCardRWmng__mDoMemCdRWm_Store();
undefined m_Do_MemCardRWmng__mDoMemCdRWm_Restore();
undefined m_Do_MemCardRWmng__mDoMemCdRWm_BuildHeader();
undefined m_Do_MemCardRWmng__mDoMemCdRWm_SetCardStat();
undefined m_Do_MemCardRWmng__mDoMemCdRWm_CheckCardStat();
undefined m_Do_MemCardRWmng__mDoMemCdRWm_CalcCheckSum();
undefined m_Do_MemCardRWmng__mDoMemCdRWm_CalcCheckSumPictData();
undefined m_Do_MemCardRWmng__mDoMemCdRWm_TestCheckSumPictData();
undefined m_Do_MemCardRWmng__mDoMemCdRWm_SetCheckSumPictData();
undefined m_Do_MemCardRWmng__mDoMemCdRWm_CalcCheckSumGameData();
undefined m_Do_MemCardRWmng__mDoMemCdRWm_TestCheckSumGameData();
undefined m_Do_MemCardRWmng__mDoMemCdRWm_SetCheckSumGameData();
undefined m_Do_gba_com__ProbeCheck_0();
undefined m_Do_gba_com__ProbeCheck_1();
undefined m_Do_gba_com__CodeExchange_0();
undefined m_Do_gba_com__CodeExchange_1();
undefined m_Do_gba_com__CodeExchange_2();
undefined m_Do_gba_com__CodeExchange_3();
undefined m_Do_gba_com__CodeExchange_4();
undefined m_Do_gba_com__ContextCheck();
undefined m_Do_gba_com__ContextSend();
undefined m_Do_gba_com__ContextRead();
undefined m_Do_gba_com__GbaWriteResult();
undefined m_Do_gba_com__GbaReadResult();
undefined m_Do_gba_com__GbaReset();
undefined mDoGaC_agbCom_c__mDoGaC_Initial(mDoGaC_agbCom_c * this, mDoGaC_DataManag_c * param_1, uchar param_2);
undefined mDoGaC_agbCom_c__mDoGaC_ComOpen(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_ComClose(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_ComStart(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_ComStop(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_GbaReboot(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_GbaReset(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_ComRestart(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_Connect(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_ConnectSleep(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_ConnectWake(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_GbaLink(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_SendDataSet(mDoGaC_agbCom_c * this, ulong * param_1, int param_2, uchar param_3, ulong param_4);
undefined mDoGaC_agbCom_c__mDoGaC_SendDataWrite(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_SendEntry(mDoGaC_agbCom_c * this, uchar param_1, ulong param_2);
undefined mDoGaC_agbCom_c__mDoGaC_SendStatusCheck(mDoGaC_agbCom_c * this, uchar param_1);
undefined mDoGaC_agbCom_c__mDoGaC_SendEndCheck(mDoGaC_agbCom_c * this, uchar param_1);
undefined mDoGaC_agbCom_c__mDoGaC_RecvStatusCheck(mDoGaC_agbCom_c * this, uchar param_1);
undefined mDoGaC_agbCom_c__mDoGaC_DataStatusReset(mDoGaC_agbCom_c * this, uchar param_1);
undefined mDoGaC_agbCom_c__mDoGaC_StatusSendSet(mDoGaC_agbCom_c * this, uchar param_1);
undefined mDoGaC_agbCom_c__mDoGaC_ProbeCheck0(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_ProbeCheck1(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_CodeExchange0(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_CodeExchange1(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_CodeExchange2(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_CodeExchange3(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_CodeExchange4(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_ContextCheck(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_ContextSend(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_ContextRead(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_GbaWrite(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_WriteResult(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_GbaRead(mDoGaC_agbCom_c * this);
undefined mDoGaC_agbCom_c__mDoGaC_ReadResult(mDoGaC_agbCom_c * this);
undefined m_Do_gba_com__BigLittleChange();
undefined m_Do_gba_com____sinit_m_Do_gba_com_cpp();
void mDoGaC_agbCom_c__mDoGaC_agbCom_c_destructor(mDoGaC_agbCom_c * this);
undefined m_Do_machine_exception__print_f();
undefined m_Do_machine_exception__print();
undefined m_Do_machine_exception__dispHeapInfo();
undefined m_Do_machine_exception__dispGameInfo();
undefined m_Do_machine_exception__dispDateInfo();
undefined m_Do_machine_exception__dispConsoleToTerminal();
undefined m_Do_machine_exception__exception_addition();
undefined c_damagereaction__ice_bg_check();
undefined c_damagereaction__enemy_ice(enemyice * this);
void csXyz__csXyz_destructor(csXyz * this);
undefined c_damagereaction__enemy_fire(enemyfire * this);
undefined c_damagereaction__enemy_fire_remove(enemyfire * this);
undefined c_damagereaction__enemy_piyo_set();
undefined c_damagereaction__wall_angle_get();
void dBgS_LinChk__dBgS_LinChk_destructor(dBgS_LinChk * this);
void dBgS_Chk__dBgS_Chk_destructor(dBgS_Chk * this);
void dBgS_GrpPassChk__dBgS_GrpPassChk_destructor(dBgS_GrpPassChk * this);
void cBgS_GrpPassChk__cBgS_GrpPassChk_destructor(cBgS_GrpPassChk * this);
void dBgS_PolyPassChk__dBgS_PolyPassChk_destructor(dBgS_PolyPassChk * this);
void cBgS_PolyPassChk__cBgS_PolyPassChk_destructor(cBgS_PolyPassChk * this);
void cBgS_LinChk__cBgS_LinChk_destructor(cBgS_LinChk * this);
void cM3dGLin__cM3dGLin_destructor(cM3dGLin * this);
void cBgS_PolyInfo__cBgS_PolyInfo_destructor(cBgS_PolyInfo * this);
undefined c_damagereaction__dr_body_bg_check();
void dBgS_ObjGndChk_Spl__dBgS_ObjGndChk_Spl_destructor(dBgS_ObjGndChk_Spl * this);
void dBgS_ObjGndChk__dBgS_ObjGndChk_destructor(dBgS_ObjGndChk * this);
void dBgS_GndChk__dBgS_GndChk_destructor(dBgS_GndChk * this);
void cBgS_GndChk__cBgS_GndChk_destructor(cBgS_GndChk * this);
undefined c_damagereaction__dr_joint_bg_check();
void dBgS_ObjGndChk_Yogan__dBgS_ObjGndChk_Yogan_destructor(dBgS_ObjGndChk_Yogan * this);
undefined c_damagereaction__kado_check();
undefined c_damagereaction__hang_ang_get();
undefined c_damagereaction__dr_damage_set();
undefined c_damagereaction__dr_damage_anime();
undefined c_damagereaction__dr_matrix_set();
undefined c_damagereaction__damage_reaction();
undefined c_damagereaction____sinit_c_damagereaction_cpp();
// void cBgS_LinChk__cBgS_LinChk_destructor(cBgS_LinChk * this);
// void dBgS_Chk__dBgS_Chk_destructor(dBgS_Chk * this);
// void dBgS_LinChk__dBgS_LinChk_destructor(dBgS_LinChk * this);
// void dBgS_LinChk__dBgS_LinChk_destructor(dBgS_LinChk * this);
// void dBgS_LinChk__dBgS_LinChk_destructor(dBgS_LinChk * this);
// void dBgS_GndChk__dBgS_GndChk_destructor(dBgS_GndChk * this);
// void dBgS_GndChk__dBgS_GndChk_destructor(dBgS_GndChk * this);
// void dBgS_GndChk__dBgS_GndChk_destructor(dBgS_GndChk * this);
// void dBgS_ObjGndChk__dBgS_ObjGndChk_destructor(dBgS_ObjGndChk * this);
// void dBgS_ObjGndChk__dBgS_ObjGndChk_destructor(dBgS_ObjGndChk * this);
// void dBgS_ObjGndChk__dBgS_ObjGndChk_destructor(dBgS_ObjGndChk * this);
// void dBgS_ObjGndChk_Spl__dBgS_ObjGndChk_Spl_destructor(dBgS_ObjGndChk_Spl * this);
// void dBgS_ObjGndChk_Spl__dBgS_ObjGndChk_Spl_destructor(dBgS_ObjGndChk_Spl * this);
// void dBgS_ObjGndChk_Spl__dBgS_ObjGndChk_Spl_destructor(dBgS_ObjGndChk_Spl * this);
// void cBgS_GndChk__cBgS_GndChk_destructor(cBgS_GndChk * this);
// void dBgS_ObjGndChk_Yogan__dBgS_ObjGndChk_Yogan_destructor(dBgS_ObjGndChk_Yogan * this);
// void dBgS_ObjGndChk_Yogan__dBgS_ObjGndChk_Yogan_destructor(dBgS_ObjGndChk_Yogan * this);
// void dBgS_ObjGndChk_Yogan__dBgS_ObjGndChk_Yogan_destructor(dBgS_ObjGndChk_Yogan * this);
undefined c_dylink__cCc_Init();
undefined c_dylink__cDyl_IsLinked();
undefined c_dylink__cDyl_Unlink();
undefined4 c_dylink__cDyl_LinkASync(ushort param_1);
undefined c_dylink__cDyl_InitCallback();
undefined c_dylink__cDyl_InitAsync();
undefined c_dylink__cDyl_InitAsyncIsDone();
undefined cDylPhs__phase_01(cDylPhs * this, void * param_1);
undefined cDylPhs__phase_02(cDylPhs * this, short * param_1);
undefined cDylPhs__phase_03(cDylPhs * this, void * param_1);
undefined cDylPhs__Link(cDylPhs * this, request_of_phase_process_class * param_1, short param_2);
undefined cDylPhs__Unlink(cDylPhs * this, request_of_phase_process_class * param_1, short param_2);
undefined DynamicModuleControlBase__getModuleName(DynamicModuleControlBase * this);
void DynamicModuleControl__DynamicModuleControl_destructor(DynamicModuleControl * this);
void fapGm_HIO_c__fapGm_HIO_c(fapGm_HIO_c * this);
undefined f_ap_game__fapGm_After();
undefined f_ap_game__fapGm_Execute();
undefined f_ap_game__fapGm_Create();
void fapGm_HIO_c__fapGm_HIO_c_destructor(fapGm_HIO_c * this);
undefined f_ap_game____sinit_f_ap_game_cpp();
void fopAc_ac_c__fopAc_ac_c(fopAc_ac_c * this);
void fopAc_cullSizeSphere__fopAc_cullSizeSphere_destructor(fopAc_cullSizeSphere * this);
void fopAc_cullSizeBox__fopAc_cullSizeBox_destructor(fopAc_cullSizeBox * this);
void dKy_tevstr_c__dKy_tevstr_c_destructor(dKy_tevstr_c * this);
void dEvt_info_c__dEvt_info_c_destructor(dEvt_info_c * this);
void fopAc_ac_c__fopAc_ac_c_destructor(fopAc_ac_c * this);
bool fopAc_IsActor(void * param_1);
void fopAc_Draw(fopAc_ac_c * param_1);
int fopAc_Execute(fopAc_ac_c * this);
undefined fopAc_IsDelete();
int fopAc_Delete(fopAc_ac_c * param_1);
int fopAc_Create(fopAc_ac_c * param_1);
undefined f_op_actor_iter__fopAcIt_Executor();
fopAc_ac_c * f_op_actor_iter__fopAcIt_Judge(undefined * param_1, void * param_2);
undefined f_op_actor_tag__fopAcTg_ToActorQ();
void f_op_actor_tag__fopAcTg_ActorQTo(create_tag_class * param_1);
undefined f_op_actor_tag__fopAcTg_Init();
void fopAcM_setStageLayer(fopAc_ac_c * param_1);
void fopAcM_setRoomLayer(fopAc_ac_c * param_1, int param_2);
undefined fopAcM_SearchByID();
undefined4 fopAcM_SearchByName(short param_1, fopAc_ac_c * * param_2);
fopAcM_prm_class * fopAcM_CreateAppend(void);
undefined4 * createAppend(ulong parameters, cXyz * pPos, int roomNo, csXyz * angle, cXyz * scale, char subtype, uint parentUniqueID);
undefined fopAcM_Log();
undefined fopAcM_delete();
// undefined fopAcM_delete();
undefined4 fopAcM_create(short procName, ulong parameters, cXyz * pPos, int roomNo, csXyz * pAngle, cXyz * pScale, byte subtype, pointer param_8);
// undefined4 fopAcM_create(char * param_1, ulong param_2, cXyz * param_3, int param_4, csXyz * param_5, cXyz * param_6, undefined * param_7);
fopAc_ac_c * fopAcM_fastCreate(short actorID, undefined4 parameters, undefined4 position, undefined4 roomNo, undefined4 rotationAndAuxParams, undefined4 scale, undefined1 subtype, undefined4 param_8, undefined4 param_9);
// undefined fopAcM_fastCreate();
undefined4 fopAcM_createChild(short param_1, uint parentUniqueID, ulong param_3, cXyz * param_4, int param_5, csXyz * param_6, cXyz * param_7, char param_8, undefined * param_9);
// int fopAcM_createChild(char * param_1, undefined4 param_2, undefined4 param_3, undefined4 param_4, undefined4 param_5, undefined4 param_6, undefined4 param_7, undefined4 param_8);
undefined fopAcM_createChildFromOffset(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined4 param_9);
// undefined fopAcM_createChildFromOffset();
undefined fopAcM_createHeap();
undefined fopAcM_adjustHeap();
undefined fopAcM_DeleteHeap();
undefined4 fopAcM_entrySolidHeap(fopAc_ac_c * actor, void * createHeapCB, ulong maxHeapSize);
void fopAcM_setCullSizeBox(fopAc_ac_c * param_1, double param_2, double param_3, double param_4, double param_5, double param_6, double param_7);
void fopAcM_setCullSizeSphere(fopAc_ac_c * param_1, float param_2, float param_3, float param_4, float param_5);
uint fopAcM_addAngleY(fopAc_ac_c * param_1, short param_2, short param_3);
void fopAcM_calcSpeed(fopAc_ac_c * param_1);
void fopAcM_posMove(fopAc_ac_c * param_1, cXyz * param_2);
void fopAcM_posMoveF(fopAc_ac_c * param_1, cXyz * param_2);
undefined fopAcM_searchActorAngleY();
short fopAcM_seenActorAngleY(fopAc_ac_c * param_1, fopAc_ac_c * param_2);
undefined fopAcM_searchActorDistance();
undefined fopAcM_searchActorDistance2();
undefined fopAcM_searchActorDistanceXZ();
undefined fopAcM_searchActorDistanceXZ2();
undefined4 fopAcM_rollPlayerCrash(fopAc_ac_c * param_1, float param_2, undefined4 param_3);
uint fopAcM_checkCullingBox(MTX34 * param_1, float param_2, float param_3, float param_4, float param_5, float param_6, float param_7);
undefined4 fopAcM_cullingCheck(fopAc_ac_c * param_1);
undefined fopAcM_orderTalkEvent();
undefined fopAcM_orderTalkXBtnEvent();
undefined fopAcM_orderTalkYBtnEvent();
undefined fopAcM_orderTalkZBtnEvent();
void fopAcM_orderZHintEvent(fopAc_ac_c * param_1, fopAc_ac_c * param_2);
undefined fopAcM_orderSpeakEvent();
undefined fopAcM_orderDoorEvent();
undefined fopAcM_orderCatchEvent();
undefined fopAcM_orderOtherEvent2();
undefined fopAcM_orderChangeEvent();
// undefined fopAcM_orderChangeEvent();
undefined fopAcM_orderChangeEventId();
// undefined fopAcM_orderChangeEventId();
undefined fopAcM_orderOtherEventId(fopAc_ac_c * this, undefined2 eventIndex, undefined1 param_3, undefined2 param_4, undefined2 param_5, undefined2 param_6);
undefined fopAcM_orderPotentialEvent();
undefined fopAcM_orderItemEvent();
undefined fopAcM_orderTreasureEvent();
undefined fopAcM_getTalkEventPartner();
undefined fopAcM_getItemEventPartner();
undefined fopAcM_getEventPartner();
undefined fopAcM_createItemForPresentDemo();
undefined fopAcM_createItemForTrBoxDemo();
undefined fopAcM_createItemFromTable();
undefined fopAcM_createRaceItemFromTable();
undefined fopAcM_createShopItem();
undefined fopAcM_createRaceItem();
undefined fopAcM_createDemoItem();
undefined fopAcM_createItemForBoss(cXyz * position, int param_2, int roomNo, csXyz * rotation, cXyz * scale, undefined4 param_6);
undefined fopAcM_createItem(cXyz * position, dItem_data__ItemNo itemNo, int itemPickupFlag, int roomNo, uint param_5, csXyz * rotation, int itemAction, cXyz * scale);
undefined fopAcM_fastCreateItem2(cXyz * position, undefined4 param_2, undefined4 param_3, undefined4 roomNo, undefined4 param_5, csXyz * rotation, undefined4 param_7, cXyz * scale);
undefined fopAcM_createItemForKP2();
undefined fopAcM_createItemForSimpleDemo();
daItem_c * fopAcM_fastCreateItem(cXyz * position, uint itemNo, int roomNum, csXyz * rotation, cXyz * scale, double speed, double param_7, double param_8, uint itemPickupFlag, undefined4 param_10);
undefined stealItem_CB();
undefined fopAcM_createStealItem();
undefined fopAcM_createItemFromEnemyTable();
undefined fopAcM_createIball(cXyz * param_1, int param_2, int param_3, csXyz * param_4, int param_5);
undefined fopAcM_createWarpFlower();
undefined enemySearchJugge(fopAc_ac_c * param_1);
undefined fopAcM_myRoomSearchEnemy();
undefined fopAcM_createDisappear();
undefined fopAcM_getGroundAngle(fopAc_ac_c * param_1, csXyz * param_2);
undefined fopAcM_setCarryNow();
undefined fopAcM_cancelCarryNow();
undefined fopAcM_viewCutoffCheck();
undefined fopAcM_otoCheck();
char * fopAcM_getProcNameString(fopAc_ac_c * param_1);
int fopAcM_findObjectCB(fopAc_ac_c * param_1, char * * param_2);
undefined fopAcM_searchFromName();
uint fopAcM_getWaterY(cXyz * param_1, float * param_2);
void dBgS_WtrChk__dBgS_WtrChk_destructor(dBgS_WtrChk * this);
undefined fopAcM_setGbaName(fopAc_ac_c * this, dItem_data__ItemNo itemNo, GbaNames gbaNameIfNotHaveItem, GbaNames gbaNameIfHaveItem);
undefined fpoAcM_absolutePos(fopAc_ac_c * param_1, cXyz * param_2, cXyz * param_3);
undefined fpoAcM_relativePos(fopAc_ac_c * param_1, undefined4 param_2, cXyz * param_3);
void dBgS_SplGrpChk__dBgS_SplGrpChk_destructor(dBgS_SplGrpChk * this);
undefined __sinit_f_op_actor_mng_cpp();
void fopAc_cullSizeSphere__fopAc_cullSizeSphere(fopAc_cullSizeSphere * this, cXyz * param_1, float param_2);
void fopAc_cullSizeBox__fopAc_cullSizeBox(fopAc_cullSizeBox * this, fopAc_cullSizeBox * param_1);
// void fopAc_cullSizeBox__fopAc_cullSizeBox(fopAc_cullSizeBox * this, cXyz * param_1, cXyz * param_2);
void l_HIO__l_HIO_destructor(l_HIO * this);
// void dBgS_WtrChk__dBgS_WtrChk_destructor(dBgS_WtrChk * this);
// void dBgS_WtrChk__dBgS_WtrChk_destructor(dBgS_WtrChk * this);
// void dBgS_WtrChk__dBgS_WtrChk_destructor(dBgS_WtrChk * this);
// void dBgS_SplGrpChk__dBgS_SplGrpChk_destructor(dBgS_SplGrpChk * this);
// void dBgS_SplGrpChk__dBgS_SplGrpChk_destructor(dBgS_SplGrpChk * this);
// void dBgS_SplGrpChk__dBgS_SplGrpChk_destructor(dBgS_SplGrpChk * this);
undefined daPy_py_c__onFrollCrashFlg(daPy_py_c * this, ulong param_1);
undefined daPy_py_c__getGrabActorID(daPy_py_c * this);
undefined f_op_camera__fopCam_Draw();
undefined f_op_camera__fopCam_Execute(camera_class * param_1);
undefined f_op_camera__fopCam_IsDelete();
undefined f_op_camera__fopCam_Delete();
undefined f_op_camera__fopCam_Create();
undefined f_op_camera_mng__fopCamM_GetParam(camera_class * param_1);
undefined f_op_camera_mng__fopCamM_Create();
undefined f_op_camera_mng__fopCamM_Management();
undefined f_op_camera_mng__fopCamM_Init();
undefined f_op_overlap__fopOvlp_Draw();
undefined f_op_overlap__fopOvlp_Execute();
undefined f_op_overlap__fopOvlp_IsDelete();
undefined f_op_overlap__fopOvlp_Delete();
void f_op_overlap__fopOvlp_Create(void * param_1);
undefined f_op_overlap_mng__fopOvlpM_SceneIsStop();
undefined f_op_overlap_mng__fopOvlpM_SceneIsStart();
undefined f_op_overlap_mng__fopOvlpM_IsOutReq();
undefined f_op_overlap_mng__fopOvlpM_Done();
undefined f_op_overlap_mng__fopOvlpM_ToldAboutID();
undefined f_op_overlap_mng__fopOvlpM_IsPeek();
undefined f_op_overlap_mng__fopOvlpM_IsDone();
int f_op_overlap_mng__fopOvlpM_IsDoingReq(void);
undefined f_op_overlap_mng__fopOvlpM_ClearOfReq();
undefined f_op_overlap_mng__fopOvlpM_Request(short param_1, ushort param_2);
undefined f_op_overlap_mng__fopOvlpM_Management();
undefined f_op_overlap_mng__fopOvlpM_Cancel();
undefined f_op_overlap_mng__fopOvlpM_Init();
undefined f_op_overlap_req__fopOvlpReq_phase_Done();
undefined f_op_overlap_req__fopOvlpReq_phase_IsDone();
undefined f_op_overlap_req__fopOvlpReq_phase_IsWaitOfFadeout();
undefined f_op_overlap_req__fopOvlpReq_phase_WaitOfFadeout();
undefined f_op_overlap_req__fopOvlpReq_phase_IsComplete();
undefined f_op_overlap_req__fopOvlpReq_phase_IsCreated();
undefined f_op_overlap_req__fopOvlpReq_phase_Create();
void f_op_overlap_req__fopOvlpReq_Request(overlap_request_class * param_1, short param_2, ushort param_3);
undefined f_op_overlap_req__fopOvlpReq_Handler();
undefined f_op_overlap_req__fopOvlpReq_Cancel();
uint f_op_overlap_req__fopOvlpReq_Is_PeektimeLimit(overlap_request_class * param_1);
void f_op_overlap_req__fopOvlpReq_SetPeektime(overlap_request_class * param_1, ushort param_2);
undefined4 f_op_overlap_req__fopOvlpReq_OverlapClr(overlap_request_class * param_1);
undefined f_op_scene__fopScn_Draw();
undefined f_op_scene__fopScn_Execute();
undefined f_op_scene__fopScn_IsDelete();
undefined f_op_scene__fopScn_Delete();
void f_op_scene__fopScn_Create(scene_class * param_1);
scene_class * f_op_scene_iter__fopScnIt_Judge(pointer param_1, void * param_2);
scene_class * f_op_scene_mng__fopScnM_SearchByID(int param_1);
undefined f_op_scene_mng__fopScnM_ChangeReq(undefined4 param_1, undefined2 procName, undefined2 fadeTime, undefined2 param_4);
undefined f_op_scene_mng__fopScnM_DeleteReq(scene_class * param_1);
undefined f_op_scene_mng__fopScnM_CreateReq();
undefined f_op_scene_mng__fopScnM_ReRequest();
undefined f_op_scene_mng__fopScnM_Management();
undefined f_op_scene_mng__fopScnM_Init();
undefined f_op_scene_req__fopScnRq_phase_ClearOverlap();
undefined f_op_scene_req__fopScnRq_phase_Execute();
int f_op_scene_req__fopScnRq_phase_IsDoingOverlap(scene_request_class * param_1);
int f_op_scene_req__fopScnRq_phase_IsDoneOverlap(void);
undefined4 f_op_scene_req__fopScnRq_phase_Done(scene_request_class * param_1);
undefined f_op_scene_req__fopScnRq_Execute();
undefined f_op_scene_req__fopScnRq_PostMethod();
undefined f_op_scene_req__fopScnRq_Cancel();
int f_op_scene_req__fopScnRq_FadeRequest(short param_1, ushort param_2);
undefined4 f_op_scene_req__fopScnRq_Request(int param_1, scene_class * param_2, short procName, void * param_4, short fadeTime, ushort param_6);
undefined f_op_scene_req__fopScnRq_ReRequest();
undefined f_op_scene_req__fopScnRq_Handler();
undefined f_op_scene_tag__fopScnTg_QueueTo();
undefined f_op_scene_tag__fopScnTg_ToQueue();
undefined f_op_scene_tag__fopScnTg_Init(scene_tag_class * param_1, undefined4 param_2);
undefined f_op_view__fopVw_Draw();
undefined f_op_view__fopVw_Execute();
undefined f_op_view__fopVw_IsDelete();
undefined f_op_view__fopVw_Delete();
undefined f_op_view__fopVw_Create();
undefined f_op_kankyo__fopKy_Draw();
undefined f_op_kankyo__fopKy_Execute(kankyo_class * param_1);
undefined f_op_kankyo__fopKy_IsDelete();
undefined f_op_kankyo__fopKy_Delete();
undefined f_op_kankyo__fopKy_Create(kankyo_class * param_1);
undefined f_op_msg__fopMsg_Draw();
undefined f_op_msg__fopMsg_Execute();
undefined f_op_msg__fopMsg_IsDelete();
undefined f_op_msg__fopMsg_Delete();
undefined f_op_msg__fopMsg_Create();
void f_op_kankyo_mng__fopKyM_SearchByID(uint param_1);
fopKyM_prm_class * f_op_kankyo_mng__fopKyM_CreateAppend(void);
undefined4 * f_op_kankyo_mng__createAppend(int param_1, cXyz * param_2, cXyz * param_3);
undefined f_op_kankyo_mng__fopKyM_Delete();
undefined f_op_kankyo_mng__fopKyM_Create();
undefined f_op_kankyo_mng__fopKyM_create();
undefined f_op_kankyo_mng__fopKyM_fastCreate();
undefined f_op_kankyo_mng__fopKyM_createWpillar();
undefined f_op_kankyo_mng__fopKyM_createMpillar();
undefined MyPicture__drawSelf(MyPicture * this, float param_1, float param_2);
// undefined MyPicture__drawSelf(MyPicture * this, float param_1, float param_2, float * param_3);
undefined MyPicture__drawFullSet2(MyPicture * this, float param_1, float param_2, float param_3, float param_4, J2DBinding param_5, J2DMirror param_6, bool param_7, float * param_8);
bool f_op_msg_mng__fopMsgM_hyrule_language_check(undefined4 msg_id);
undefined f_op_msg_mng__fopMsgM_setStageLayer();
msg_class * f_op_msg_mng__fopMsgM_SearchByID(uint param_1);
undefined f_op_msg_mng__fopMsgM_SearchByName();
undefined f_op_msg_mng__fopMsgM_IsExecuting();
undefined f_op_msg_mng__fopMsgM_GetAppend();
undefined f_op_msg_mng__fopMsgM_Delete();
undefined f_op_msg_mng__createAppend();
undefined f_op_msg_mng__createMGameTermAppend();
undefined f_op_msg_mng__createTimerAppend();
undefined f_op_msg_mng__fopMsgM_create();
undefined f_op_msg_mng__fop_MGameTerm_create();
undefined f_op_msg_mng__fop_Timer_create();
undefined4 f_op_msg_mng__fopMsgM_messageTypeSelect(fopAc_ac_c * param_1, cXyz * param_2, ulong * param_3, ulong * param_4);
void fopMsgM_msgGet_c__fopMsgM_msgGet_c_destructor(fopMsgM_msgGet_c * this);
undefined f_op_msg_mng__fopMsgM_searchMessageNumber();
uint f_op_msg_mng__fopMsgM_messageSet(ulong msgId, fopAc_ac_c * actor);
// undefined f_op_msg_mng__fopMsgM_messageSet();
// undefined f_op_msg_mng__fopMsgM_messageSet();
undefined f_op_msg_mng__fopMsgM_scopeMessageSet();
undefined f_op_msg_mng__fopMsgM_tactMessageSet();
undefined f_op_msg_mng__fopMsgM_messageGet();
void fopMsgM_itemMsgGet_c__fopMsgM_itemMsgGet_c_destructor(fopMsgM_itemMsgGet_c * this);
undefined f_op_msg_mng__fopMsgM_passwordGet();
undefined f_op_msg_mng__fopMsgM_selectMessageGet();
undefined f_op_msg_mng__fopMsgM_demoMsgFlagOn();
undefined f_op_msg_mng__fopMsgM_demoMsgFlagOff();
undefined f_op_msg_mng__fopMsgM_demoMsgFlagCheck();
undefined f_op_msg_mng__fopMsgM_tactMsgFlagOn();
undefined f_op_msg_mng__fopMsgM_tactMsgFlagOff();
undefined f_op_msg_mng__fopMsgM_tactMsgFlagCheck();
undefined f_op_msg_mng__fopMsgM_nextMsgFlagOff();
undefined f_op_msg_mng__fopMsgM_nextMsgFlagCheck();
undefined f_op_msg_mng__fopMsgM_getScopeMode();
undefined f_op_msg_mng__fopMsgM_forceSendOn();
undefined f_op_msg_mng__fopMsgM_forceSendOff();
undefined f_op_msg_mng__fopMsgM_checkForceSend();
undefined f_op_msg_mng__fopMsgM_messageSendOn();
undefined f_op_msg_mng__fopMsgM_messageSendOff();
undefined f_op_msg_mng__fopMsgM_checkMessageSend();
undefined f_op_msg_mng__fopMsgM_releaseScopeMode();
undefined f_op_msg_mng__fopMsgM_outFontTex();
undefined f_op_msg_mng__fopMsgM_outFontColorWhite();
undefined f_op_msg_mng__fopMsgM_outFontSet();
// undefined f_op_msg_mng__fopMsgM_outFontSet();
undefined f_op_msg_mng__fopMsgM_outFontStickAnimePiece();
// undefined f_op_msg_mng__fopMsgM_outFontStickAnimePiece();
undefined J2DPane__calcMtx(J2DPane * this);
undefined J2DPane__resize(J2DPane * this, float param_1, float param_2);
undefined f_op_msg_mng__fopMsgM_outFontStickAnime();
// undefined f_op_msg_mng__fopMsgM_outFontStickAnime();
undefined f_op_msg_mng__fopMsgM_outFontStickAnime2();
// undefined f_op_msg_mng__fopMsgM_outFontStickAnime2();
// undefined f_op_msg_mng__fopMsgM_outFontStickAnime();
// undefined f_op_msg_mng__fopMsgM_outFontStickAnime();
undefined f_op_msg_mng__fopMsgM_outFontArrow();
// undefined f_op_msg_mng__fopMsgM_outFontArrow();
undefined f_op_msg_mng__fopMsgM_outFontDraw();
undefined f_op_msg_mng__fopMsgM_outFontDraw2(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined1 param_9);
undefined f_op_msg_mng__fopMsgM_Create();
undefined fopMsgM_msgGet_c__getMesgHeader(fopMsgM_msgGet_c * this, ulong msg_id);
undefined fopMsgM_msgGet_c__getMesgInfo(fopMsgM_msgGet_c * this, mesg_header * param_1);
undefined fopMsgM_msgGet_c__getMesgData(fopMsgM_msgGet_c * this, mesg_header * param_1);
undefined fopMsgM_msgGet_c__getMesgEntry(fopMsgM_msgGet_c * this, mesg_header * param_1);
undefined fopMsgM_msgGet_c__getMessage(fopMsgM_msgGet_c * this, mesg_header * param_1);
undefined fopMsgM_itemMsgGet_c__getMesgHeader(fopMsgM_itemMsgGet_c * this, ulong param_1);
undefined fopMsgM_itemMsgGet_c__getMesgInfo(fopMsgM_itemMsgGet_c * this, mesg_header * param_1);
undefined fopMsgM_itemMsgGet_c__getMesgData(fopMsgM_itemMsgGet_c * this, mesg_header * param_1);
undefined fopMsgM_itemMsgGet_c__getMesgEntry(fopMsgM_itemMsgGet_c * this, mesg_header * param_1);
undefined fopMsgM_itemMsgGet_c__getMessage(fopMsgM_itemMsgGet_c * this, mesg_header * param_1);
void fopMsgM_msgDataProc_c__fopMsgM_msgDataProc_c(fopMsgM_msgDataProc_c * this);
void fopMsgM_msgDataProc_c__fopMsgM_msgDataProc_c_destructor(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__dataInit(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__charLength(fopMsgM_msgDataProc_c * this, int param_1, int param_2, bool param_3);
undefined fopMsgM_msgDataProc_c__rubyLength(fopMsgM_msgDataProc_c * this, int param_1, bool param_2);
undefined fopMsgM_msgDataProc_c__stringLength(fopMsgM_msgDataProc_c * this);
undefined f_op_msg_mng__dComIfGs_getClearCount();
undefined f_op_msg_mng__dComIfGs_getEventReg();
undefined f_op_msg_mng__dComIfGp_getItemNameMessageID();
undefined f_op_msg_mng__dComIfGp_getNpcNameMessageID();
undefined f_op_msg_mng__dComIfGs_getPalLanguage();
undefined f_op_msg_mng__dComIfGs_getPlayerName();
undefined fopMsgM_msgDataProc_c__stringShift(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__iconSelect(fopMsgM_msgDataProc_c * this, int param_1, uchar param_2);
undefined fopMsgM_msgDataProc_c__iconIdxRefresh(fopMsgM_msgDataProc_c * this);
undefined f_op_msg_mng__fopMsgM_arrowAnime();
undefined fopMsgM_msgDataProc_c__selectCheck2(fopMsgM_msgDataProc_c * this, J2DPane * param_1, int param_2, int param_3, int param_4);
undefined fopMsgM_msgDataProc_c__selectCheck3(fopMsgM_msgDataProc_c * this, J2DPane * param_1, int param_2, int param_3, int param_4);
undefined fopMsgM_msgDataProc_c__selectCheckYoko(fopMsgM_msgDataProc_c * this, J2DPane * param_1, int param_2, int param_3, int param_4);
undefined fopMsgM_msgDataProc_c__inputNumber(fopMsgM_msgDataProc_c * this, int param_1);
undefined fopMsgM_msgDataProc_c__selectArrow(fopMsgM_msgDataProc_c * this, J2DPicture * param_1, float param_2, float param_3, float param_4, float param_5);
// undefined fopMsgM_msgDataProc_c__selectArrow(fopMsgM_msgDataProc_c * this, J2DPicture * param_1, float param_2, float param_3);
undefined fopMsgM_msgDataProc_c__colorAnime(fopMsgM_msgDataProc_c * this, J2DPicture * param_1);
undefined fopMsgM_msgDataProc_c__stringSet(fopMsgM_msgDataProc_c * this);
undefined f_op_msg_mng__dComIfGp_setMesgAnimeTagInfo();
undefined f_op_msg_mng__dComIfGp_setMesgCameraTagInfo();
undefined fopMsgM_msgDataProc_c__setSelectFlagYokoOn(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__setSelectFlagOn(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__setHandSendFlagOn(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__setAutoSendFlagOn(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__getHandSendFlag(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__getAutoSendFlag(fopMsgM_msgDataProc_c * this);
undefined f_op_msg_mng__mDoAud_messageSePlay();
undefined f_op_msg_mng__dComIfGp_roomControl_getStayNo();
undefined f_op_msg_mng__fopMsgM_itemNumIdx();
undefined f_op_msg_mng__fopMsgM_itemNum();
undefined f_op_msg_mng__fopMsgM_getColorTable();
undefined f_op_msg_mng__fopMsgM_int_to_char();
undefined f_op_msg_mng__fopMsgM_int_to_char2();
undefined fopMsgM_msgDataProc_c__getString(fopMsgM_msgDataProc_c * this, char * out_buffer, ulong msg_id);
// undefined fopMsgM_msgDataProc_c__getString(fopMsgM_msgDataProc_c * this, char * param_1, char * param_2, char * param_3, char * param_4, ulong param_5, float * param_6, float * param_7, int * param_8);
undefined fopMsgM_msgDataProc_c__getRubyString(fopMsgM_msgDataProc_c * this, char * param_1, char * param_2, char * param_3, char * param_4, char * param_5, char * param_6, float * param_7, float * param_8, int * param_9);
undefined fopMsgM_msgDataProc_c__tag_len_kaisen_game(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_rupee(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_num_input(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_sword_game(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_letter_game(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_letter_game_max(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_fish(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_fish_rupee(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_letter(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_rescue(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_forest_timer(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_birdman(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_point(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_get_pendant(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_rev_pendant(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_pig_timer(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_get_bomb(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_get_arrow(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_stock_bokobaba(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_stock_dokuro(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_stock_chuchu(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_stock_pendant(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_stock_hane(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_stock_kenshi(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_terry_rupee(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_input_bokobaba(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_input_dokuro(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_input_chuchu(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_input_pendant(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_input_hane(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_len_input_kenshi(fopMsgM_msgDataProc_c * this, int * param_1, float * param_2, int * param_3, int * param_4, int * param_5);
undefined fopMsgM_msgDataProc_c__tag_kaisen_game(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_rupee(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_num_input(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_sword_game(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_letter_game(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_letter_game_max(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_fish(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_fish_rupee(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_letter(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_rescue(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_forest_timer(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_birdman(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_point(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_get_pendant(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_rev_pendant(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_pig_timer(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_get_bomb(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_get_arrow(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_stock_bokobaba(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_stock_dokuro(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_stock_chuchu(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_stock_pendant(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_stock_hane(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_stock_kenshi(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_terry_rupee(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_input_bokobaba(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_input_dokuro(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_input_chuchu(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_input_pendant(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_input_hane(fopMsgM_msgDataProc_c * this);
undefined fopMsgM_msgDataProc_c__tag_input_kenshi(fopMsgM_msgDataProc_c * this);
undefined f_op_msg_mng__fopMsgM_centerPosCalc();
undefined f_op_msg_mng__fopMsgM_pane_parts_set();
// undefined f_op_msg_mng__fopMsgM_pane_parts_set();
undefined f_op_msg_mng__fopMsgM_setPaneData();
// undefined f_op_msg_mng__fopMsgM_setPaneData();
// undefined f_op_msg_mng__fopMsgM_setPaneData();
// undefined f_op_msg_mng__fopMsgM_setPaneData();
undefined f_op_msg_mng__fopMsgM_paneTrans();
undefined f_op_msg_mng__fopMsgM_paneScaleX();
undefined f_op_msg_mng__fopMsgM_paneScaleY();
undefined f_op_msg_mng__fopMsgM_paneScale();
undefined f_op_msg_mng__fopMsgM_paneScaleXY();
undefined f_op_msg_mng__fopMsgM_cposMove();
undefined f_op_msg_mng__fopMsgM_setAlpha();
undefined f_op_msg_mng__fopMsgM_setInitAlpha();
undefined f_op_msg_mng__fopMsgM_setNowAlpha();
undefined f_op_msg_mng__fopMsgM_setNowAlphaZero();
// undefined f_op_msg_mng__fopMsgM_setAlpha();
// undefined f_op_msg_mng__fopMsgM_setNowAlpha();
undefined f_op_msg_mng__fopMsgM_valueIncrease();
undefined f_op_msg_mng__fopMsgM_blendInit();
// undefined f_op_msg_mng__fopMsgM_blendInit();
undefined f_op_msg_mng__fopMsgM_blendDraw();
// undefined f_op_msg_mng__fopMsgM_blendDraw();
undefined f_op_msg_mng__fopMsgM_setFontsizeCenter();
undefined f_op_msg_mng__fopMsgM_setFontsizeCenter2();
undefined f_op_msg_mng__fopMsgM_createExpHeap();
undefined f_op_msg_mng__fopMsgM_destroyExpHeap();
void MyPicture__MyPicture_destructor(MyPicture * this);
undefined J2DPicture__getTypeID(J2DPicture * this);
undefined J2DPicture__drawOut(J2DPicture * this, float param_1, float param_2, float param_3, float param_4, float param_5, float param_6, float param_7, float param_8);
// undefined J2DPicture__drawOut(J2DPicture * this, float param_1, float param_2, float param_3, float param_4, float param_5, float param_6);
undefined J2DPane__setConnectParent(J2DPane * this, bool param_1);
undefined J2DPane__update(J2DPane * this);
undefined f_op_msg_mng____sinit_f_op_msg_mng_cpp();
node_class * f_op_draw_iter__fopDwIt_GetTag(void);
undefined f_op_draw_iter__fopDwIt_Begin();
node_class * f_op_draw_iter__fopDwIt_Next(create_tag_class * param_1);
void f_op_draw_tag__fopDwTg_ToDrawQ(create_tag_class * param_1, int priority);
undefined f_op_draw_tag__fopDwTg_DrawQTo();
undefined f_op_draw_tag__fopDwTg_Init();
undefined f_op_draw_tag__fopDwTg_CreateQueue();
undefined f_op_scene_pause__fopScnPause_Enable();
undefined f_op_scene_pause__fopScnPause_Disable();
bool f_pc_base__fpcBs_Is_JustOfType(int param_1, int param_2);
int f_pc_base__fpcBs_MakeOfType(int * param_1);
int f_pc_base__fpcBs_MakeOfId(void);
void f_pc_base__fpcBs_Execute(base_process_class * param_1);
void f_pc_base__fpcBs_DeleteAppend(base_process_class * param_1);
undefined f_pc_base__fpcBs_IsDelete();
int f_pc_base__fpcBs_Delete(base_process_class * param_1);
base_process_class * f_pc_base__fpcBs_Create(short param_1, uint param_2, void * param_3);
undefined4 f_pc_base__fpcBs_SubCreate(base_process_class * param_1);
undefined f_pc_create_iter__fpcCtIt_Method();
undefined f_pc_create_iter__fpcCtIt_Judge();
undefined f_pc_create_iter__fpcCtIt_filter_JudgeInLayer();
undefined f_pc_create_iter__fpcCtIt_JudgeInLayer();
undefined f_pc_create_req__fpcCtRq_isCreatingByID();
undefined f_pc_create_req__fpcCtRq_IsCreatingByID();
undefined f_pc_create_req__fpcCtRq_CreateQTo();
void f_pc_create_req__fpcCtRq_ToCreateQ(create_request * param_1);
undefined f_pc_create_req__fpcCtRq_Delete();
undefined f_pc_create_req__fpcCtRq_Cancel();
undefined f_pc_create_req__fpcCtRq_IsDoing();
undefined f_pc_create_req__fpcCtRq_Do(create_request * param_1);
undefined f_pc_create_req__fpcCtRq_Handler();
create_request * f_pc_create_req__fpcCtRq_Create(layer_class * param_1, ulong size, create_request_method_class * param_3);
undefined f_pc_create_tag__fpcCtTg_ToCreateQ();
void f_pc_create_tag__fpcCtTg_CreateQTo(create_tag * param_1);
undefined4 f_pc_create_tag__fpcCtTg_Init(create_tag * param_1, void * param_2);
undefined f_pc_creator__fpcCt_IsCreatingByID();
int f_pc_creator__fpcCt_IsDoing(base_process_class * param_1);
undefined f_pc_creator__fpcCt_Abort();
undefined f_pc_creator__fpcCt_Handler();
undefined f_pc_delete_tag__fpcDtTg_IsEmpty();
void f_pc_delete_tag__fpcDtTg_ToDeleteQ(delete_tag_class * param_1);
undefined f_pc_delete_tag__fpcDtTg_DeleteQTo();
undefined4 f_pc_delete_tag__fpcDtTg_Do(delete_tag_class * param_1, undefined * param_2);
undefined4 f_pc_delete_tag__fpcDtTg_Init(delete_tag_class * param_1, void * param_2);
undefined f_pc_deletor__fpcDt_IsComplete();
undefined f_pc_deletor__fpcDt_deleteMethod();
undefined f_pc_deletor__fpcDt_Handler();
undefined f_pc_deletor__fpcDt_ToQueue();
undefined4 f_pc_deletor__fpcDt_ToDeleteQ(base_process_class * param_1);
void f_pc_deletor__fpcDt_Delete(base_process_class * param_1);
int f_pc_draw_priority__fpcDwPi_Get(draw_priority_class * param_1);
void f_pc_draw_priority__fpcDwPi_Set(draw_priority_class * param_1, short param_2);
void f_pc_draw_priority__fpcDwPi_Init(draw_priority_class * param_1, short param_2);
void * f_pc_executor__fpcEx_Search(pointer param_1, void * param_2);
void * f_pc_executor__fpcEx_SearchByID(int param_1);
undefined f_pc_executor__fpcEx_IsExist();
void f_pc_executor__fpcEx_Execute(base_process_class * param_1);
undefined4 f_pc_executor__fpcEx_ToLineQ(base_process_class * param_1);
uint f_pc_executor__fpcEx_ExecuteQTo(base_process_class * param_1);
uint f_pc_executor__fpcEx_ToExecuteQ(base_process_class * param_1);
undefined f_pc_executor__fpcEx_Handler();
undefined f_pc_layer__fpcLy_CancelQTo();
undefined f_pc_layer__fpcLy_ToCancelQ();
undefined f_pc_layer__fpcLy_CancelMethod();
void f_pc_layer__fpcLy_IntoQueue(layer_class * param_1, int param_2, create_tag_class * param_3, int param_4);
void f_pc_layer__fpcLy_ToQueue(layer_class * param_1, int param_2, create_tag_class * param_3);
undefined f_pc_layer__fpcLy_QueueTo();
undefined f_pc_layer__fpcLy_IsDeletingMesg();
undefined f_pc_layer__fpcLy_DeletingMesg();
undefined f_pc_layer__fpcLy_DeletedMesg();
uint f_pc_layer__fpcLy_IsCreatingMesg(layer_class * param_1);
undefined f_pc_layer__fpcLy_CreatingMesg(layer_class * param_1);
void f_pc_layer__fpcLy_CreatedMesg(layer_class * param_1);
layer_class * f_pc_layer__fpcLy_RootLayer(void);
void f_pc_layer__fpcLy_SetCurrentLayer(layer_class * param_1);
layer_class * f_pc_layer__fpcLy_CurrentLayer(void);
layer_class * f_pc_layer__fpcLy_Search(uint param_1);
layer_class * f_pc_layer__fpcLy_Layer(uint param_1);
undefined f_pc_layer__fpcLy_Regist();
undefined f_pc_layer__fpcLy_Delete();
undefined f_pc_layer__fpcLy_Cancel();
void f_pc_layer__fpcLy_Create(layer_class * param_1, void * param_2, node_list_class * param_3, int param_4);
int fpcLf_GetPriority(leafdraw_class * param_1);
undefined fpcLf_DrawMethod();
undefined fpcLf_Draw();
undefined fpcLf_Execute();
undefined fpcLf_IsDelete();
undefined fpcLf_Delete();
void fpcLf_Create(leafdraw_class * param_1);
void f_pc_layer_iter__fpcLyIt_OnlyHere(layer_class * param_1, undefined4 param_2, undefined4 param_3);
undefined f_pc_layer_iter__fpcLyIt_OnlyHereLY();
undefined f_pc_layer_iter__fpcLyIt_Judge();
void * f_pc_layer_iter__fpcLyIt_AllJudge(pointer param_1, void * param_2);
undefined4 f_pc_layer_tag__fpcLyTg_ToQueue(layer_management_tag_class * param_1, uint layerID, ushort param_3, ushort param_4);
undefined f_pc_layer_tag__fpcLyTg_QueueTo();
undefined f_pc_layer_tag__fpcLyTg_Move();
uint f_pc_layer_tag__fpcLyTg_Init(layer_management_tag_class * param_1, uint param_2, void * param_3);
undefined f_pc_line__fpcLn_Create();
undefined f_pc_load__fpcLd_Use();
undefined f_pc_load__fpcLd_IsLoaded();
undefined f_pc_load__fpcLd_Free();
undefined f_pc_load__fpcLd_Load();
void f_pc_manager__fpcM_Draw(void * param_1);
undefined f_pc_manager__fpcM_DrawIterater();
void f_pc_manager__fpcM_Execute(void * param_1);
void f_pc_manager__fpcM_Delete(base_process_class * param_1);
undefined f_pc_manager__fpcM_IsCreating();
undefined f_pc_manager__messageSet();
undefined f_pc_manager__drawDvdCondition();
undefined f_pc_manager__checkDvdCondition();
undefined f_pc_manager__fpcM_Management();
undefined f_pc_manager__fpcM_Init();
undefined f_pc_manager__fpcM_FastCreate();
undefined f_pc_manager__fpcM_IsPause();
undefined f_pc_manager__fpcM_PauseEnable();
undefined f_pc_manager__fpcM_PauseDisable();
undefined f_pc_manager__fpcM_JudgeInLayer();
int f_pc_method__fpcMtd_Method(undefined * param_1, void * param_2);
void f_pc_method__fpcMtd_Execute(profile_method_class * param_1, void * param_2);
void f_pc_method__fpcMtd_IsDelete(profile_method_class * param_1, void * param_2);
void f_pc_method__fpcMtd_Delete(profile_method_class * param_1, void * param_2);
undefined f_pc_method__fpcMtd_Create();
undefined f_pc_node__fpcNd_DrawMethod();
undefined f_pc_node__fpcNd_Draw();
undefined f_pc_node__fpcNd_Execute();
undefined f_pc_node__fpcNd_IsCreatingFromUnder();
undefined f_pc_node__fpcNd_IsDeleteTiming();
undefined f_pc_node__fpcNd_IsDelete();
undefined f_pc_node__fpcNd_Delete();
undefined4 f_pc_node__fpcNd_Create(process_node_class * param_1);
undefined f_pc_node_req__fpcNdRq_RequestQTo();
undefined f_pc_node_req__fpcNdRq_ToRequestQ(node_create_request * param_1);
undefined f_pc_node_req__fpcNdRq_phase_IsCreated();
undefined f_pc_node_req__fpcNdRq_phase_Create(node_create_request * param_1);
undefined f_pc_node_req__fpcNdRq_phase_IsDeleteTiming();
undefined f_pc_node_req__fpcNdRq_phase_IsDeleted();
undefined f_pc_node_req__fpcNdRq_phase_Delete();
void f_pc_node_req__fpcNdRq_DoPhase(node_create_request * param_1);
int f_pc_node_req__fpcNdRq_Execute(node_create_request * param_1);
undefined f_pc_node_req__fpcNdRq_Delete(node_create_request * param_1);
undefined f_pc_node_req__fpcNdRq_Cancel();
undefined4 f_pc_node_req__fpcNdRq_Handler(void);
undefined f_pc_node_req__fpcNdRq_IsPossibleTarget(process_node_class * param_1);
undefined f_pc_node_req__fpcNdRq_IsIng(process_node_class * param_1);
node_create_request * f_pc_node_req__fpcNdRq_Create(int param_1);
node_create_request * f_pc_node_req__fpcNdRq_ChangeNode(ulong param_1, process_node_class * param_2, undefined2 param_3, void * param_4);
undefined f_pc_node_req__fpcNdRq_DeleteNode();
node_create_request * f_pc_node_req__fpcNdRq_CreateNode(ulong param_1, short param_2, void * param_3);
node_create_request * f_pc_node_req__fpcNdRq_Request(ulong size, int mode, process_node_class * param_3, short procName, void * param_5, undefined4 param_6);
undefined f_pc_node_req__fpcNdRq_ReChangeNode();
undefined f_pc_node_req__fpcNdRq_ReRequest();
undefined f_pc_priority__fpcPi_IsInQueue();
undefined4 f_pc_priority__fpcPi_QueueTo(process_priority_class * param_1);
undefined4 f_pc_priority__fpcPi_ToQueue(process_priority_class * param_1);
undefined f_pc_priority__fpcPi_GetFromQueue();
undefined f_pc_priority__fpcPi_Delete();
undefined f_pc_priority__fpcPi_IsNormal();
undefined f_pc_priority__fpcPi_Change();
undefined f_pc_priority__fpcPi_Handler();
uint f_pc_priority__fpcPi_Init(process_priority_class * param_1, void * param_2, uint param_3, ushort param_4, ushort param_5);
f_pc_profile__Profile_Actor * f_pc_profile__fpcPf_Get(short param_1);
int f_pc_searcher__fpcSch_JudgeForPName(base_process_class * param_1, short * param_2);
int f_pc_searcher__fpcSch_JudgeByID(base_process_class * param_1, int * param_2);
undefined f_pc_line_tag__fpcLnTg_Move();
undefined f_pc_line_tag__fpcLnTg_QueueTo();
uint f_pc_line_tag__fpcLnTg_ToQueue(line_tag * param_1, int param_2);
void f_pc_line_tag__fpcLnTg_Init(line_tag * param_1, void * param_2);
undefined f_pc_line_iter__fpcLnIt_MethodCall();
void f_pc_line_iter__fpcLnIt_Queue(undefined4 param_1);
undefined f_pc_method_iter__fpcMtdIt_Method();
void f_pc_method_tag__fpcMtdTg_Do(process_method_tag_class * param_1);
undefined f_pc_method_tag__fpcMtdTg_ToMethodQ();
undefined f_pc_method_tag__fpcMtdTg_MethodQTo();
undefined4 f_pc_method_tag__fpcMtdTg_Init(process_method_tag_class * param_1, void * param_2, void * param_3);
undefined f_pc_pause__fpcPause_IsEnable();
undefined4 f_pc_pause__fpcPause_Enable(void * param_1, byte param_2);
undefined4 f_pc_pause__fpcPause_Disable(void * param_1, byte param_2);
void f_pc_pause__fpcPause_Init(void * param_1);
int f_pc_draw__fpcDw_Execute(base_process_class * param_1);
undefined f_pc_draw__fpcDw_Handler();
undefined4 f_pc_fstcreate_req__fpcFCtRq_Do(fast_create_request * param_1);
undefined f_pc_fstcreate_req__fpcFCtRq_Delete();
void * f_pc_fstcreate_req__fpcFCtRq_Request(layer_class * param_1, short param_2, pointer param_3, void * param_4, void * param_5);
undefined4 f_pc_stdcreate_req__fpcSCtRq_phase_Load(standard_create_request_class * param_1);
undefined4 f_pc_stdcreate_req__fpcSCtRq_phase_CreateProcess(standard_create_request_class * pReq);
undefined f_pc_stdcreate_req__fpcSCtRq_phase_SubCreateProcess(standard_create_request_class * param_1);
int f_pc_stdcreate_req__fpcSCtRq_phase_IsComplete(standard_create_request_class * param_1);
undefined4 f_pc_stdcreate_req__fpcSCtRq_phase_PostMethod(standard_create_request_class * param_1);
undefined f_pc_stdcreate_req__fpcSCtRq_phase_Done();
void f_pc_stdcreate_req__fpcSCtRq_Handler(standard_create_request_class * param_1);
undefined f_pc_stdcreate_req__fpcSCtRq_Delete();
undefined f_pc_stdcreate_req__fpcSCtRq_Cancel();
undefined4 f_pc_stdcreate_req__fpcSCtRq_Request(layer_class * param_1, short param_2, pointer param_3, void * param_4, void * param_5);
undefined dStage_nextStage_c__set(dStage_nextStage_c * this, char * param_1, char startCode, short roomIdx, char layerNo, char wipeType);
undefined d_stage__dStage_SetErrorRoom();
undefined d_stage__dStage_SetErrorStage();
undefined d_stage__dStage_GetKeepTresureInfo();
undefined d_stage__dStage_GetKeepDoorInfo();
undefined d_stage__dStage_KeepTresureInfoProc(dStage_dt_c * param_1, stage_tresure_class * param_2);
undefined d_stage__dStage_KeepDoorInfoProc();
undefined dStage_startStage_c__set(dStage_startStage_c * this, char * param_1, char spawnID, short param_3, char param_4);
int dStage_roomControl_c__init(dStage_roomControl_c * this);
dStage_roomStatus_c * dStage_roomControl_c__getStatusRoomDt(dStage_roomControl_c * this, int param_1);
JKRHeap * dStage_roomControl_c__getMemoryBlock(int param_1);
void dStage_roomControl_c__setStayNo(int param_1);
undefined d_stage__stayRoomCheck();
undefined4 d_stage__createRoomScene(int param_1);
undefined dStage_roomControl_c__checkRoomDisp(dStage_roomControl_c * this, int param_1);
undefined dStage_roomControl_c__loadRoom(dStage_roomControl_c * this, int count, byte * tbl);
undefined dStage_roomControl_c__zoneCountCheck(dStage_roomControl_c * this, int param_1);
undefined dStage_roomControl_c__checkDrawArea(dStage_roomControl_c * this);
undefined dStage_roomControl_c__getDarkStatus(dStage_roomControl_c * this);
undefined dStage_roomControl_c__getDarkMode(dStage_roomControl_c * this);
undefined dStage_roomControl_c__createMemoryBlock(int param_1, ulong param_2);
undefined dStage_roomControl_c__destroyMemoryBlock(dStage_roomControl_c * this);
int dStage_stageDt_c__init(dStage_stageDt_c * this);
int dStage_roomDt_c__init(dStage_roomDt_c * this, EVP_PKEY_CTX * ctx);
undefined d_stage__dStage_roomInit();
dStage__ObjectNameTable * d_stage__dStage_searchName(char * pName);
char * d_stage__dStage_getName(short param_1, char param_2);
char * d_stage__dStage_getName2(short param_1, byte param_2);
void d_stage__dStage_actorCreate(char * param_1, fopAcM_prm_class * param_2);
undefined d_stage__dStage_cameraCreate();
undefined d_stage__dStage_decodeSearchIkada();
undefined d_stage__dStage_playerInitIkada(fopAcM_prm_class * param_1, void * param_2);
undefined d_stage__dStage_chkPlayerId();
undefined dStage_roomDt_c__getPlayer(dStage_roomDt_c * this);
undefined d_stage__dStage_playerInit();
undefined d_stage__dStage_cameraInit();
undefined d_stage__dStage_RoomCameraInit();
undefined4 d_stage__dStage_arrowInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined d_stage__dStage_mapInfo_GetOceanX();
undefined d_stage__dStage_mapInfo_GetOceanZ();
undefined d_stage__dStage_mapInfoInit();
undefined dStage_roomDt_c__getMapInfo2(dStage_roomDt_c * this, int param_1);
undefined dStage_roomDt_c__getMapInfoBase(dStage_roomDt_c * this);
undefined dStage_stageDt_c__getMapInfo2(dStage_stageDt_c * this, int param_1);
undefined dStage_stageDt_c__getMapInfoBase(dStage_stageDt_c * this);
undefined d_stage__dStage_paletInfoInit();
undefined d_stage__dStage_pselectInfoInit();
undefined d_stage__dStage_envrInfoInit();
undefined4 d_stage__dStage_filiInfoInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined4 d_stage__dStage_vrboxInfoInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined4 d_stage__dStage_plightInfoInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined4 d_stage__dStage_lgtvInfoInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined4 d_stage__dStage_stagInfoInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined d_stage__dStage_sclsInfoInit(dStage_dt_c * param_1, undefined4 param_2);
fopAcM_prm_class * d_stage__dStage_actorInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined4 d_stage__dStage_tgscInfoInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined4 d_stage__dStage_roomReadInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined d_stage__dStage_roomRead_dt_c_GetReverbStage(roomRead_class * param_1, undefined4 param_2);
undefined4 d_stage__dStage_ppntInfoInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined4 d_stage__dStage_pathInfoInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined4 d_stage__dStage_rppnInfoInit(dStage_dt_c * param_1, int param_2, void * param_3, void * param_4);
undefined4 d_stage__dStage_rpatInfoInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined d_stage__dStage_soundInfoInit();
undefined4 d_stage__dStage_eventInfoInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined d_stage__dStage_floorInfoInit();
undefined d_stage__dStage_memaInfoInit();
undefined d_stage__dStage_mecoInfoInit();
undefined d_stage__dStage_setShipPos();
undefined d_stage__dStage_chkTaura();
undefined d_stage__dStage_shipInfoInit();
undefined4 d_stage__dStage_multInfoInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined4 d_stage__dStage_lbnkInfoInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined4 d_stage__dStage_stageTresureInit(dStage_dt_c * param_1, void * param_2, int param_3, void * param_4);
undefined d_stage__dStage_roomTresureInit();
undefined d_stage__dStage_layerTresureInit();
undefined d_stage__dStage_dmapInfoInit();
undefined4 d_stage__dStage_stageDrtgInfoInit(dStage_dt_c * param_1, int param_2, undefined4 param_3, undefined4 param_4);
undefined d_stage__dStage_roomDrtgInfoInit(dStage_dt_c * param_1, undefined4 param_2, undefined4 param_3, undefined4 param_4);
undefined d_stage__dKankyo_create();
void d_stage__dStage_dt_c_decode(int * param_1, dStage_dt_c * param_2, dStage_dt__FuncTable * param_3, int param_4);
undefined d_stage__dStage_dt_c_offsetToPtr();
void d_stage__dStage_dt_c_stageInitLoader(void * param_1, dStage_dt_c * param_2);
void d_stage__layerLoader(void * param_1, dStage_dt_c * param_2, int param_3);
undefined d_stage__dStage_dt_c_stageLoader();
undefined d_stage__dStage_dt_c_roomLoader();
undefined d_stage__dStage_dt_c_roomReLoader();
undefined d_stage__dStage_infoCreate();
undefined d_stage__dStage_Create();
undefined d_stage__dStage_Delete();
undefined4 d_stage__dStage_RoomCheck(cBgS_GndChk * param_1);
void dStage_roomControl_c__SetTimePass(int param_1);
undefined4 d_stage__dStage_changeSceneExitId(cBgS_PolyInfo * pPoly, float param_2, uint param_3, byte roomIdxFallback);
undefined4 d_stage__dStage_changeScene(int sclsIdx, float param_2, uint param_3, byte roomNo);
undefined dStage_roomDt_c__getSclsInfo(dStage_roomDt_c * this);
void d_stage__dStage_restartRoom(int param_1, int param_2);
undefined d_stage__dStage_turnRestart();
undefined d_stage__dStage_escapeRestart();
undefined d_stage__dStage_checkRestart();
undefined dStage_roomDt_c__getRoomNo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setCamera(dStage_roomDt_c * this, stage_camera_class * param_1);
undefined dStage_roomDt_c__getCamera(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setArrow(dStage_roomDt_c * this, stage_arrow_class * param_1);
undefined dStage_roomDt_c__getArrow(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setPlayer(dStage_roomDt_c * this, stage_actor_class * param_1);
undefined dStage_roomDt_c__setPlayerNum(dStage_roomDt_c * this, ushort param_1);
undefined dStage_roomDt_c__getPlayerNum(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setRoom(dStage_roomDt_c * this, roomRead_class * param_1);
undefined dStage_roomDt_c__getRoom(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setMapInfo(dStage_roomDt_c * this, stage_map_info_class * param_1);
undefined dStage_roomDt_c__getMapInfo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setMapInfoBase(dStage_roomDt_c * this, stage_map_info_dummy_class * param_1);
undefined dStage_roomDt_c__setPaletInfo(dStage_roomDt_c * this, stage_palet_info_class * param_1);
undefined dStage_roomDt_c__getPaletInfo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setPselectInfo(dStage_roomDt_c * this, stage_pselect_info_class * param_1);
undefined dStage_roomDt_c__getPselectInfo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setEnvrInfo(dStage_roomDt_c * this, stage_envr_info_class * param_1);
undefined dStage_roomDt_c__getEnvrInfo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setVrboxInfo(dStage_roomDt_c * this, stage_vrbox_info_class * param_1);
undefined dStage_roomDt_c__getVrboxInfo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setPlightInfo(dStage_roomDt_c * this, stage_plight_info_class * param_1);
undefined dStage_roomDt_c__getPlightInfo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setPaletNumInfo(dStage_roomDt_c * this, int param_1);
undefined dStage_roomDt_c__getPaletNumInfo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setPselectNumInfo(dStage_roomDt_c * this, int param_1);
undefined dStage_roomDt_c__getPselectNumInfo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setEnvrNumInfo(dStage_roomDt_c * this, int param_1);
undefined dStage_roomDt_c__getEnvrNumInfo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setVrboxNumInfo(dStage_roomDt_c * this, int param_1);
undefined dStage_roomDt_c__getVrboxNumInfo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setPlightNumInfo(dStage_roomDt_c * this, int param_1);
undefined dStage_roomDt_c__getPlightNumInfo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setLightVecInfo(dStage_roomDt_c * this, stage_lightvec_info_class * param_1);
undefined dStage_roomDt_c__getLightVecInfo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setLightVecInfoNum(dStage_roomDt_c * this, int param_1);
undefined dStage_roomDt_c__getLightVecInfoNum(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setStagInfo(dStage_roomDt_c * this, stage_stag_info_class * param_1);
undefined dStage_roomDt_c__getStagInfo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setSclsInfo(dStage_roomDt_c * this, stage_scls_info_dummy_class * param_1);
undefined dStage_roomDt_c__setPntInfo(dStage_roomDt_c * this, dStage_dPnt_c * param_1);
undefined dStage_roomDt_c__getPntInf(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setPathInfo(dStage_roomDt_c * this, dStage_dPath_c * param_1);
undefined dStage_roomDt_c__getPathInf(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setPnt2Info(dStage_roomDt_c * this, dStage_dPnt_c * param_1);
undefined dStage_roomDt_c__getPnt2Inf(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setPath2Info(dStage_roomDt_c * this, dStage_dPath_c * param_1);
undefined dStage_roomDt_c__getPath2Inf(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setSoundInfo(dStage_roomDt_c * this, dStage_SoundInfo_c * param_1);
undefined dStage_roomDt_c__getSoundInf(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setEventInfo(dStage_roomDt_c * this, dStage_EventInfo_c * param_1);
undefined dStage_roomDt_c__getEventInfo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setFileListInfo(dStage_roomDt_c * this, dStage_FileList_dt_c * param_1);
undefined dStage_roomDt_c__setFloorInfo(dStage_roomDt_c * this, dStage_FloorInfo_c * param_1);
undefined dStage_roomDt_c__getFloorInfo(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setMemoryConfig(dStage_roomDt_c * this, dStage_MemoryConfig_c * param_1);
undefined dStage_roomDt_c__getMemoryConfig(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setMemoryMap(dStage_roomDt_c * this, dStage_MemoryMap_c * param_1);
undefined dStage_roomDt_c__getMemoryMap(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setShip(dStage_roomDt_c * this, dStage_Ship_c * param_1);
undefined dStage_roomDt_c__getShip(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setMulti(dStage_roomDt_c * this, dStage_Multi_c * param_1);
undefined dStage_roomDt_c__getMulti(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setLbnk(dStage_roomDt_c * this, dStage_Lbnk_c * param_1);
undefined dStage_roomDt_c__getLbnk(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setTresure(dStage_roomDt_c * this, stage_tresure_class * param_1);
undefined dStage_roomDt_c__getTresure(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setDMap(dStage_roomDt_c * this, dStage_DMap_c * param_1);
undefined dStage_roomDt_c__getDMap(dStage_roomDt_c * this);
undefined dStage_roomDt_c__setDrTg(dStage_roomDt_c * this, stage_tgsc_class * param_1);
undefined dStage_roomDt_c__getDrTg(dStage_roomDt_c * this);
undefined dStage_stageDt_c__getRoomNo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setCamera(dStage_stageDt_c * this, stage_camera_class * param_1);
undefined dStage_stageDt_c__getCamera(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setArrow(dStage_stageDt_c * this, stage_arrow_class * param_1);
undefined dStage_stageDt_c__getArrow(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setPlayer(dStage_stageDt_c * this, stage_actor_class * param_1);
undefined dStage_stageDt_c__getPlayer(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setPlayerNum(dStage_stageDt_c * this, ushort param_1);
undefined dStage_stageDt_c__getPlayerNum(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setRoom(dStage_stageDt_c * this, roomRead_class * param_1);
undefined dStage_stageDt_c__getRoom(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setMapInfo(dStage_stageDt_c * this, stage_map_info_class * param_1);
undefined dStage_stageDt_c__getMapInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setMapInfoBase(dStage_stageDt_c * this, stage_map_info_dummy_class * param_1);
undefined dStage_stageDt_c__setPaletInfo(dStage_stageDt_c * this, stage_palet_info_class * param_1);
undefined dStage_stageDt_c__getPaletInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setPselectInfo(dStage_stageDt_c * this, stage_pselect_info_class * param_1);
undefined dStage_stageDt_c__getPselectInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setEnvrInfo(dStage_stageDt_c * this, stage_envr_info_class * param_1);
undefined dStage_stageDt_c__getEnvrInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setVrboxInfo(dStage_stageDt_c * this, stage_vrbox_info_class * param_1);
undefined dStage_stageDt_c__getVrboxInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setPlightInfo(dStage_stageDt_c * this, stage_plight_info_class * param_1);
undefined dStage_stageDt_c__getPlightInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setPaletNumInfo(dStage_stageDt_c * this, int param_1);
undefined dStage_stageDt_c__getPaletNumInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setPselectNumInfo(dStage_stageDt_c * this, int param_1);
undefined dStage_stageDt_c__getPselectNumInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setEnvrNumInfo(dStage_stageDt_c * this, int param_1);
undefined dStage_stageDt_c__getEnvrNumInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setVrboxNumInfo(dStage_stageDt_c * this, int param_1);
undefined dStage_stageDt_c__getVrboxNumInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setLightVecInfo(dStage_stageDt_c * this, stage_lightvec_info_class * param_1);
undefined dStage_stageDt_c__getLightVecInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setLightVecInfoNum(dStage_stageDt_c * this, int param_1);
undefined dStage_stageDt_c__getLightVecInfoNum(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setPlightNumInfo(dStage_stageDt_c * this, int param_1);
undefined dStage_stageDt_c__getPlightNumInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setStagInfo(dStage_stageDt_c * this, stage_stag_info_class * param_1);
undefined dStage_stageDt_c__getStagInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setSclsInfo(dStage_stageDt_c * this, stage_scls_info_dummy_class * param_1);
undefined dStage_stageDt_c__getSclsInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setPntInfo(dStage_stageDt_c * this, dStage_dPnt_c * param_1);
undefined dStage_stageDt_c__getPntInf(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setPathInfo(dStage_stageDt_c * this, dStage_dPath_c * param_1);
undefined dStage_stageDt_c__getPathInf(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setPnt2Info(dStage_stageDt_c * this, dStage_dPnt_c * param_1);
undefined dStage_stageDt_c__getPnt2Inf(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setPath2Info(dStage_stageDt_c * this, dStage_dPath_c * param_1);
undefined dStage_stageDt_c__getPath2Inf(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setSoundInfo(dStage_stageDt_c * this, dStage_SoundInfo_c * param_1);
undefined dStage_stageDt_c__getSoundInf(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setEventInfo(dStage_stageDt_c * this, dStage_EventInfo_c * param_1);
undefined dStage_stageDt_c__getEventInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setFileListInfo(dStage_stageDt_c * this, dStage_FileList_dt_c * param_1);
undefined dStage_stageDt_c__getFileListInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setFloorInfo(dStage_stageDt_c * this, dStage_FloorInfo_c * param_1);
undefined dStage_stageDt_c__getFloorInfo(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setMemoryConfig(dStage_stageDt_c * this, dStage_MemoryConfig_c * param_1);
undefined dStage_stageDt_c__getMemoryConfig(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setMemoryMap(dStage_stageDt_c * this, dStage_MemoryMap_c * param_1);
undefined dStage_stageDt_c__getMemoryMap(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setShip(dStage_stageDt_c * this, dStage_Ship_c * param_1);
undefined dStage_stageDt_c__getShip(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setMulti(dStage_stageDt_c * this, dStage_Multi_c * param_1);
undefined dStage_stageDt_c__getMulti(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setLbnk(dStage_stageDt_c * this, dStage_Lbnk_c * param_1);
undefined dStage_stageDt_c__getLbnk(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setTresure(dStage_stageDt_c * this, stage_tresure_class * param_1);
undefined dStage_stageDt_c__getTresure(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setDMap(dStage_stageDt_c * this, dStage_DMap_c * param_1);
undefined dStage_stageDt_c__getDMap(dStage_stageDt_c * this);
undefined dStage_stageDt_c__setDrTg(dStage_stageDt_c * this, stage_tgsc_class * param_1);
undefined dStage_stageDt_c__getDrTg(dStage_stageDt_c * this);
undefined d_stage____sinit_d_stage_cpp();
undefined d_stage____arraydtor$5591();
void dStage_roomStatus_c__dStage_roomStatus_c_destructor(dStage_roomStatus_c * this);
void dStage_roomStatus_c__dStage_roomStatus_c(dStage_roomStatus_c * this);
void dStage_KeepDoorInfo__dStage_KeepDoorInfo_destructor(dStage_KeepDoorInfo * this);
void stage_tgsc_data_class__stage_tgsc_data_class_destructor(stage_tgsc_data_class * this);
void stage_tgsc_data_class__stage_tgsc_data_class(stage_tgsc_data_class * this);
void dStage_KeepTresureInfo__dStage_KeepTresureInfo_destructor(dStage_KeepTresureInfo * this);
void stage_tresure_data_class__stage_tresure_data_class_destructor(stage_tresure_data_class * this);
void stage_tresure_data_class__stage_tresure_data_class(stage_tresure_data_class * this);
undefined daPy_py_c__getBokoFlamePos(daPy_py_c * this, cXyz * param_1);
undefined d_map__onSaveArriveGridForAgbUseGridPos();
undefined d_map__isSaveArriveGridForAgbUseGridPos();
undefined d_map__IsFloorNo();
undefined d_map__getFloorInfo_WithRoom();
undefined d_map__mapOffsetY();
undefined d_map__dMap_GetTopBottomFloorNo();
undefined d_map__dMap_GetFloorInfoDtP();
undefined d_map__dMap_GetFloorInfoDtPFromFloorNo();
undefined d_map__dMap_GetFloorNoForDmap();
undefined d_map__dMap_GetFloorNo_WithRoom();
undefined d_map__dMap_GetFloorNo();
undefined dMap_RoomInfo_c__getRoomDspFloorNo(dMap_RoomInfo_c * this, uchar param_1, int param_2);
int dMap_RoomInfo_c__init(dMap_RoomInfo_c * this, EVP_PKEY_CTX * ctx);
undefined dMap_RoomInfo_c__getRoomImage(dMap_RoomInfo_c * this, int param_1, uchar param_2, int param_3, ResTIMG * * param_4, ResTIMG * * param_5, map_dt_c * * param_6, stage_map_info_class * * param_7, uchar * param_8);
undefined dMap_RoomInfo_c__makeRoomDspFloorNoTbl(dMap_RoomInfo_c * this, int param_1);
undefined dMap_RoomInfo_c__roomEntryRoom(dMap_RoomInfo_c * this, int param_1, uchar param_2, int param_3, uchar param_4, dMap_RoomInfo_c * param_5, short param_6, short param_7, float param_8);
undefined dMap_RoomInfo_c__Changeimage(dMap_RoomInfo_c * this, uchar param_1, uchar param_2, int param_3, short param_4, short param_5, float param_6);
undefined dMap_RoomInfo_c__deleteRoom(dMap_RoomInfo_c * this);
undefined dMap_RoomInfo_c__enlagementSizeTextureCordCalc(dMap_RoomInfo_c * this, float * param_1, float * param_2, float * param_3, float * param_4, float param_5, float param_6, float param_7, float param_8, float param_9, float param_10);
undefined dMap_RoomInfo_c__roomDrawRoomEnlargementSize(dMap_RoomInfo_c * this, int param_1, int param_2, int param_3, int param_4, float param_5, float param_6, float param_7, float param_8, uchar param_9);
undefined dMap_RoomInfo_c__roomDrawRoomRealSize(dMap_RoomInfo_c * this, int param_1, int param_2, int param_3, int param_4, float param_5, float param_6, float param_7, float param_8, float param_9, float param_10, uchar param_11);
undefined dMap_RoomInfoCtrl_c__roomExistenceCheck(dMap_RoomInfoCtrl_c * this, int param_1, dMap_RoomInfo_c * * param_2);
undefined dMap_RoomInfoCtrl_c__getNextRoomP(dMap_RoomInfoCtrl_c * this, dMap_RoomInfo_c * param_1);
undefined dMap_RoomInfoCtrl_c__ctrlEntryRoom(dMap_RoomInfoCtrl_c * this, int param_1, uchar param_2, int param_3, uchar param_4, short param_5, short param_6, float param_7);
undefined dMap_RoomInfoCtrl_c__deleteRoom(dMap_RoomInfoCtrl_c * this, int param_1);
undefined dMap_RoomInfoCtrl_c__ctrlDrawRoomEnlargementSize(dMap_RoomInfoCtrl_c * this, int param_1, int param_2, int param_3, int param_4, int param_5, float param_6, float param_7, float param_8, float param_9, uchar param_10);
undefined dMap_RoomInfoCtrl_c__ctrlDrawRoomRealSize(dMap_RoomInfoCtrl_c * this, int param_1, int param_2, int param_3, int param_4, int param_5, float param_6, float param_7, float param_8, float param_9, float param_10, float param_11, uchar param_12);
int dMap_RoomInfoCtrl_c__init(dMap_RoomInfoCtrl_c * this, EVP_PKEY_CTX * ctx);
undefined dMap_c__create(dMap_c * this);
undefined dMap_c__isEnableEnlargementScroll(dMap_c * this);
undefined dMap_c__isEnableDispMap(dMap_c * this);
undefined dMap_c__getKindMapType(dMap_c * this);
int dMap_c__remove(dMap_c * this, char * __filename);
undefined dMap_c__setImage(int param_1, int param_2, float param_3);
undefined dMap_c__deleteImage(dMap_c * this, int param_1);
undefined dMap_c__setNowRoom(dMap_c * this, int param_1);
undefined dMap_2DSQ_c__draw(dMap_2DSQ_c * this);
undefined dMap_c__mapDrawIconFree(dMap_c * this, short param_1, short param_2, uchar param_3);
undefined dMap_c__mapDrawIconSelf(dMap_c * this, short param_1, short param_2, uchar param_3);
undefined dMap_c__mapDrawFrame(dMap_c * this, uchar param_1);
undefined dMap_c__mapDrawEnlargementSize(dMap_c * this, float param_1, float param_2, float param_3, float param_4, uchar param_5);
undefined dMap_c__mapDrawRealSize(dMap_c * this, float param_1, float param_2, uchar param_3);
undefined dMap_c__mapAGBSendIslandData(dMap_c * this);
undefined dMap_c__setPlayerStayAgbMapTypeNow(dMap_c * this, float param_1, float param_2);
undefined dMap_c__agbMapNoSet(dMap_c * this, uchar param_1, uchar param_2);
undefined dMap_c__agbMapNoSetCall(dMap_c * this);
undefined dMap_c__agbIsMsgSend(dMap_c * this);
undefined dMap_c__agbResetCursor(dMap_c * this);
undefined dMap_c__agbScrollX(dMap_c * this);
undefined dMap_c__agbScrollY(dMap_c * this);
undefined dMap_c__agbFlashCheck(dMap_c * this);
undefined dMap_c__agbIsActive(dMap_c * this);
undefined dMap_c__isInDspArea(dMap_c * this, float param_1, float param_2, bool param_3);
undefined dMap_c__mapAGBSendStatInit(dMap_c * this);
undefined dMap_c__mapAGBSendMapMain(dMap_c * this, float param_1, float param_2);
undefined dMap_c__calcEnlargementSizeParameter(dMap_c * this, float param_1, float param_2);
undefined dMap_c__calcScissor(dMap_c * this);
undefined dMap_c__mapMoveAll(dMap_c * this, float param_1, float param_2, int param_3, float param_4);
undefined dMap_c__mapDrawAll(dMap_c * this, float param_1, float param_2, int param_3, float param_4);
undefined dMap_c__mapDrawIcon(dMap_c * this);
undefined dMap_c__draw(dMap_c * this, float param_1, float param_2, int param_3, float param_4);
undefined dMap_c__point2Grid(dMap_c * this, float param_1, float param_2, char * param_3, char * param_4);
undefined dMap_c__point2GridAndLocal(dMap_c * this, float param_1, float param_2, char * param_3, char * param_4, short * param_5, short * param_6);
undefined dMap_c__getCheckPointUseGrid(dMap_c * this, char param_1, char param_2);
undefined dMap_c__getFmapChkPntPrm(dMap_c * this, int param_1, char * param_2, char * param_3, short * param_4, short * param_5, uchar * param_6);
undefined dMap_c__setFmapChkDtPrm(dMap_c * this);
undefined dMap_c__getFmapChkPntDtPnt(dMap_c * this, int param_1);
undefined dMap_c__initPoint(dMap_c * this);
undefined dMap_c__setGbaPoint_ocean(dMap_c * this, uchar param_1, float param_2, float param_3, short param_4, uchar param_5, uchar param_6, uchar param_7, uchar param_8);
undefined dMap_c__isPointStayInDspNowRoomAgbScr(dMap_c * this, short param_1, short param_2);
void dMap_c__setCollectPoint(byte param_1, byte param_2, float x, float y, float z, byte param_6, short param_7, GbaNames gbaName, byte param_9, byte param_10, byte param_11);
undefined dMap_c__setGbaPoint_dungeon(dMap_c * this, uchar param_1, float param_2, float param_3, short param_4, uchar param_5, uchar param_6, uchar param_7, uchar param_8);
undefined dMap_c__getPosAgbMapType(dMap_c * this, float param_1, float param_2, bool param_3);
undefined dMap_c__setGbaPoint(dMap_c * this, uchar param_1, float param_2, float param_3, short param_4, uchar param_5, uchar param_6, uchar param_7, uchar param_8);
undefined dMap_c__setArriveInfo(dMap_c * this, float param_1, float param_2);
undefined dMap_c__drawPointPlayer(dMap_c * this, float param_1, float param_2, short param_3);
undefined dMap_c__drawPointEnemy(dMap_c * this, float param_1, float param_2);
undefined dMap_c__drawPointAgbCursor(dMap_c * this, float param_1, float param_2);
undefined dMap_c__drawPointTbox(dMap_c * this, float param_1, float param_2, float param_3, float param_4);
undefined dMap_c__drawPointDoor(dMap_c * this, float param_1, float param_2, float param_3, float param_4, short param_5, uchar param_6);
undefined dMap_c__drawPointRestart(dMap_c * this, float param_1, float param_2, short param_3, float param_4, float param_5);
undefined dMap_c__drawPointFriend(dMap_c * this, float param_1, float param_2, float param_3);
undefined dMap_c__drawPointShip(dMap_c * this, float param_1, float param_2, short param_3, float param_4, float param_5);
undefined dMap_c__drawPointGc(dMap_c * this, uchar param_1, float param_2, float param_3, float param_4, char param_5, short param_6, uchar param_7, uchar param_8, uchar param_9, uchar param_10);
undefined dMap_c__drawPointMain(dMap_c * this, uchar param_1, uchar param_2, float param_3, float param_4, float param_5, char param_6, short param_7, uchar param_8, uchar param_9, uchar param_10, uchar param_11);
undefined dMap_c__drawPointAgb(dMap_c * this, uchar param_1, float param_2, float param_3, float param_4, char param_5, short param_6, uchar param_7, uchar param_8, uchar param_9, uchar param_10);
byte dMap_c__getTypeAgbGcFromTypeAcs(uchar param_1, uchar * param_2, uchar * param_3);
undefined dMap_c__drawPointSingle(byte param_1, float param_2, float param_3, float param_4, byte param_5, short param_6, byte param_7, byte param_8, uchar param_9);
void dMap_c__drawActorPointMiniMap(fopAc_ac_c * param_1);
undefined dMap_c__mapBufferSendAGB_commonCursor(dMap_c * this);
undefined dMap_c__mapBufferSendAGB_ocean(dMap_c * this);
undefined dMap_c__mapBufferSendAGB_dungeon(dMap_c * this);
undefined dMap_c__mapSetPointAll(dMap_c * this);
void dMap_c__mapBufferSendAGB(int param_1);
undefined dMap_RoomInfoCtrl_c__checkFloorMoveImageChangeRoom(dMap_RoomInfoCtrl_c * this, uchar param_1, uchar param_2, int param_3, short param_4, short param_5, float param_6);
int dMap_2DMtMapSpcl_tex_c__init(dMap_2DMtMapSpcl_tex_c * this, EVP_PKEY_CTX * ctx);
undefined dMap_2DMtMapSpcl_tex_c__setScroll(dMap_2DMtMapSpcl_tex_c * this, float param_1, float param_2, float param_3, float param_4);
int dMap_2DMtMapSpcl_c__init(dMap_2DMtMapSpcl_c * this, EVP_PKEY_CTX * ctx);
undefined dMap_2DMtMapSpcl_c__setPos(dMap_2DMtMapSpcl_c * this, short param_1, short param_2, short param_3, short param_4);
undefined dMap_2DMtMapSpcl_c__draw(dMap_2DMtMapSpcl_c * this);
undefined dMap_2DAGBScrDsp_c__setImage(dMap_2DAGBScrDsp_c * this, ResTIMG * param_1, map_dt_c * param_2);
int dMap_2DAGBScrDsp_c__init(dMap_2DAGBScrDsp_c * this, EVP_PKEY_CTX * ctx);
undefined dMap_2DAGBScrDsp_c__getScrnPrm(dMap_2DAGBScrDsp_c * this, float param_1, float param_2, int param_3, float param_4, int * param_5, float * param_6, float * param_7);
undefined dMap_2DAGBScrDsp_c__getScrnPrmXY(dMap_2DAGBScrDsp_c * this, float param_1, float param_2, float param_3, float param_4, int param_5, int param_6, float param_7, float param_8, int * param_9, int * param_10, float * param_11, float * param_12, float * param_13, float * param_14);
undefined dMap_2DAGBScrDsp_c__calc_standard_prm(dMap_2DAGBScrDsp_c * this, ushort param_1, ushort param_2, float param_3, float param_4, short param_5, short param_6, short param_7, short param_8, float param_9, float param_10, int * param_11, int * param_12, int * param_13, int * param_14, float * param_15, float * param_16, float * param_17, float * param_18, float * param_19, float * param_20);
undefined dMap_2DAGBScrDsp_c__draw(dMap_2DAGBScrDsp_c * this);
undefined dMap_2DAGBScrDsp_c__setPos(dMap_2DAGBScrDsp_c * this, short param_1, short param_2, short param_3, short param_4);
undefined dMap_2DAGBScrDsp_c__setScale(dMap_2DAGBScrDsp_c * this, float param_1, float param_2);
int dMap_2DTri_c__init(dMap_2DTri_c * this, EVP_PKEY_CTX * ctx);
undefined dMap_2DTri_c__draw(dMap_2DTri_c * this);
undefined dMap_2DTri_c__setPos(dMap_2DTri_c * this, short param_1, short param_2);
int dMap_2DPoint_c__init(dMap_2DPoint_c * this, EVP_PKEY_CTX * ctx);
undefined dMap_2DPoint_c__draw(dMap_2DPoint_c * this);
int dMap_2DAGBCursor_c__init(dMap_2DAGBCursor_c * this, EVP_PKEY_CTX * ctx);
undefined dMap_2DAGBCursor_c__draw(dMap_2DAGBCursor_c * this);
undefined dMap_2DT2_c__draw(dMap_2DT2_c * this);
int dMap_2DT2_c__init(dMap_2DT2_c * this, EVP_PKEY_CTX * ctx);
undefined dMap_Dmap_c__setTlut(dMap_Dmap_c * this, dmap_dmap_tlut_s * param_1, uchar param_2, uchar param_3, uchar param_4, float param_5);
undefined dMap_Dmap_c__setFloorTextureOne(dMap_Dmap_c * this, uchar param_1);
int dMap_Dmap_c__init(dMap_Dmap_c * this, EVP_PKEY_CTX * ctx);
undefined dMap_Dmap_c__draw(dMap_Dmap_c * this);
void dMap_Dmap_c__dMap_Dmap_c_destructor(dMap_Dmap_c * this);
void dDlst_base_c__dDlst_base_c_destructor(dDlst_base_c * this);
undefined dDlst_base_c__draw(dDlst_base_c * this);
void dMap_2DT2_c__dMap_2DT2_c_destructor(dMap_2DT2_c * this);
void dMap_2DAGBCursor_c__dMap_2DAGBCursor_c_destructor(dMap_2DAGBCursor_c * this);
void dMap_2DPoint_c__dMap_2DPoint_c_destructor(dMap_2DPoint_c * this);
void dMap_2DTri_c__dMap_2DTri_c_destructor(dMap_2DTri_c * this);
void dMap_2DAGBScrDsp_c__dMap_2DAGBScrDsp_c_destructor(dMap_2DAGBScrDsp_c * this);
void dMap_2DMtMapSpcl_c__dMap_2DMtMapSpcl_c_destructor(dMap_2DMtMapSpcl_c * this);
void dMap_2DSQ_c__dMap_2DSQ_c_destructor(dMap_2DSQ_c * this);
undefined d_map____sinit_d_map_cpp();
undefined d_map____arraydtor$4205();
undefined d_map____arraydtor$4202();
undefined d_map____arraydtor$4200();
void dMap_2DT2_c__dMap_2DT2_c(dMap_2DT2_c * this);
undefined d_map____arraydtor$4196();
void dMap_2DPoint_c__dMap_2DPoint_c(dMap_2DPoint_c * this);
undefined d_map____arraydtor$4188();
void dMap_2DMtMapSpcl_tex_c__dMap_2DMtMapSpcl_tex_c_destructor(dMap_2DMtMapSpcl_tex_c * this);
void dMap_2DMtMapSpcl_tex_c__dMap_2DMtMapSpcl_tex_c(dMap_2DMtMapSpcl_tex_c * this);
undefined d_map____arraydtor$4186();
void dMap_2DMtMapSpcl_c__dMap_2DMtMapSpcl_c(dMap_2DMtMapSpcl_c * this);
undefined d_map____arraydtor$4184();
void dMap_RoomInfo_c__dMap_RoomInfo_c_destructor(dMap_RoomInfo_c * this);
void dMap_RoomInfo_c__dMap_RoomInfo_c(dMap_RoomInfo_c * this);
undefined dComIfG_play_c__ct(dComIfG_play_c * this);
int dComIfG_play_c__init(dComIfG_play_c * this);
undefined dComIfG_play_c__itemInit(dComIfG_play_c * this);
uint dComIfG_play_c__getLayerNo(int param_1);
undefined dComIfG_play_c__createParticle(dComIfG_play_c * this);
undefined dComIfG_play_c__createDemo(dComIfG_play_c * this);
undefined dComIfG_play_c__removeDemo(dComIfG_play_c * this);
undefined dComIfG_play_c__executeEvtManager(dComIfG_play_c * this);
undefined dComIfG_play_c__createMagma(dComIfG_play_c * this);
undefined dComIfG_play_c__removeMagma(dComIfG_play_c * this);
undefined dComIfG_play_c__executeMagma(dComIfG_play_c * this);
undefined dComIfG_play_c__drawMagma(dComIfG_play_c * this);
undefined dComIfG_play_c__createGrass(dComIfG_play_c * this);
undefined dComIfG_play_c__removeGrass(dComIfG_play_c * this);
void dGrass_packet_c__dGrass_packet_c_destructor(dGrass_packet_c * this);
void dGrass_data_c__dGrass_data_c_destructor(dGrass_data_c * this);
undefined dComIfG_play_c__executeGrass(dComIfG_play_c * this);
undefined dComIfG_play_c__drawGrass(dComIfG_play_c * this);
undefined dComIfG_play_c__createFlower(dComIfG_play_c * this);
undefined dComIfG_play_c__removeFlower(dComIfG_play_c * this);
void dFlower_packet_c__dFlower_packet_c_destructor(dFlower_packet_c * this);
void dFlower_data_c__dFlower_data_c_destructor(dFlower_data_c * this);
undefined dComIfG_play_c__executeFlower(dComIfG_play_c * this);
undefined dComIfG_play_c__drawFlower(dComIfG_play_c * this);
undefined dComIfG_play_c__createTree(dComIfG_play_c * this);
undefined dComIfG_play_c__removeTree(dComIfG_play_c * this);
void dTree_packet_c__dTree_packet_c_destructor(dTree_packet_c * this);
void dTree_data_c__dTree_data_c_destructor(dTree_data_c * this);
void dTree_anm_c__dTree_anm_c_destructor(dTree_anm_c * this);
undefined dComIfG_play_c__executeTree(dComIfG_play_c * this);
undefined dComIfG_play_c__drawTree(dComIfG_play_c * this);
undefined dComIfG_play_c__createWood(dComIfG_play_c * this);
undefined dComIfG_play_c__removeWood(dComIfG_play_c * this);
undefined dComIfG_play_c__executeWood(dComIfG_play_c * this);
undefined dComIfG_play_c__drawWood(dComIfG_play_c * this);
undefined dComIfG_inf_c__ct(dComIfG_inf_c * this);
undefined dComIfG_changeOpeningScene();
undefined dComIfG_resetToOpening();
undefined phase_1();
undefined phase_2();
undefined phase_3();
PhaseState dComIfG_resLoad(request_of_phase_process_class * param_1, char * param_2);
undefined dComIfG_resDelete();
undefined dComIfGp_getReverb();
undefined4 dComIfGd_setSimpleShadow2(cXyz * param_1, double param_2, double param_3, ushort * param_4, short param_5, double param_6, _GXTexObj * param_7);
undefined dComIfGp_getShip();
undefined4 dComIfGp_getMapTrans(int param_1, float * param_2, float * param_3, short * param_4);
undefined dComIfGp_getRoomCamera();
undefined dComIfGp_getRoomArrow();
void dComIfGp_setNextStage(char * pStageName, short startCode, byte roomIdx, byte layerNo, float param_5, uint mode, int param_7, byte wipeType);
undefined dComIfGs_onStageTbox();
undefined dComIfGs_isStageTbox();
undefined dComIfGs_isStageBossEnemy();
undefined dComIfGs_onStageLife();
undefined dComIfGs_isStageLife();
bool dComIfGs_checkGetItem(dItem_data__ItemNo itemNo);
undefined dComIfGs_checkGetItemNum();
int dComIfGd_setShadow(ulong param_1, char param_2, J3DModel * param_3, cXyz * param_4, double param_5, double param_6, double param_7, double param_8, ushort * param_9, dKy_tevstr_c * param_10, short param_11, double param_12, _GXTexObj * param_13);
undefined getSceneList();
undefined dComIfGd_getMeshSceneList();
int dComIfGs_checkSeaLandingEvent(byte param_1);
undefined dComIfGs_setGameStartStage();
undefined dComIfGs_gameStart();
undefined dComIfGs_copyPlayerRecollectionData();
undefined dComIfGs_setPlayerRecollectionData();
undefined dComIfGs_revPlayerRecollectionData();
undefined dComIfGs_exchangePlayerRecollectionData();
undefined dComIfGs_setSelectEquip();
undefined __sinit_d_com_inf_game_cpp();
void dComIfG_inf_c__dComIfG_inf_c_destructor(dComIfG_inf_c * this);
void dComIfG_play_c__dComIfG_play_c_destructor(dComIfG_play_c * this);
void dEvt_order_c__dEvt_order_c_destructor(dEvt_order_c * this);
void dComIfG_camera_info_class__dComIfG_camera_info_class_destructor(dComIfG_camera_info_class * this);
void dComIfG_camera_info_class__dComIfG_camera_info_class(dComIfG_camera_info_class * this);
void dDlst_window_c__dDlst_window_c_destructor(dDlst_window_c * this);
void dDlst_window_c__dDlst_window_c(dDlst_window_c * this);
void dAttDraw_CallBack_c__dAttDraw_CallBack_c_destructor(dAttDraw_CallBack_c * this);
void mDoExt_McaMorfCallBack1_c__mDoExt_McaMorfCallBack1_c_destructor(mDoExt_McaMorfCallBack1_c * this);
void dCcS__dCcS_destructor(dCcS * this);
void dCcMassS_Mng__dCcMassS_Mng_destructor(dCcMassS_Mng * this);
void dCcMassS_Obj__dCcMassS_Obj_destructor(dCcMassS_Obj * this);
void cCcS__cCcS_destructor(cCcS * this);
void dBgS__dBgS_destructor(dBgS * this);
void cBgS__cBgS_destructor(cBgS * this);
void cBgS_ChkElm__cBgS_ChkElm_destructor(cBgS_ChkElm * this);
void cBgS_ChkElm__cBgS_ChkElm(cBgS_ChkElm * this);
void dSv_zone_c__dSv_zone_c(dSv_zone_c * this);
void dSv_memory_c__dSv_memory_c(dSv_memory_c * this);
void cM3dGCyl__cM3dGCyl_destructor(cM3dGCyl * this);
void cCcD_ShapeAttr__cCcD_ShapeAttr_destructor(cCcD_ShapeAttr * this);
undefined cCcD_ShapeAttr__CrossAtTg(cCcD_ShapeAttr * this, cCcD_ShapeAttr * param_1, cXyz * param_2);
undefined cCcD_ShapeAttr__CrossCo(cCcD_ShapeAttr * this, cCcD_ShapeAttr * param_1, float * param_2);
undefined cCcD_ShapeAttr__GetCoCP(cCcD_ShapeAttr * this);
// undefined cCcD_ShapeAttr__GetCoCP(cCcD_ShapeAttr * this);
void cM3dGCps__cM3dGCps_destructor(cM3dGCps * this);
void cCcD_DivideInfo__cCcD_DivideInfo_destructor(cCcD_DivideInfo * this);
void cM3dGAab__cM3dGAab_destructor(cM3dGAab * this);
void cCcD_DivideArea__cCcD_DivideArea_destructor(cCcD_DivideArea * this);
undefined d_com_lib_game__dComLbG_PhaseHandler(request_of_phase_process_class * param_1, int param_2(void * ), void * param_3);
int daSteamTag_c__init(daSteamTag_c * this, EVP_PKEY_CTX * ctx);
undefined daObjPirateship__getShipOffsetY(daObjPirateship * this, short * param_1, short * param_2, float param_3);
undefined daAgbsw0_c__incTclDispose(daAgbsw0_c * this);
undefined daAgbsw0_c__incTclBeat(daAgbsw0_c * this);
undefined daSalvage_c__init_room(daSalvage_c * this, char param_1);
undefined daObjLight__Act_c__renew_light_angle(Act_c * this);
int daObjLight__Act_c__get_light_angle(void);
int daObjLight__Act_c__get_light_dif_angle(void);
void daObjLight__Act_c__set_light_dif_angle_LOD(short param_1);
undefined daObjLight__Act_c__set_light_dif_angle_FRRS(Act_c * this, short param_1);
undefined daDai_c__getMaxDaiza(daDai_c * this);
undefined daDai_c__getDaizaSetItemNum(daDai_c * this);
undefined daNpc_Md_c__getMaxFlyingTimer(daNpc_Md_c * this);
undefined daArrow_c__getKeepType(daArrow_c * this);
undefined daArrow_c__setKeepType(daArrow_c * this, uchar param_1);
int daIball_c__init(daIball_c * this, EVP_PKEY_CTX * ctx);
undefined daIball_c__regist(daIball_c * this, fopAc_ac_c * param_1);
int daIball_c__remove(daIball_c * this, char * __filename);
undefined daIball_c__remove_old(daIball_c * this);
undefined daObj_Roten_c__getCreateCount(daObj_Roten_c * this);
undefined daTagKbItem_c__kb_dig(daTagKbItem_c * this, fopAc_ac_c * param_1);
undefined daTagKbItem_c__dig_main(daTagKbItem_c * this);
undefined daTitle_proc_c__daTitle_Kirakira_Sound_flag_on(daTitle_proc_c * this);
undefined daStandItem_c__daiItemNodeCallBack(daStandItem_c * this, J3DNode * param_1, int param_2);
undefined d_com_static____sinit_d_com_static_cpp();
void dPa_smokeEcallBack__dPa_smokeEcallBack_destructor(dPa_smokeEcallBack * this);
undefined JPACallBackBase__JPABaseEmitter_star____draw(JPACallBackBase__JPABaseEmitter_star__ * this, JPABaseEmitter * param_1);
undefined JPACallBackBase__JPABaseEmitter_star____executeAfter(JPACallBackBase__JPABaseEmitter_star__ * this, JPABaseEmitter * param_1);
undefined JPACallBackBase__JPABaseEmitter_star____execute(JPACallBackBase__JPABaseEmitter_star__ * this, JPABaseEmitter * param_1);
int JPACallBackBase__JPABaseEmitter_star____init(JPACallBackBase__JPABaseEmitter_star__ * this, EVP_PKEY_CTX * ctx);
undefined JPACallBackBase__JPABaseEmitter_star____JPACallBackBase_destructor(JPACallBackBase__JPABaseEmitter_star__ * this);
void dPa_levelEcallBack__dPa_levelEcallBack_destructor(dPa_levelEcallBack * this);
void d_lib__dLib_setCirclePath(dLib_circle_path_c * param_1);
double d_lib__dLib_getWaterY(cXyz * param_1, dBgS_ObjAcch * param_2);
void d_lib__dLib_waveRot(cXyz * param_1, float param_2, dLib_wave_c * pWave);
undefined d_lib__dLib_debugDrawAxis();
undefined d_lib__dLib_debugDrawFan();
undefined d_lib__dLib_brkInit();
undefined d_lib__dLib_btkInit();
void d_lib__dLib_setAnm(char * param_1, mDoExt_McaMorf * param_2, byte * param_3, byte * param_4, byte * param_5, void * param_6, void * param_7, byte param_8);
undefined d_lib__dLib_bcks_setAnm();
undefined d_lib__dLib_scaleAnime();
undefined d_lib__dLib_getPosFromMtx();
uint d_lib__dLib_pathInfo(dPath * * param_1, uint param_2);
void d_lib__dLib_pathMove(cXyz * pDst, byte * pPointIdx, dPath * pPath, float speed, pointer pCB, void * pUserData);
undefined d_lib__dLib_setNextStageBySclsNum(undefined4 param_1, byte roomIdx);
undefined d_lib__dLib_setFirstMsg();
undefined d_lib__dLib_checkPlayerInCircle();
undefined d_lib__dLib_checkActorInCircle();
undefined d_lib__dLib_checkActorInFan();
void STControl__STControl(STControl * this, short param_1, short param_2, short param_3, short param_4, float param_5, float param_6, short param_7, short param_8);
undefined STControl__setWaitParm(STControl * this, short param_1, short param_2, short param_3, short param_4, float param_5, float param_6, short param_7, short param_8);
int STControl__init(STControl * this, EVP_PKEY_CTX * ctx);
undefined STControl__Xinit(STControl * this);
undefined STControl__Yinit(STControl * this);
undefined STControl__getValueStick(STControl * this);
undefined STControl__getAngleStick(STControl * this);
undefined CSTControl__getValueStick(CSTControl * this);
undefined CSTControl__getAngleStick(CSTControl * this);
undefined STControl__checkTrigger(STControl * this);
undefined STControl__checkLeftTrigger(STControl * this);
undefined STControl__checkRightTrigger(STControl * this);
undefined STControl__checkUpTrigger(STControl * this);
undefined STControl__checkDownTrigger(STControl * this);
undefined d_lib__dLib_getIplDaysFromSaveTime();
undefined d_lib__dLib_get_QuatFromTriangle();
undefined d_lib__dLib_calc_QuatFromTriangle();
int dSv_player_status_a_c__init(dSv_player_status_a_c * this);
int dSv_player_status_b_c__init(dSv_player_status_b_c * this);
int dSv_player_return_place_c__init(dSv_player_return_place_c * this);
undefined dSv_player_return_place_c__set(dSv_player_return_place_c * this, char * param_1, char param_2, uchar param_3);
int dSv_player_item_c__init(dSv_player_item_c * this);
undefined dSv_player_item_c__setBottleItemIn(dSv_player_item_c * this, uchar param_1, uchar param_2);
undefined dSv_player_item_c__setEmptyBottleItemIn(dSv_player_item_c * this, uchar param_1);
undefined dSv_player_item_c__setEmptyBottle(dSv_player_item_c * this);
undefined dSv_player_item_c__setEquipBottleItemIn(dSv_player_item_c * this, uchar param_1, uchar param_2);
undefined dSv_player_item_c__setEquipBottleItemEmpty(dSv_player_item_c * this, uchar param_1);
// undefined dSv_player_item_c__setEquipBottleItemIn(dSv_player_item_c * this, uchar param_1);
// undefined dSv_player_item_c__setEquipBottleItemEmpty(dSv_player_item_c * this);
undefined dSv_player_item_c__checkBottle(dSv_player_item_c * this, uchar param_1);
undefined dSv_player_item_c__checkEmptyBottle(dSv_player_item_c * this);
int dSv_player_get_item_c__init(dSv_player_get_item_c * this);
undefined dSv_player_get_item_c__onItem(dSv_player_get_item_c * this, int param_1, uchar param_2);
uint dSv_player_get_item_c__isItem(dSv_player_get_item_c * this, int param_1, byte param_2);
undefined dSv_player_get_item_c__onBottleItem(dSv_player_get_item_c * this, uchar param_1);
undefined dSv_player_get_item_c__isBottleItem(dSv_player_get_item_c * this, uchar param_1);
int dSv_player_item_record_c__init(dSv_player_item_record_c * this);
undefined dSv_player_item_record_c__resetTimer(dSv_player_item_record_c * this, ushort param_1);
undefined dSv_player_item_record_c__decTimer(dSv_player_item_record_c * this);
undefined dSv_player_item_record_c__getTimer(dSv_player_item_record_c * this);
int dSv_player_item_max_c__init(dSv_player_item_max_c * this);
int dSv_player_bag_item_c__init(dSv_player_bag_item_c * this);
undefined dSv_player_bag_item_c__setBeastItem(dSv_player_bag_item_c * this, uchar param_1);
undefined dSv_player_bag_item_c__setBeastItemEmpty(dSv_player_bag_item_c * this, uchar param_1);
undefined dSv_player_bag_item_c__checkBeastItem(dSv_player_bag_item_c * this, uchar param_1);
undefined dSv_player_bag_item_c__setBaitItemChange(dSv_player_bag_item_c * this, uchar param_1);
// undefined dSv_player_bag_item_c__setBaitItemChange(dSv_player_bag_item_c * this, uchar param_1, uchar param_2);
undefined dSv_player_bag_item_c__setBaitItemEmpty(dSv_player_bag_item_c * this);
// undefined dSv_player_bag_item_c__setBaitItemEmpty(dSv_player_bag_item_c * this, uchar param_1);
undefined dSv_player_bag_item_c__setBaitItem(dSv_player_bag_item_c * this, uchar param_1);
undefined dSv_player_bag_item_c__checkBaitItemEmpty(dSv_player_bag_item_c * this);
undefined dSv_player_bag_item_c__checkBaitItem(dSv_player_bag_item_c * this, uchar param_1);
undefined dSv_player_bag_item_c__setReserveItemChange(dSv_player_bag_item_c * this, uchar param_1);
// undefined dSv_player_bag_item_c__setReserveItemChange(dSv_player_bag_item_c * this, uchar param_1, uchar param_2);
undefined dSv_player_bag_item_c__setReserveItemEmpty(dSv_player_bag_item_c * this);
// undefined dSv_player_bag_item_c__setReserveItemEmpty(dSv_player_bag_item_c * this, uchar param_1);
undefined dSv_player_bag_item_c__setReserveItem(dSv_player_bag_item_c * this, uchar param_1);
undefined dSv_player_bag_item_c__checkReserveItemEmpty(dSv_player_bag_item_c * this);
undefined dSv_player_bag_item_c__checkReserveItem(dSv_player_bag_item_c * this, uchar param_1);
int dSv_player_get_bag_item_c__init(dSv_player_get_bag_item_c * this);
undefined dSv_player_get_bag_item_c__onBeast(dSv_player_get_bag_item_c * this, byte bitIndex);
undefined dSv_player_get_bag_item_c__isBeast(dSv_player_get_bag_item_c * this, byte bitIndex);
undefined dSv_player_get_bag_item_c__onBait(dSv_player_get_bag_item_c * this, uchar param_1);
undefined dSv_player_get_bag_item_c__isBait(dSv_player_get_bag_item_c * this, uchar param_1);
undefined dSv_player_get_bag_item_c__onReserve(dSv_player_get_bag_item_c * this, uchar param_1);
undefined dSv_player_get_bag_item_c__isReserve(dSv_player_get_bag_item_c * this, uchar param_1);
int dSv_player_bag_item_record_c__init(dSv_player_bag_item_record_c * this);
int dSv_player_collect_c__init(dSv_player_collect_c * this);
undefined dSv_player_collect_c__onCollect(dSv_player_collect_c * this, int param_1, uchar param_2);
undefined dSv_player_collect_c__offCollect(dSv_player_collect_c * this, int param_1, uchar param_2);
uint dSv_player_collect_c__isCollect(dSv_player_collect_c * this, int param_1, byte param_2);
undefined dSv_player_collect_c__onTact(dSv_player_collect_c * this, uchar param_1);
undefined dSv_player_collect_c__isTact(dSv_player_collect_c * this, uchar param_1);
undefined dSv_player_collect_c__onTriforce(dSv_player_collect_c * this, uchar param_1);
undefined dSv_player_collect_c__isTriforce(dSv_player_collect_c * this, uchar param_1);
undefined dSv_player_collect_c__onSymbol(dSv_player_collect_c * this, uchar param_1);
undefined dSv_player_collect_c__isSymbol(dSv_player_collect_c * this, uchar param_1);
undefined dSv_player_collect_c__getTriforceNum(dSv_player_collect_c * this);
int dSv_player_map_c__init(dSv_player_map_c * this);
undefined dSv_player_map_c__onGetMap(dSv_player_map_c * this, int param_1);
undefined dSv_player_map_c__isGetMap(dSv_player_map_c * this, int param_1);
undefined dSv_player_map_c__onOpenMap(dSv_player_map_c * this, int param_1);
undefined dSv_player_map_c__offOpenMap(dSv_player_map_c * this, int param_1);
undefined dSv_player_map_c__isOpenMap(dSv_player_map_c * this, int param_1);
undefined dSv_player_map_c__onCompleteMap(dSv_player_map_c * this, int param_1);
undefined dSv_player_map_c__offCompleteMap(dSv_player_map_c * this, int param_1);
undefined dSv_player_map_c__isCompleteMap(dSv_player_map_c * this, int param_1);
undefined dSv_player_map_c__onTriforce(dSv_player_map_c * this, int param_1);
undefined dSv_player_map_c__offTriforce(dSv_player_map_c * this, int param_1);
undefined dSv_player_map_c__isTriforce(dSv_player_map_c * this, int param_1);
undefined dSv_player_map_c__getCollectMapNum(dSv_player_map_c * this);
undefined dSv_player_map_c__onFmapBit(dSv_player_map_c * this, int param_1, uchar param_2);
undefined dSv_player_map_c__isFmapBit(dSv_player_map_c * this, int param_1, uchar param_2);
undefined dSv_player_map_c__onSaveArriveGrid(dSv_player_map_c * this, int param_1);
undefined dSv_player_map_c__isSaveArriveGrid(dSv_player_map_c * this, int param_1);
undefined dSv_player_map_c__onSaveArriveGridForAgb(dSv_player_map_c * this, int param_1);
undefined dSv_player_map_c__isSaveArriveGridForAgb(dSv_player_map_c * this, int param_1);
int dSv_player_info_c__init(dSv_player_info_c * this);
int dSv_player_config_c__init(dSv_player_config_c * this);
undefined dSv_player_config_c__checkVibration(dSv_player_config_c * this);
int dSv_player_priest_c__init(dSv_player_priest_c * this, EVP_PKEY_CTX * ctx);
undefined dSv_player_priest_c__set(dSv_player_priest_c * this, uchar param_1, cXyz * param_2, short param_3, char param_4);
int dSv_player_status_c_c__init(dSv_player_status_c_c * this, EVP_PKEY_CTX * ctx);
int dSv_player_c__init(dSv_player_c * this);
int dSv_memBit_c__init(dSv_memBit_c * this);
undefined dSv_memBit_c__onTbox(dSv_memBit_c * this, int param_1);
undefined dSv_memBit_c__isTbox(dSv_memBit_c * this, int param_1);
undefined dSv_memBit_c__onSwitch(dSv_memBit_c * this, int switchNo);
undefined dSv_memBit_c__offSwitch(dSv_memBit_c * this, int param_1);
undefined dSv_memBit_c__isSwitch(dSv_memBit_c * this, int param_1);
undefined dSv_memBit_c__revSwitch(dSv_memBit_c * this, int param_1);
undefined dSv_memBit_c__onItem(dSv_memBit_c * this, int param_1);
undefined dSv_memBit_c__isItem(dSv_memBit_c * this, int param_1);
undefined dSv_memBit_c__onVisitedRoom(dSv_memBit_c * this, int param_1);
undefined dSv_memBit_c__isVisitedRoom(dSv_memBit_c * this, int param_1);
undefined dSv_memBit_c__onDungeonItem(dSv_memBit_c * this, int param_1);
undefined dSv_memBit_c__isDungeonItem(dSv_memBit_c * this, int param_1);
int dSv_ocean_c__init(dSv_ocean_c * this);
undefined dSv_ocean_c__onOceanSvBit(dSv_ocean_c * this, uchar param_1, ushort param_2);
undefined dSv_ocean_c__isOceanSvBit(dSv_ocean_c * this, uchar param_1, ushort param_2);
int dSv_event_c__init(dSv_event_c * this);
undefined dSv_event_c__onEventBit(dSv_event_c * this, ushort param_1);
undefined dSv_event_c__offEventBit(dSv_event_c * this, ushort param_1);
undefined dSv_event_c__isEventBit(dSv_event_c * this, ushort param_1);
undefined dSv_event_c__setEventReg(dSv_event_c * this, ushort param_1, uchar param_2);
undefined dSv_event_c__getEventReg(dSv_event_c * this, ushort param_1);
int dSv_reserve_c__init(dSv_reserve_c * this, EVP_PKEY_CTX * ctx);
int dSv_memory_c__init(dSv_memory_c * this);
int dSv_danBit_c__init(dSv_danBit_c * this, char param_1);
undefined dSv_danBit_c__onSwitch(dSv_danBit_c * this, int switchNo);
undefined dSv_danBit_c__offSwitch(dSv_danBit_c * this, int param_1);
undefined dSv_danBit_c__isSwitch(dSv_danBit_c * this, int param_1);
undefined dSv_danBit_c__revSwitch(dSv_danBit_c * this, int param_1);
int dSv_zoneBit_c__init(dSv_zoneBit_c * this);
undefined dSv_zoneBit_c__clearRoomSwitch(dSv_zoneBit_c * this);
undefined dSv_zoneBit_c__onSwitch(dSv_zoneBit_c * this, int param_1);
undefined dSv_zoneBit_c__offSwitch(dSv_zoneBit_c * this, int param_1);
undefined dSv_zoneBit_c__isSwitch(dSv_zoneBit_c * this, int param_1);
undefined dSv_zoneBit_c__revSwitch(dSv_zoneBit_c * this, int param_1);
undefined dSv_zoneBit_c__onItem(dSv_zoneBit_c * this, int param_1);
undefined dSv_zoneBit_c__isItem(dSv_zoneBit_c * this, int param_1);
int dSv_zoneActor_c__init(dSv_zoneActor_c * this);
undefined dSv_zoneActor_c__on(dSv_zoneActor_c * this, int param_1);
undefined dSv_zoneActor_c__is(dSv_zoneActor_c * this, int param_1);
int dSv_zone_c__init(dSv_zone_c * this, int param_1);
undefined dSv_restart_c__setRoom(dSv_restart_c * this, cXyz * param_1, short param_2, char param_3);
undefined dSv_restart_c__setRestartOption(dSv_restart_c * this, char param_1);
// undefined dSv_restart_c__setRestartOption(dSv_restart_c * this, char param_1, cXyz * pos, short rotY, char roomNo);
undefined dSv_turnRestart_c__set(dSv_turnRestart_c * this, cXyz * param_1, short param_2, char param_3, ulong param_4, cXyz * param_5, short param_6, int param_7);
int dSv_info_c__init(dSv_info_c * this);
undefined dSv_info_c__reinit(dSv_info_c * this);
int dSv_save_c__init(dSv_save_c * this);
undefined dSv_info_c__getSave(dSv_info_c * this, int param_1);
undefined dSv_info_c__putSave(dSv_info_c * this, int param_1);
undefined dSv_info_c__initZone(dSv_info_c * this);
undefined dSv_info_c__createZone(dSv_info_c * this, int param_1);
undefined dSv_info_c__onSwitch(dSv_info_c * this, int switchNo, int roomNo);
int dStage_roomControl_c__getZoneNo(int roomNo);
undefined dSv_info_c__offSwitch(dSv_info_c * this, int param_1, int param_2);
bool dSv_info_c__isSwitch(dSv_info_c * this, int switchIndex, int roomNo);
undefined dSv_info_c__revSwitch(dSv_info_c * this, int param_1, int param_2);
undefined dSv_info_c__onItem(dSv_info_c * this, int param_1, int param_2);
undefined dSv_info_c__isItem(dSv_info_c * this, int param_1, int param_2);
undefined dSv_info_c__onActor(dSv_info_c * this, int param_1, int param_2);
undefined dSv_info_c__isActor(dSv_info_c * this, int param_1, int param_2);
undefined dSv_info_c__memory_to_card(dSv_info_c * this, char * param_1, int param_2);
undefined dSv_info_c__card_to_memory(dSv_info_c * this, char * param_1, int param_2);
undefined4 dSv_info_c__initdata_to_card(dSv_info_c * this, char * param_1, int param_2);
undefined d_save_init__setInitEventBit();
undefined ShopCam_action_c__shop_cam_action_init(ShopCam_action_c * this);
undefined ShopCam_action_c__shop_cam_action(ShopCam_action_c * this);
undefined ShopCam_action_c__rsh_talk_cam_action_init(ShopCam_action_c * this, fopAc_ac_c * param_1, cXyz * param_2, cXyz * param_3, float param_4);
undefined ShopCam_action_c__rsh_talk_cam_action(ShopCam_action_c * this);
undefined ShopCam_action_c__ds_normal_cam_action_init(ShopCam_action_c * this);
undefined ShopCam_action_c__ds_normal_cam_action(ShopCam_action_c * this);
undefined ShopCam_action_c__Save(ShopCam_action_c * this);
undefined ShopCam_action_c__Reset(ShopCam_action_c * this);
undefined ShopCam_action_c__move(ShopCam_action_c * this);
undefined ShopItems_c__createItem(ShopItems_c * this, int param_1, int param_2);
undefined ShopItems_c__Item_Select(ShopItems_c * this, int param_1);
undefined ShopItems_c__Item_Wait(ShopItems_c * this, int param_1);
undefined ShopItems_c__Item_ZoomUp(ShopItems_c * this, cXyz * param_1);
undefined ShopItems_c__Item_Move(ShopItems_c * this);
undefined ShopItems_c__getSelectItemPos(ShopItems_c * this);
undefined ShopItems_c__getSelectItemBasePos(ShopItems_c * this);
undefined ShopItems_c__hideSelectItem(ShopItems_c * this);
undefined ShopItems_c__SoldOutItem(ShopItems_c * this, int param_1);
undefined ShopItems_c__getItemNo(ShopItems_c * this, int param_1);
undefined ShopItems_c__showItem(ShopItems_c * this);
undefined ShopItems_c__getSelectItemNo(ShopItems_c * this);
undefined ShopItems_c__getSelectItemShowMsg(ShopItems_c * this);
undefined ShopItems_c__getSelectItemBuyMsg(ShopItems_c * this);
undefined d_shop__dShop_get_next_select();
undefined ShopItems_c__setItemSetDataList(ShopItems_c * this);
// undefined ShopItems_c__setItemSetDataList(ShopItems_c * this, __shop_items_set_data * * param_1);
undefined ShopItems_c__isSoldOutItemAll(ShopItems_c * this);
undefined d_shop__dShop_now_triggercheck(msg_class * param_1, undefined4 param_2, undefined4 param_3, undefined4 param_4, undefined4 param_5, undefined4 param_6);
undefined d_shop__dShop_maxCheck();
undefined d_shop__dShop_BoughtErrorStatus();
void ShopCursor_c__ShopCursor_c(ShopCursor_c * this, J3DModelData * param_1, J3DAnmTevRegKey * param_2, float param_3);
void mDoExt_brkAnm__mDoExt_brkAnm_destructor(mDoExt_brkAnm * this);
void mDoExt_baseAnm__mDoExt_baseAnm_destructor(mDoExt_baseAnm * this);
undefined ShopCursor_c__anm_play(ShopCursor_c * this);
undefined ShopCursor_c__draw(ShopCursor_c * this);
undefined ShopCursor_c__setPos(ShopCursor_c * this, cXyz * param_1);
undefined d_shop__ShopCursor_create();
void JntHit_HIO_c__JntHit_HIO_c(JntHit_HIO_c * this);
undefined JntHit_c__CreateInit(JntHit_c * this);
undefined JntHit_c__CylHitPosAngleOffset(JntHit_c * this, cXyz * param_1, csXyz * param_2, cXyz * param_3, csXyz * param_4, cXyz * param_5, cXyz * param_6, float param_7);
undefined JntHit_c__Cyl2HitPosAngleOffset(JntHit_c * this, cXyz * param_1, csXyz * param_2, cXyz * param_3, csXyz * param_4, cXyz * param_5, cXyz * param_6, float param_7);
undefined JntHit_c__SphHitPosAngleOffset(JntHit_c * this, cXyz * param_1, csXyz * param_2, cXyz * param_3, csXyz * param_4, cXyz * param_5, float param_6);
undefined JntHit_c__HitBufferUpdate(JntHit_c * this, int * param_1, cXyz * param_2, int param_3, csXyz * param_4, cXyz * param_5);
undefined JntHit_c__searchJntHitPosAngleOffset(JntHit_c * this, cXyz * param_1, csXyz * param_2, cXyz * param_3, csXyz * param_4);
undefined d_jnt_hit__JntHit_create();
void JntHit_HIO_c__JntHit_HIO_c_destructor(JntHit_HIO_c * this);
void dChain_packet_c__dChain_packet_c(dChain_packet_c * this, int param_1, dKy_tevstr_c * param_2, float param_3);
void dChain_packet_c__dChain_packet_c_destructor(dChain_packet_c * this);
undefined dChain_packet_c__draw(dChain_packet_c * this);
undefined d_chain__dChain_packet_create();
undefined d_chain____sinit_d_chain_cpp();
void dCloth_packet_c__dCloth_packet_c(dCloth_packet_c * this, ResTIMG * param_1, int param_2, int param_3, float param_4, float param_5, dKy_tevstr_c * param_6, cXyz * * param_7);
void dCloth_packet_c__dCloth_packet_c_destructor(dCloth_packet_c * this);
undefined d_cloth_packet__default_factor_checkCB();
int dCloth_packet_c__init(dCloth_packet_c * this, EVP_PKEY_CTX * ctx);
undefined dCloth_packet_c__setGlobalWind(dCloth_packet_c * this, cXyz * param_1);
undefined dCloth_packet_c__cloth_move(dCloth_packet_c * this);
undefined dCloth_packet_c__draw(dCloth_packet_c * this);
undefined d_cloth_packet__get_cloth_anim_sub_factor();
undefined dCloth_packet_c__getFactor(dCloth_packet_c * this, cXyz * param_1, cXyz * param_2, cXyz * param_3, float param_4, float param_5, float param_6, int param_7, int param_8);
undefined dCloth_packet_c__setNrm(dCloth_packet_c * this);
undefined dCloth_packet_c__setMtx(dCloth_packet_c * this, float * param_1);
undefined dCloth_packet_c__cloth_draw(dCloth_packet_c * this);
undefined dCloth_packet_c__TexObjInit(dCloth_packet_c * this, ResTIMG * param_1);
undefined dCloth_packet_c__TexObjLoad(dCloth_packet_c * this);
undefined dCloth_packet_c__TevSetting(dCloth_packet_c * this);
undefined dCloth_packet_c__plot(dCloth_packet_c * this);
undefined d_cloth_packet__dCloth_packet_create();
undefined dCloth_packetXlu_c__TevSetting(dCloth_packetXlu_c * this);
undefined dCloth_packetXlu_c__cloth_draw(dCloth_packetXlu_c * this);
undefined d_cloth_packet__dCloth_packetXlu_create();
undefined dClothVobj03_c__cloth_copy(dClothVobj03_c * this);
int dClothVobj03_c__init(dClothVobj03_c * this, EVP_PKEY_CTX * ctx);
undefined dClothVobj03_c__cloth_move(dClothVobj03_c * this);
undefined dClothVobj03_c__TexObjInit(dClothVobj03_c * this, ResTIMG * param_1);
undefined dClothVobj03_c__TexObjLoad(dClothVobj03_c * this);
undefined d_cloth_packet__dClothVobj03_create();
undefined dClothVobj04_c__cloth_copy(dClothVobj04_c * this);
int dClothVobj04_c__init(dClothVobj04_c * this, EVP_PKEY_CTX * ctx);
undefined dClothVobj04_c__cloth_move(dClothVobj04_c * this);
undefined dClothVobj04_c__TexObjInit(dClothVobj04_c * this, ResTIMG * param_1);
undefined dClothVobj04_c__TexObjLoad(dClothVobj04_c * this);
undefined d_cloth_packet__dClothVobj04_create();
undefined dClothVobj05_c__cloth_copy(dClothVobj05_c * this);
int dClothVobj05_c__init(dClothVobj05_c * this, EVP_PKEY_CTX * ctx);
undefined dClothVobj05_c__cloth_move(dClothVobj05_c * this);
undefined dClothVobj05_c__TexObjInit(dClothVobj05_c * this, ResTIMG * param_1);
undefined dClothVobj05_c__TexObjLoad(dClothVobj05_c * this);
undefined d_cloth_packet__dClothVobj05_VtxFactorCB();
undefined d_cloth_packet__dClothVobj05_create();
undefined dClothVobj07_0_c__cloth_copy(dClothVobj07_0_c * this);
int dClothVobj07_0_c__init(dClothVobj07_0_c * this, EVP_PKEY_CTX * ctx);
undefined dClothVobj07_0_c__cloth_move(dClothVobj07_0_c * this);
undefined dClothVobj07_0_c__TexObjInit(dClothVobj07_0_c * this, ResTIMG * param_1);
undefined dClothVobj07_0_c__TexObjLoad(dClothVobj07_0_c * this);
undefined d_cloth_packet__dClothVobj07_0_VtxFactorCB();
undefined d_cloth_packet__dClothVobj07_0_create();
void dClothVobj07_0_c__dClothVobj07_0_c_destructor(dClothVobj07_0_c * this);
void dClothVobj05_c__dClothVobj05_c_destructor(dClothVobj05_c * this);
void dClothVobj04_c__dClothVobj04_c_destructor(dClothVobj04_c * this);
void dClothVobj03_c__dClothVobj03_c_destructor(dClothVobj03_c * this);
void dCloth_packetXlu_c__dCloth_packetXlu_c_destructor(dCloth_packetXlu_c * this);
undefined daObj__make_land_effect(daObj * this, fopAc_ac_c * param_1, dBgS_GndChk * param_2, float param_3);
undefined daObj__get_wind_spd(daObj * this, fopAc_ac_c * param_1, float param_2);
undefined4 * daObj__get_path_spd(cBgS_PolyInfo * param_1, float param_2);
undefined daObj__posMoveF_stream(daObj * this, fopAc_ac_c * param_1, cXyz * param_2, cXyz * param_3, float param_4, float param_5);
undefined daObj___unnamed_d_a_obj_cpp___posMoveF_resist_acc(_unnamed_d_a_obj_cpp_ * this, cXyz * param_1, fopAc_ac_c * param_2, cXyz * param_3, float param_4, float param_5);
undefined daObj___unnamed_d_a_obj_cpp___posMoveF_grade_acc(_unnamed_d_a_obj_cpp_ * this, cXyz * param_1, fopAc_ac_c * param_2, cXyz * param_3, float param_4, float param_5, cXyz * param_6, cXyz * param_7);
void daObj__posMoveF_grade(fopAc_ac_c * param_1, cXyz * param_2, cXyz * param_3, float param_4, float param_5, cXyz * param_6, float param_7, float param_8, cXyz * param_9);
undefined daObj__quat_rotBaseY(daObj * this, Quaternion * param_1, cXyz * param_2);
undefined daObj__quat_rotBaseY2(daObj * this, Quaternion * param_1, cXyz * param_2);
undefined daObj__quat_rotBaseZ(daObj * this, Quaternion * param_1, cXyz * param_2);
undefined daObj__quat_rotVec(daObj * this, Quaternion * param_1, cXyz * param_2, cXyz * param_3);
undefined daObj__SetCurrentRoomNo(daObj * this, fopAc_ac_c * param_1, dBgS_GndChk * param_2);
undefined daObj__HitSeStart(cXyz * param_1, int param_2, dCcD_GObjInf * param_3, ulong param_4);
undefined daObj__HitEff_sub_kikuzu(cXyz * param_1, cXyz * param_2, dKy_tevstr_c * param_3);
void daObj__HitEff_kikuzu(fopAc_ac_c * param_1, dCcD_Cyl * param_2);
undefined cCcD_CylAttr__GetCoCP(cCcD_CylAttr * this);
undefined cCcD_SphAttr__GetCoCP(cCcD_SphAttr * this);
undefined daObj__HitEff_hibana(daObj * this, cXyz * param_1, cXyz * param_2);
// undefined daObj__HitEff_hibana(daObj * this, fopAc_ac_c * param_1, dCcD_Cyl * param_2);
undefined daObjTribox__Act_c__reset(Act_c * this);
undefined d_a_obj_tribox_static____sinit_d_a_obj_tribox_static_cpp();
undefined daShip_c__initStartPos(daShip_c * this, cXyz * param_1, short param_2);
undefined daBoko_c__getTopPos(daBoko_c * this, cXyz * param_1);
undefined daBoko_c__getBlurRootPos(daBoko_c * this, cXyz * param_1);
undefined daBomb_c__getBombRestTime(daBomb_c * this);
undefined daBomb_c__getBombCheck_Flag(daBomb_c * this);
undefined daBomb_c__setBombCheck_Flag(daBomb_c * this);
undefined daBomb_c__setBombFire_ON(daBomb_c * this);
undefined daBomb_c__setBombNoHit(daBomb_c * this);
undefined daBomb_c__setBombOffCoSet(daBomb_c * this);
undefined daBomb_c__setBombOnCoSet(daBomb_c * this);
undefined daBomb_c__setBombNoEff(daBomb_c * this);
undefined daBomb_c__setBombRestTime(daBomb_c * this, short param_1);
undefined daBomb_c__setNoGravityTime(daBomb_c * this, short param_1);
uint daBomb_c__prm_make(State_e param_1, bool param_2, bool param_3);
undefined daBomb_c__chk_state(daBomb_c * this, State_e param_1);
undefined daBomb_c__change_state(daBomb_c * this, State_e param_1);
undefined daBomb_c__prm_get_state(daBomb_c * this);
undefined daBomb_c__get_explode_instant(daBomb_c * this);
undefined daBomb_c__prm_get_cheapEff(daBomb_c * this);
undefined daBomb_c__prm_get_angXZero(daBomb_c * this);
undefined daBomb_c__prm_get_version(daBomb_c * this);
undefined daBomb_c___prm_chk_version(daBomb_c * this);
undefined daBomb2__Act_c__remove_fuse_effect(Act_c * this);
undefined daBomb2__Act_c__set_time(Act_c * this, int param_1);
undefined daBomb2__Act_c__get_time(Act_c * this);
undefined daBomb2__Act_c__chk_eat(Act_c * this);
undefined daBomb2__Act_c__set_eat(Act_c * this);
undefined daBomb2__Act_c__set_no_hit(Act_c * this);
undefined daBomb2__Act_c__chk_explode(Act_c * this);
undefined daObj__PrmAbstract(daObj * this, fopAc_ac_c * param_1, Prm_e param_2, Prm_e param_3);
undefined daBranch_c__getJointMtx(daBranch_c * this, char * param_1);
undefined daMgBoard_c__checkClearGame(daMgBoard_c * this);
undefined daMgBoard_c__getScore(daMgBoard_c * this);
undefined daMgBoard_c__reqStartGame(daMgBoard_c * this);
undefined daMgBoard_c__checkEndGame(daMgBoard_c * this);
undefined daMgBoard_c__setGInfoDraw(daMgBoard_c * this);
undefined daMgBoard_c__clrGInfoDraw(daMgBoard_c * this);
undefined daItemBase_c__getItemNo(daItemBase_c * this);
undefined daItemBase_c__getHeight(daItemBase_c * this);
undefined daItemBase_c__getR(daItemBase_c * this);
undefined daItemBase_c__hide(daItemBase_c * this);
undefined daItemBase_c__show(daItemBase_c * this);
undefined daItemBase_c__changeDraw(daItemBase_c * this);
undefined daItemBase_c__chkDraw(daItemBase_c * this);
undefined daItemBase_c__dead(daItemBase_c * this);
undefined daItemBase_c__chkDead(daItemBase_c * this);
undefined daItemBase_c__setLoadError(daItemBase_c * this);
undefined d_a_itembase_static__CheckItemCreateHeap();
undefined d_a_itembase_static__CheckFieldItemCreateHeap();
undefined daItem_c__checkControl(daItem_c * this);
undefined daItem_c__startControl(daItem_c * this);
undefined daItem_c__endControl(daItem_c * this);
undefined daItem_c__checkLock(daItem_c * this);
undefined daItem_c__setLock(daItem_c * this);
undefined daItem_c__releaseLock(daItem_c * this);
undefined daItem_c__checkActionNow(daItem_c * this);
undefined daShopItem_c__getScaleP(daShopItem_c * this);
undefined daShopItem_c__getRotateP(daShopItem_c * this);
undefined daShopItem_c__getPosP(daShopItem_c * this);
undefined daShopItem_c__getCenter(daShopItem_c * this);
undefined daRaceItem_c__raceItemForceGet(daRaceItem_c * this);
undefined daRaceItem_c__raceItemGet(daRaceItem_c * this);
undefined daRaceItem_c__normalItemGet(daRaceItem_c * this);
undefined daRaceItem_c__startOffsetPos(daRaceItem_c * this);
undefined daRaceItem_c__endOffsetPos(daRaceItem_c * this, float param_1, cXyz * param_2, float param_3, float param_4, csXyz * param_5);
undefined daRaceItem_c__checkOffsetPos(daRaceItem_c * this);
undefined daRaceItem_c__set_mtx(daRaceItem_c * this, cXyz * param_1);
undefined daLlift_c__checkEndDownLift(daLlift_c * this);
undefined daLlift_c__MoveUpLift(daLlift_c * this);
void dDemo_actor_c__dDemo_actor_c(dDemo_actor_c * this);
void dDemo_actor_c__dDemo_actor_c_destructor(dDemo_actor_c * this);
undefined dDemo_actor_c__getActor(dDemo_actor_c * this);
undefined dDemo_actor_c__setActor(dDemo_actor_c * this, fopAc_ac_c * param_1);
undefined dDemo_actor_c__getP_BtpData(dDemo_actor_c * this, char * param_1);
undefined dDemo_actor_c__getP_BrkData(dDemo_actor_c * this, char * param_1);
undefined dDemo_actor_c__getP_BtkData(dDemo_actor_c * this, char * param_1);
undefined dDemo_actor_c__getPrm_Morf(dDemo_actor_c * this);
undefined d_demo__dDemo_getJaiPointer();
undefined4 d_demo__dDemo_setDemoData(fopAc_ac_c * param_1, ushort param_2, mDoExt_McaMorf * param_3, char * param_4, undefined4 param_5, undefined4 param_6, ulong param_7, char param_8);
undefined dDemo_actor_c__JSGSetData(dDemo_actor_c * this, ulong param_1, void * param_2, ulong param_3);
undefined dDemo_actor_c__JSGSetTranslation(dDemo_actor_c * this, Vec * param_1);
undefined dDemo_actor_c__JSGSetScaling(dDemo_actor_c * this, Vec * param_1);
undefined dDemo_actor_c__JSGSetRotation(dDemo_actor_c * this, Vec * param_1);
undefined dDemo_actor_c__JSGSetShape(dDemo_actor_c * this, ulong param_1);
undefined dDemo_actor_c__JSGSetAnimation(dDemo_actor_c * this, ulong param_1);
undefined dDemo_actor_c__JSGSetAnimationFrame(dDemo_actor_c * this, float param_1);
undefined dDemo_actor_c__JSGSetAnimationTransition(dDemo_actor_c * this, float param_1);
undefined dDemo_actor_c__JSGSetTextureAnimation(dDemo_actor_c * this, ulong param_1);
undefined dDemo_actor_c__JSGSetTextureAnimationFrame(dDemo_actor_c * this, float param_1);
undefined d_demo__getView();
undefined dDemo_camera_c__JSGGetProjectionNear(dDemo_camera_c * this);
undefined dDemo_camera_c__JSGSetProjectionNear(dDemo_camera_c * this, float param_1);
undefined dDemo_camera_c__JSGGetProjectionFar(dDemo_camera_c * this);
undefined dDemo_camera_c__JSGSetProjectionFar(dDemo_camera_c * this, float param_1);
undefined dDemo_camera_c__JSGGetProjectionFovy(dDemo_camera_c * this);
undefined dDemo_camera_c__JSGSetProjectionFovy(dDemo_camera_c * this, float param_1);
undefined dDemo_camera_c__JSGGetProjectionAspect(dDemo_camera_c * this);
undefined dDemo_camera_c__JSGSetProjectionAspect(dDemo_camera_c * this, float param_1);
undefined dDemo_camera_c__JSGGetViewPosition(dDemo_camera_c * this, Vec * param_1);
undefined dDemo_camera_c__JSGSetViewPosition(dDemo_camera_c * this, Vec * param_1);
undefined dDemo_camera_c__JSGGetViewUpVector(dDemo_camera_c * this, Vec * param_1);
undefined dDemo_camera_c__JSGSetViewUpVector(dDemo_camera_c * this, Vec * param_1);
undefined dDemo_camera_c__JSGGetViewTargetPosition(dDemo_camera_c * this, Vec * param_1);
undefined dDemo_camera_c__JSGSetViewTargetPosition(dDemo_camera_c * this, Vec * param_1);
undefined dDemo_camera_c__JSGGetViewRoll(dDemo_camera_c * this);
undefined dDemo_camera_c__JSGSetViewRoll(dDemo_camera_c * this, float param_1);
undefined dDemo_ambient_c__JSGSetColor(dDemo_ambient_c * this, _GXColor * param_1);
undefined dDemo_light_c__JSGSetLightType(dDemo_light_c * this, TELight param_1);
undefined dDemo_light_c__JSGSetPosition(dDemo_light_c * this, Vec * param_1);
undefined dDemo_light_c__JSGSetColor(dDemo_light_c * this, _GXColor * param_1);
undefined dDemo_light_c__JSGSetDistanceAttenuation(dDemo_light_c * this, float param_1, float param_2, undefined param_3);
undefined dDemo_light_c__JSGSetAngleAttenuation(dDemo_light_c * this, float param_1, undefined param_2);
undefined dDemo_light_c__JSGSetDirection(dDemo_light_c * this, cXyz * param_1);
undefined dDemo_fog_c__JSGSetFogFunction(dDemo_fog_c * this, _GXFogType param_1);
undefined dDemo_fog_c__JSGSetStartZ(dDemo_fog_c * this, float param_1);
undefined dDemo_fog_c__JSGSetEndZ(dDemo_fog_c * this, float param_1);
undefined dDemo_fog_c__JSGSetColor(dDemo_fog_c * this, _GXColor * param_1);
void dDemo_object_c__dDemo_object_c(dDemo_object_c * this);
void dDemo_object_c__dDemo_object_c_destructor(dDemo_object_c * this);
undefined dDemo_object_c__appendActor(dDemo_object_c * this, fopAc_ac_c * param_1);
undefined dDemo_object_c__getActor(dDemo_object_c * this, uchar param_1);
undefined dDemo_object_c__createCamera(dDemo_object_c * this);
undefined dDemo_object_c__getActiveCamera(dDemo_object_c * this);
undefined dDemo_object_c__createAmbient(dDemo_object_c * this);
undefined dDemo_object_c__appendLight(dDemo_object_c * this);
undefined dDemo_object_c__createFog(dDemo_object_c * this);
int dDemo_object_c__remove(dDemo_object_c * this);
void dDemo_fog_c__dDemo_fog_c_destructor(dDemo_fog_c * this);
void dDemo_light_c__dDemo_light_c_destructor(dDemo_light_c * this);
void dDemo_ambient_c__dDemo_ambient_c_destructor(dDemo_ambient_c * this);
void dDemo_camera_c__dDemo_camera_c_destructor(dDemo_camera_c * this);
undefined dDemo_system_c__JSGFindObject(dDemo_system_c * this, char * param_1, TEObject param_2);
void dDemo_manager_c__dDemo_manager_c(dDemo_manager_c * this);
void dDemo_manager_c__dDemo_manager_c_destructor(dDemo_manager_c * this);
void dMesg_tControl__dMesg_tControl_destructor(dMesg_tControl * this);
void dDemo_system_c__dDemo_system_c_destructor(dDemo_system_c * this);
undefined dDemo_manager_c__create(dDemo_manager_c * this, uchar * param_1, cXyz * param_2, float param_3);
int dDemo_manager_c__remove(dDemo_manager_c * this);
undefined dDemo_manager_c__update(dDemo_manager_c * this);
undefined dDemo_actor_c__JSGFindNodeID(dDemo_actor_c * this, char * param_1);
undefined dDemo_actor_c__JSGGetNodeTransformation(dDemo_actor_c * this, ulong param_1, MTX34 * param_2);
undefined dDemo_actor_c__JSGGetAnimationFrameMax(dDemo_actor_c * this);
undefined dDemo_actor_c__JSGGetTextureAnimationFrameMax(dDemo_actor_c * this);
undefined dDemo_actor_c__JSGGetTranslation(dDemo_actor_c * this, Vec * param_1);
undefined dDemo_actor_c__JSGGetScaling(dDemo_actor_c * this, Vec * param_1);
undefined dDemo_actor_c__JSGGetRotation(dDemo_actor_c * this, cXyz * param_1);
undefined dDoor_info_c__getSwbit(dDoor_info_c * this);
undefined dDoor_info_c__getSwbit2(dDoor_info_c * this);
undefined dDoor_info_c__getType(dDoor_info_c * this);
undefined dDoor_info_c__setType(dDoor_info_c * this, byte type);
undefined dDoor_info_c__getEventNo(dDoor_info_c * this);
undefined dDoor_info_c__getFRoomNo(dDoor_info_c * this);
undefined dDoor_info_c__getBRoomNo(dDoor_info_c * this);
undefined dDoor_info_c__getShipId(dDoor_info_c * this);
undefined dDoor_info_c__getArg1(dDoor_info_c * this);
undefined dDoor_info_c__adjoinPlayer(dDoor_info_c * this);
int dDoor_info_c__getViewRoomNo(dDoor_info_c * this);
undefined dDoor_info_c__frontCheckOld(dDoor_info_c * this);
void cSAngle__cSAngle_destructor(cSAngle * this);
void cSGlobe__cSGlobe_destructor(cSGlobe * this);
undefined dDoor_info_c__frontCheck(dDoor_info_c * this);
undefined dDoor_info_c__drawCheck_local(dDoor_info_c * this);
undefined dDoor_info_c__drawCheck(dDoor_info_c * this, int param_1);
undefined dDoor_info_c__checkExecute(dDoor_info_c * this);
undefined dDoor_info_c__startDemoProc(dDoor_info_c * this);
undefined dDoor_info_c__makeEventId(dDoor_info_c * this, int param_1);
undefined dDoor_info_c__initProc(dDoor_info_c * this, int param_1);
undefined dDoor_info_c__initOpenDemo(dDoor_info_c * this, int param_1);
undefined dDoor_info_c__checkArea(dDoor_info_c * this, float param_1, float param_2, float param_3);
undefined dDoor_info_c__openInitCom(dDoor_info_c * this, int param_1);
undefined dDoor_info_c__openProcCom(dDoor_info_c * this);
undefined dDoor_info_c__closeEndCom(dDoor_info_c * this);
int dDoor_info_c__getDemoAction(dDoor_info_c * this);
undefined dDoor_info_c__setGoal(dDoor_info_c * this);
undefined dDoor_info_c__setPlayerAngle(dDoor_info_c * this, int param_1);
undefined dDoor_info_c__setPosAndAngle(dDoor_info_c * this, cXyz * param_1, short param_2);
undefined dDoor_smoke_c__smokeInit(dDoor_smoke_c * this, dDoor_info_c * param_1);
undefined dDoor_smoke_c__smokeProc(dDoor_smoke_c * this, dDoor_info_c * param_1);
undefined dDoor_smoke_c__smokeEnd(dDoor_smoke_c * this);
undefined dDoor_key2_c__keyResLoad(dDoor_key2_c * this);
undefined dDoor_key2_c__keyResDelete(dDoor_key2_c * this);
undefined dDoor_key2_c__keyInit(dDoor_key2_c * this, dDoor_info_c * param_1);
undefined dDoor_key2_c__keyProc(dDoor_key2_c * this);
undefined dDoor_key2_c__keyCreate_Nkey(dDoor_key2_c * this);
undefined dDoor_key2_c__keyCreate_Bkey(dDoor_key2_c * this);
undefined dDoor_key2_c__keyCreate(dDoor_key2_c * this, int isBossDoor);
undefined dDoor_key2_c__keyOn(dDoor_key2_c * this);
undefined dDoor_key2_c__keyOff(dDoor_key2_c * this);
undefined dDoor_key2_c__calcMtx(dDoor_key2_c * this, dDoor_info_c * param_1);
undefined dDoor_key2_c__draw(dDoor_key2_c * this, dDoor_info_c * param_1);
undefined dDoor_stop_c__calcMtx(dDoor_stop_c * this, dDoor_info_c * door);
undefined dDoor_stop_c__closeInit(dDoor_stop_c * this, dDoor_info_c * param_1);
undefined dDoor_stop_c__closeProc(dDoor_stop_c * this, dDoor_info_c * param_1);
undefined dDoor_stop_c__openInit(dDoor_stop_c * this, dDoor_info_c * param_1);
undefined dDoor_stop_c__openProc(dDoor_stop_c * this, dDoor_info_c * door);
undefined dDoor_stop_c__create(dDoor_stop_c * this);
int dDoor_msg_c__init(dDoor_msg_c * this, EVP_PKEY_CTX * ctx);
undefined dDoor_msg_c__proc(dDoor_msg_c * this, cXyz * param_1);
undefined dDoor_hkyo_c__resLoad(dDoor_hkyo_c * this);
undefined dDoor_hkyo_c__resDelete(dDoor_hkyo_c * this);
undefined dDoor_hkyo_c__create(dDoor_hkyo_c * this);
undefined dDoor_hkyo_c__setAnm(dDoor_hkyo_c * this, uchar param_1);
int dDoor_hkyo_c__init(dDoor_hkyo_c * this, EVP_PKEY_CTX * ctx);
undefined dDoor_hkyo_c__calcMtx(dDoor_hkyo_c * this, dDoor_info_c * param_1, float param_2);
undefined dDoor_hkyo_c__draw(dDoor_hkyo_c * this, dDoor_info_c * param_1);
undefined dDoor_hkyo_c__proc(dDoor_hkyo_c * this, dDoor_info_c * param_1);
undefined dDoor_hkyo_c__chkFirst(dDoor_hkyo_c * this);
undefined dDoor_hkyo_c__onFirst(dDoor_hkyo_c * this);
undefined dDoor_hkyo_c__chkStart(dDoor_hkyo_c * this);
undefined daPy_py_c__setPlayerPosAndAngle(daPy_py_c * this, cXyz * param_1, short param_2);
void dRes_info_c__dRes_info_c(dRes_info_c * this);
void dRes_info_c__dRes_info_c_destructor(dRes_info_c * this);
undefined dRes_info_c__set(dRes_info_c * this, char * param_1, char * param_2, uchar param_3, JKRHeap * param_4);
void d_resorce__setToonTex(J3DModelData * param_1);
// undefined d_resorce__setToonTex(J3DMaterialTable * param_1);
undefined dRes_info_c__loadResource(dRes_info_c * this);
void JKRFileFinder__JKRFileFinder_destructor(JKRFileFinder * this);
void J3DAnmTransformKey__J3DAnmTransformKey_destructor(J3DAnmTransformKey * this);
void J3DAnmTransform__J3DAnmTransform_destructor(J3DAnmTransform * this);
void J3DAnmBase__J3DAnmBase_destructor(J3DAnmBase * this);
undefined dRes_info_c__setRes(dRes_info_c * this);
undefined d_resorce__getArcHeader(JKRArchive * param_1);
void dRes_info_c__dump_long(dRes_info_c * this, int param_1);
void dRes_info_c__dump(dRes_info_c * this, int param_1);
void dRes_control_c__dRes_control_c_destructor(dRes_control_c * this);
void dRes_control_c__setRes(char * param_1, dRes_info_c * param_2, int param_3, char * param_4, byte param_5, JKRHeap * param_6);
undefined4 dRes_control_c__syncRes(char * param_1, dRes_info_c * param_2, int param_3);
undefined dRes_control_c__deleteRes(dRes_control_c * this, char * param_1, dRes_info_c * param_2, int param_3);
dRes_info_c * dRes_control_c__getResInfo(char * arcName, dRes_info_c * resInfosList, int totalResInfos);
dRes_info_c * dRes_control_c__newResInfo(dRes_info_c * param_1, int param_2);
dRes_info_c * dRes_control_c__getResInfoLoaded(char * arcName, dRes_info_c * resInfosList, int totalResInfos);
void * dRes_control_c__getRes(char * arcName, long fileIndex, dRes_info_c * resInfosList, int totalResInfos);
void * dRes_control_c__getNameRes(char * param_1, char * param_2, dRes_info_c * param_3, int param_4);
void * dRes_control_c__getIDRes(char * param_1, ushort param_2, dRes_info_c * param_3, int param_4);
undefined dRes_control_c__syncAllRes(dRes_control_c * this, dRes_info_c * param_1, int param_2);
undefined dRes_control_c__setStageRes(dRes_control_c * this, char * param_1, JKRHeap * param_2);
undefined dRes_control_c__dump(dRes_control_c * this);
void mDoExt_transAnmBas__mDoExt_transAnmBas_destructor(mDoExt_transAnmBas * this);
undefined J3DAnmTransformKey__getTransform(J3DAnmTransformKey * this, ushort param_1, J3DTransformInfo * param_2);
undefined dMat_backup_c__restore(dMat_backup_c * this);
undefined dMat_ice_c__create(dMat_ice_c * this, J3DMaterialTable * param_1, J3DAnmTextureSRTKey * param_2);
undefined dMat_ice_c__play(dMat_ice_c * this);
int dMat_ice_c__copy(dMat_ice_c * this, EVP_PKEY_CTX * dst, EVP_PKEY_CTX * src);
undefined dMat_ice_c__updateDL(dMat_ice_c * this, J3DModel * param_1, char param_2, mDoExt_invisibleModel * param_3);
// undefined dMat_ice_c__updateDL(dMat_ice_c * this, mDoExt_McaMorf * param_1, char param_2, mDoExt_invisibleModel * param_3);
undefined dMat_ice_c__entryDL(dMat_ice_c * this, J3DModel * param_1, char param_2, mDoExt_invisibleModel * param_3);
// undefined dMat_ice_c__entryDL(dMat_ice_c * this, mDoExt_McaMorf * param_1, char param_2, mDoExt_invisibleModel * param_3);
undefined dMat_control_c__create(dMat_control_c * this, J3DMaterialTable * param_1, J3DAnmTextureSRTKey * param_2);
void mDoExt_btkAnm__mDoExt_btkAnm_destructor(mDoExt_btkAnm * this);
void dMat_backup_c__dMat_backup_c_destructor(dMat_backup_c * this);
void dMat_backup_c__dMat_backup_c(dMat_backup_c * this);
int dMat_control_c__remove(dMat_control_c * this, char * __filename);
undefined dMat_control_c__restore(dMat_control_c * this, char param_1);
undefined d_material____sinit_d_material_cpp();
void dEvt_control_c__dEvt_control_c(dEvt_control_c * this);
void dEvt_order_c__dEvt_order_c(dEvt_order_c * this);
undefined dEvt_control_c__orderOld(dEvt_control_c * this, dEvt__EventType param_1, ushort param_2, ushort param_3, ushort param_4, void * param_5, void * param_6, char * pEventName);
undefined dEvt_control_c__order(dEvt_control_c * this, dEvt__EventType eventType, ushort param_2, ushort param_3, ushort param_4, fopAc_ac_c * param_5, fopAc_ac_c * param_6, short eventId, byte param_8);
undefined dEvt_control_c__setParam(dEvt_control_c * this, dEvt_order_c * param_1);
undefined dEvt_control_c__beforeFlagProc(dEvt_control_c * this, dEvt_order_c * param_1);
undefined dEvt_control_c__afterFlagProc(dEvt_control_c * this, dEvt_order_c * param_1);
undefined dEvt_control_c__commonCheck(dEvt_control_c * this, dEvt_order_c * pOrder, ushort param_2, ushort param_3);
undefined dEvt_control_c__talkCheck(dEvt_control_c * this, dEvt_order_c * param_1);
undefined dEvt_control_c__talkXyCheck(dEvt_control_c * this, dEvt_order_c * param_1);
undefined dEvt_control_c__photoCheck(dEvt_control_c * this, dEvt_order_c * param_1);
undefined dEvt_control_c__catchCheck(dEvt_control_c * this, dEvt_order_c * param_1);
undefined dEvt_control_c__talkEnd(dEvt_control_c * this);
undefined dEvt_control_c__demoCheck(dEvt_control_c * this, dEvt_order_c * param_1);
undefined dEvt_control_c__demoEnd(dEvt_control_c * this);
undefined dEvt_control_c__potentialCheck(dEvt_control_c * this, dEvt_order_c * param_1);
undefined dEvt_control_c__doorCheck(dEvt_control_c * this, dEvt_order_c * param_1);
undefined dEvt_control_c__itemCheck(dEvt_control_c * this, dEvt_order_c * param_1);
undefined dEvt_control_c__endProc(dEvt_control_c * this);
undefined dEvt_control_c__checkChange(dEvt_control_c * this);
undefined dEvt_control_c__changeProc(dEvt_control_c * this);
undefined dEvt_control_c__checkStart(dEvt_control_c * this);
undefined dEvt_control_c__soundProc(dEvt_control_c * this);
undefined dEvt_control_c__check(dEvt_control_c * this);
// undefined dEvt_control_c__photoCheck(dEvt_control_c * this);
uint dEvt_control_c__moveApproval(dEvt_control_c * this, fopAc_ac_c * param_1);
undefined dEvt_control_c__compulsory(dEvt_control_c * this, void * param_1, char * param_2, ushort param_3);
int dEvt_control_c__remove(dEvt_control_c * this);
undefined dEvt_control_c__getStageEventDt(dEvt_control_c * this);
undefined dEvt_control_c__nextStageEventDt(dEvt_control_c * this, void * param_1);
undefined dEvt_control_c__getPId(dEvt_control_c * this, fopAc_ac_c * param_1);
fopAc_ac_c * dEvt_control_c__convPId(dEvt_control_c * this, uint param_1);
undefined dEvt_control_c__getTactFreeMStick(dEvt_control_c * this, int param_1);
undefined dEvt_control_c__getTactFreeCStick(dEvt_control_c * this, int param_1);
void dEvt_info_c__dEvt_info_c(dEvt_info_c * this);
undefined dEvt_info_c__setEventName(dEvt_info_c * this, char * param_1);
undefined dEvt_info_c__getEventName(dEvt_info_c * this);
undefined dEvt_control_c__giveItemCut(dEvt_control_c * this, uchar param_1);
undefined4 d_event_data__dEvDt_Next_Stage(int staffIdx, byte wipeType);
undefined dEvDtFlag_c__flagCheck(dEvDtFlag_c * this, int param_1);
undefined dEvDtFlag_c__flagSet(dEvDtFlag_c * this, int param_1);
undefined dEvDtFlag_c__flagMaxCheck(dEvDtFlag_c * this, int param_1);
int dEvDtFlag_c__init(dEvDtFlag_c * this);
undefined dEvDtEvent_c__finish_check(dEvDtEvent_c * this);
undefined dEvDtEvent_c__specialStaffProc(dEvDtEvent_c * this, dEvDtStaff_c * param_1);
undefined dEvDtStaff_c__specialProc_WaitStart(dEvDtStaff_c * this, int param_1);
undefined dEvDtStaff_c__specialProc_WaitProc(dEvDtStaff_c * this, int param_1);
undefined dEvDtStaff_c__specialProc(dEvDtStaff_c * this);
void dEvDtStaff_c__init(dEvDtStaff_c * this);
undefined dEvDtStaff_c__advanceCut(dEvDtStaff_c * this, int param_1);
undefined dEvDtStaff_c__specialProcLight(dEvDtStaff_c * this);
undefined dEvDtStaff_c__specialProcMessage(dEvDtStaff_c * this);
undefined dEvDtStaff_c__specialProcSound(dEvDtStaff_c * this);
undefined dEvDtStaff_c__specialProcCreate(dEvDtStaff_c * this);
undefined dEvDtStaff_c__specialProcDirector(dEvDtStaff_c * this);
undefined dEvDtStaff_c__specialProcPackage(dEvDtStaff_c * this);
undefined dEvDtStaff_c__specialProcTimekeeper(dEvDtStaff_c * this);
int dEvDtCut_c__startCheck(dEvDtCut_c * this);
int dEvDtBase_c__init(dEvDtBase_c * this);
undefined dEvDtBase_c__advanceCut(dEvDtBase_c * this, dEvDtEvent_c * param_1);
undefined dEvDtBase_c__advanceCutLocal(dEvDtBase_c * this, dEvDtStaff_c * pStaff);
int dEvent_exception_c__init(dEvent_exception_c * this);
undefined dEvent_exception_c__setStartDemo(dEvent_exception_c * this, int param_1);
char * dEvent_exception_c__getEventName(dEvent_exception_c * this);
undefined dEvent_manager_c__debugBfProc(dEvent_manager_c * this);
void * dEvent_manager_c__getSubstance(dEvent_manager_c * this, dEvDtData_c * param_1, dEvt__SubstanceType param_2);
undefined dEvent_manager_c__setData(dEvent_manager_c * this, dEvDt__DataFile * param_1);
undefined dEvent_manager_c__create(dEvent_manager_c * this);
int dEvent_manager_c__remove(dEvent_manager_c * this, char * __filename);
int d_event_manager__findObjectCallBack(fopAc_ac_c * pAct, dEv_seach_prm * pSearch);
undefined d_event_manager__extraOnObjectCallBack(fopAc_ac_c * param_1, dEv_seach_prm * param_2);
undefined d_event_manager__extraOffObjectCallBack(fopAc_ac_c * param_1, undefined4 param_2);
undefined d_event_manager__allOffObjectCallBack();
undefined dEvent_manager_c__startProc(dEvent_manager_c * this, dEvDtEvent_c * param_1);
undefined dEvent_manager_c__closeProc(dEvent_manager_c * this, dEvDtEvent_c * param_1);
undefined dEvent_manager_c__endProc(dEvent_manager_c * this, short param_1, int param_2);
undefined dEvent_manager_c__mainProc(dEvent_manager_c * this);
undefined dEvent_manager_c__runProc(dEvent_manager_c * this);
dEvDtEvent_c * dEvent_manager_c__getEventData(dEvent_manager_c * this, short param_1);
undefined dEvent_manager_c__getEventIdx(dEvent_manager_c * this, char * eventNameString, uchar stageEVNTListIndex);
undefined dEvent_manager_c__order(dEvent_manager_c * this, short param_1);
undefined dEvent_manager_c__startCheck(dEvent_manager_c * this, short param_1);
undefined dEvent_manager_c__startCheckOld(dEvent_manager_c * this, char * param_1);
undefined dEvent_manager_c__endCheck(dEvent_manager_c * this, short param_1);
undefined dEvent_manager_c__endCheckOld(dEvent_manager_c * this, char * param_1);
int dEvent_manager_c__getMyStaffId(dEvent_manager_c * this, char * param_1, fopAc_ac_c * pActor, int param_3);
undefined dEvent_manager_c__getIsAddvance(dEvent_manager_c * this, int staffIdx);
undefined d_event_manager__dEvmng_strcmp();
undefined dEvent_manager_c__getMyActIdx(dEvent_manager_c * this, int staffIdx, char * * pActions, int actionCount, int force, int param_5);
undefined dEvent_manager_c__getMyActName(dEvent_manager_c * this, int param_1);
char * dEvent_manager_c__getMyNowCutName(dEvent_manager_c * this, int staffIdx);
dEvDtData_c * dEvent_manager_c__getMyDataP(dEvent_manager_c * this, int staffIdx, char * pDataName, int param_3);
void * dEvent_manager_c__getMySubstanceP(dEvent_manager_c * this, int staffIdx, char * pDataName, dEvt__SubstanceType pType);
undefined dEvent_manager_c__getMySubstanceNum(dEvent_manager_c * this, int param_1, char * param_2);
undefined dEvent_manager_c__cutEnd(dEvent_manager_c * this, int staffIdx);
undefined dEvent_manager_c__getEventPrio(dEvent_manager_c * this, short param_1);
undefined dEvent_manager_c__getEventEndSound(dEvent_manager_c * this, short param_1);
undefined dEvent_manager_c__exceptionProc(dEvent_manager_c * this);
undefined dEvent_manager_c__issueStaff(dEvent_manager_c * this, char * param_1);
undefined dEvent_manager_c__cancelStaff(dEvent_manager_c * this, char * param_1);
undefined dEvent_manager_c__setGoal(dEvent_manager_c * this, cXyz * param_1);
undefined dEvent_manager_c__getGoal(dEvent_manager_c * this);
undefined d_event_manager__findShutterCallBack(fopAc_ac_c * pAct, dEvt__FindShutterData * pData);
fopAc_ac_c * dEvent_manager_c__specialCast_Shutter(dEvent_manager_c * this, short mTypeId, int bSetGoal);
undefined dEvent_manager_c__specialCast(dEvent_manager_c * this, char * param_1, int bSetGoal);
undefined dEvent_manager_c__setPrmStaff(dEvent_manager_c * this, dEv_seach_prm * pSearchPrm, int staffIdx);
undefined dEvent_manager_c__getToolId(dEvent_manager_c * this, byte eventInfoIdx, int param_2);
void dEv_seach_prm__dEv_seach_prm(dEv_seach_prm * this, char * param_1, ulong param_2, ulong param_3);
undefined d_event_manager__dEv_extra_createCB();
undefined d_event_manager__dEv_talkman_get_action();
undefined dEvent_manager_c__ChkPresentEnd(dEvent_manager_c * this);
undefined dEvent_manager_c__CancelPresent(dEvent_manager_c * this);
undefined dEvent_manager_c__checkStartDemo(dEvent_manager_c * this);
undefined d_event_manager__dEvmng_daNpc_Tt_Conv();
undefined d_event_manager__dEvmng_daNpc_Tt_GetEvFlag();
undefined dMagma_ball_c__draw(dMagma_ball_c * this);
undefined dMagma_ball_c__rangeCheck(dMagma_ball_c * this, cXyz * param_1, float * param_2);
undefined dMagma_ballPath_c__calc(dMagma_ballPath_c * this, float param_1, uchar param_2, int param_3);
undefined dMagma_ballPath_c__update(dMagma_ballPath_c * this);
undefined dMagma_ballPath_c__setup(dMagma_ballPath_c * this, float param_1, uchar param_2, int param_3);
undefined dMagma_floor_c__draw(dMagma_floor_c * this);
undefined dMagma_floor_c__calc(dMagma_floor_c * this, int param_1);
undefined dMagma_floor_c__update(dMagma_floor_c * this);
undefined dMagma_floor_c__create(dMagma_floor_c * this, cXyz * param_1, cXyz * param_2, short param_3, uchar param_4, int param_5);
void dMagma_ball_c__dMagma_ball_c_destructor(dMagma_ball_c * this);
int dMagma_floor_c__remove(dMagma_floor_c * this, char * __filename);
undefined dMagma_room_c__newFloor(dMagma_room_c * this, dMagma_floor_c * param_1);
undefined dMagma_room_c__deleteFloor(dMagma_room_c * this);
void dMagma_packet_c__dMagma_packet_c(dMagma_packet_c * this);
void dMagma_room_c__dMagma_room_c(dMagma_room_c * this);
void dMagma_floor_c__dMagma_floor_c_destructor(dMagma_floor_c * this);
void dMagma_floor_c__dMagma_floor_c(dMagma_floor_c * this);
void dMagma_packet_c__dMagma_packet_c_destructor(dMagma_packet_c * this);
undefined dMagma_packet_c__draw(dMagma_packet_c * this);
undefined d_magma__morfCalc();
undefined dMagma_packet_c__calc(dMagma_packet_c * this);
undefined dMagma_packet_c__update(dMagma_packet_c * this);
undefined dMagma_packet_c__checkYpos(dMagma_packet_c * this, cXyz * param_1);
undefined dMagma_packet_c__newFloor(dMagma_packet_c * this, cXyz * param_1, cXyz * param_2, int param_3, short param_4);
void dMagma_ballPath_c__dMagma_ballPath_c_destructor(dMagma_ballPath_c * this);
undefined dMagma_ballBoss_c__calc(dMagma_ballBoss_c * this, float param_1, uchar param_2, int param_3);
undefined dMagma_ballBoss_c__update(dMagma_ballBoss_c * this);
undefined d_boss_magma__b_a_sub();
undefined dMagma_ballBoss_c__setup(dMagma_ballBoss_c * this, float param_1, uchar param_2, int param_3);
void dMagma_ballBoss_c__dMagma_ballBoss_c_destructor(dMagma_ballBoss_c * this);
undefined d_grass__setBatta();
undefined dGrass_data_c__WorkCo(dGrass_data_c * this, fopAc_ac_c * param_1, ulong param_2, int param_3);
undefined dGrass_data_c__WorkAt_NoCutAnim(dGrass_data_c * this, fopAc_ac_c * param_1, ulong param_2, int param_3, dCcMassS_HitInf * param_4, cCcD_Obj * param_5);
undefined cCcD_Obj__GetShapeAttr(cCcD_Obj * this);
undefined dGrass_data_c__WorkAt(dGrass_data_c * this, fopAc_ac_c * param_1, ulong param_2, int param_3, dCcMassS_HitInf * param_4);
undefined dGrass_data_c__hitCheck(dGrass_data_c * this, int param_1);
void dCcMassS_HitInf__dCcMassS_HitInf_destructor(dCcMassS_HitInf * this);
undefined dGrass_room_c__newData(dGrass_room_c * this, dGrass_data_c * param_1);
undefined dGrass_room_c__deleteData(dGrass_room_c * this);
void dGrass_packet_c__dGrass_packet_c(dGrass_packet_c * this);
void dGrass_room_c__dGrass_room_c(dGrass_room_c * this);
void dGrass_anm_c__dGrass_anm_c(dGrass_anm_c * this);
void dGrass_data_c__dGrass_data_c(dGrass_data_c * this);
undefined dGrass_packet_c__draw(dGrass_packet_c * this);
undefined dGrass_packet_c__calc(dGrass_packet_c * this);
undefined d_grass__checkGroundY(cXyz * param_1);
undefined dGrass_packet_c__update(dGrass_packet_c * this);
void dGrass_packet_c__setData(dGrass_packet_c * this, dGrass_data_c * param_1, int param_2, cXyz * param_3, int param_4, char param_5);
dGrass_data_c * dGrass_packet_c__newData(dGrass_packet_c * this, cXyz * param_1, int param_2, char param_3);
undefined dGrass_packet_c__newAnm(dGrass_packet_c * this);
undefined dGrass_packet_c__setAnm(dGrass_packet_c * this, int param_1, short param_2);
undefined d_grass____sinit_d_grass_cpp();
undefined dTree_data_c__WorkCo(dTree_data_c * this, fopAc_ac_c * param_1, ulong param_2, int param_3);
undefined dTree_data_c__WorkAt_NoCutAnim(dTree_data_c * this, fopAc_ac_c * param_1, ulong param_2, int param_3, dCcMassS_HitInf * param_4, cCcD_Obj * param_5);
undefined dTree_data_c__WorkAt(dTree_data_c * this, fopAc_ac_c * param_1, ulong param_2, int param_3, dCcMassS_HitInf * param_4);
undefined dTree_data_c__hitCheck(dTree_data_c * this, fopAc_ac_c * param_1, int param_2);
undefined dTree_data_c__animation(dTree_data_c * this, int param_1);
undefined dTree_room_c__newData(dTree_room_c * this, dTree_data_c * param_1);
undefined dTree_room_c__deleteData(dTree_room_c * this);
void dTree_packet_c__dTree_packet_c(dTree_packet_c * this);
void dTree_room_c__dTree_room_c(dTree_room_c * this);
void dTree_anm_c__dTree_anm_c(dTree_anm_c * this);
void dTree_data_c__dTree_data_c(dTree_data_c * this);
undefined dTree_packet_c__draw(dTree_packet_c * this);
undefined dTree_packet_c__calc(dTree_packet_c * this);
double d_tree__checkGroundY(dTree_data_c * param_1, cXyz * param_2);
undefined dTree_packet_c__update(dTree_packet_c * this);
undefined dTree_packet_c__setData(dTree_packet_c * this, dTree_data_c * param_1, int param_2, cXyz * param_3, byte param_4, int param_5);
undefined dTree_packet_c__newData(dTree_packet_c * this, cXyz * param_1, uchar param_2, int i_roomNo);
undefined dTree_packet_c__newAnm(dTree_packet_c * this, short param_1);
undefined dTree_packet_c__setAnm(dTree_packet_c * this, int param_1, short param_2);
undefined d_tree____sinit_d_tree_cpp();
undefined daPy_py_c__getSwordTopPos(daPy_py_c * this);
void dPa_modelEmitter_c__dPa_modelEmitter_c(dPa_modelEmitter_c * this);
void dPa_J3DmodelEmitter_c__dPa_J3DmodelEmitter_c(dPa_J3DmodelEmitter_c * this, JPABaseEmitter * param_1, J3DModelData * param_2, dKy_tevstr_c * param_3, J3DAnmTexPattern * param_4, ushort param_5, int param_6);
void dPa_modelEmitter_c__dPa_modelEmitter_c_destructor(dPa_modelEmitter_c * this);
void dPa_J3DmodelEmitter_c__dPa_J3DmodelEmitter_c_destructor(dPa_J3DmodelEmitter_c * this);
undefined dPa_J3DmodelEmitter_c__draw(dPa_J3DmodelEmitter_c * this);
void dPa_modelControl_c__dPa_modelControl_c(dPa_modelControl_c * this, J3DModelData * param_1);
void dPa_J3Dmodel_c__dPa_J3Dmodel_c(dPa_J3Dmodel_c * this);
void dPa_modelControl_c__dPa_modelControl_c_destructor(dPa_modelControl_c * this);
undefined dPa_modelControl_c__newModel(dPa_modelControl_c * this, J3DModelData * param_1);
undefined dPa_modelControl_c__draw(dPa_modelControl_c * this);
void dPa_followEcallBack__dPa_followEcallBack(dPa_followEcallBack * this, byte param_1, byte param_2);
undefined dPa_followEcallBack__execute(dPa_followEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_followEcallBack__draw(dPa_followEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_followEcallBack__setup(dPa_followEcallBack * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
undefined dPa_followEcallBack__end(dPa_followEcallBack * this);
void dPa_smokeEcallBack__dPa_smokeEcallBack(dPa_smokeEcallBack * this, byte param_1);
void dPa_followEcallBack__dPa_followEcallBack_destructor(dPa_followEcallBack * this);
// void dPa_smokeEcallBack__dPa_smokeEcallBack(dPa_smokeEcallBack * this, uchar param_1, uchar param_2, uchar param_3, uchar param_4);
// void dPa_smokeEcallBack__dPa_smokeEcallBack(dPa_smokeEcallBack * this, _GXColor * param_1, dKy_tevstr_c * param_2, uchar param_3);
undefined dPa_smokeEcallBack__setup(dPa_smokeEcallBack * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
void dPa_smokePcallBack__dPa_smokePcallBack_destructor(dPa_smokePcallBack * this);
undefined JPACallBackBase2__JPABaseEmitter_star_JPABaseParticle_star____JPACallBackBase2_destructor(JPACallBackBase2__JPABaseEmitter_star_JPABaseParticle_star__ * this);
undefined d_particle__initiateLighting();
undefined d_particle__smokeEcallBack();
undefined dPa_smokeEcallBack__draw(dPa_smokeEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_smokeEcallBack__end(dPa_smokeEcallBack * this);
undefined d_particle__dPa_setWindPower(JPABaseParticle * param_1);
undefined dPa_smokePcallBack__execute(dPa_smokePcallBack * this, JPABaseEmitter * param_1, JPABaseParticle * param_2);
undefined dPa_smokePcallBack__draw(dPa_smokePcallBack * this, JPABaseEmitter * param_1, JPABaseParticle * param_2);
undefined dPa_selectTexEcallBack__draw(dPa_selectTexEcallBack * this, JPABaseEmitter * param_1);
void dPa_simpleEcallBack__dPa_simpleEcallBack(dPa_simpleEcallBack * this);
void dPa_simpleData_c__dPa_simpleData_c_destructor(dPa_simpleData_c * this);
void dPa_simpleData_c__dPa_simpleData_c(dPa_simpleData_c * this);
undefined dPa_simpleEcallBack__executeAfter(dPa_simpleEcallBack * this, JPABaseEmitter * param_1);
void dPa_windPcallBack__dPa_windPcallBack_destructor(dPa_windPcallBack * this);
undefined dPa_simpleEcallBack__draw(dPa_simpleEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_simpleEcallBack__create(dPa_simpleEcallBack * this, JPAEmitterManager * param_1, ushort param_2, uchar param_3);
undefined dPa_simpleEcallBack__createEmitter(dPa_simpleEcallBack * this, JPAEmitterManager * param_1);
undefined dPa_simpleEcallBack__set(dPa_simpleEcallBack * this, cXyz * pos, uchar alpha, _GXColor * prmColor, _GXColor * envColor, int param_5);
undefined dPa_windPcallBack__execute(dPa_windPcallBack * this, JPABaseEmitter * param_1, JPABaseParticle * param_2);
void dPa_control_c__dPa_control_c(dPa_control_c * this);
void dPa_simpleEcallBack__dPa_simpleEcallBack_destructor(dPa_simpleEcallBack * this);
undefined dPa_control_c__getRM_ID(ushort param_1);
undefined dPa_control_c__swapFrameBufferTexture(dPa_control_c * this);
undefined dPa_control_c__createCommon(dPa_control_c * this, void * param_1);
undefined dPa_control_c__createRoomScene(dPa_control_c * this, void * param_1);
int dPa_control_c__readScene(dPa_control_c * this, uchar param_1, mDoDvdThd_toMainRam_c * * param_2);
undefined dPa_control_c__createScene(dPa_control_c * this, void * param_1);
undefined dPa_control_c__removeRoomScene(dPa_control_c * this);
undefined dPa_control_c__removeScene(dPa_control_c * this);
undefined dPa_control_c__calc3D(dPa_control_c * this);
undefined dPa_control_c__calc2D(dPa_control_c * this);
undefined dPa_control_c__calcMenu(dPa_control_c * this);
void dPa_control_c__draw(dPa_control_c * this, JPADrawInfo * param_1, byte param_2);
JPABaseEmitter * dPa_control_c__set(dPa_control_c * this, byte param_1, ushort param_2, cXyz * pPos, csXyz * pRot, cXyz * pScale, uchar param_6, dPa_levelEcallBack * pCallBack, char param_8, _GXColor * param_9, _GXColor * param_10, cXyz * param_11);
undefined dPa_control_c__setBombSmoke(dPa_control_c * this, ushort param_1, cXyz * param_2, csXyz * param_3, cXyz * param_4, uchar param_5);
undefined dPa_control_c__setSimpleLand(dPa_control_c * this, int param_1, cXyz * param_2, csXyz * param_3, float param_4, float param_5, float param_6, dKy_tevstr_c * param_7, int * param_8, int param_9);
// undefined dPa_control_c__setSimpleLand(dPa_control_c * this, cBgS_PolyInfo * param_1, cXyz * param_2, csXyz * param_3, float param_4, float param_5, float param_6, dKy_tevstr_c * param_7, int * param_8, int param_9);
undefined dPa_control_c__checkAtrCodeEffect(dPa_control_c * this, int param_1);
undefined dPa_control_c__setNormalStripes(dPa_control_c * this, ushort param_1, cXyz * param_2, csXyz * param_3, cXyz * param_4, uchar param_5, ushort param_6);
undefined4 dPa_control_c__newSimple(dPa_control_c * this, ushort param_1, byte param_2);
undefined dPa_control_c__setSimple(dPa_control_c * this, ushort param_1, cXyz * param_2, uchar param_3, _GXColor * param_4, _GXColor * param_5, int param_6);
undefined dPa_control_c__getSimple(dPa_control_c * this, ushort param_1);
undefined dPa_rippleEcallBack__setup(dPa_rippleEcallBack * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
undefined dPa_rippleEcallBack__end(dPa_rippleEcallBack * this);
undefined dPa_rippleEcallBack__execute(dPa_rippleEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_rippleEcallBack__draw(dPa_rippleEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_singleRippleEcallBack__setup(dPa_singleRippleEcallBack * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
undefined dPa_singleRippleEcallBack__execute(dPa_singleRippleEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_singleRippleEcallBack__draw(dPa_singleRippleEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_ripplePcallBack__execute(dPa_ripplePcallBack * this, JPABaseEmitter * param_1, JPABaseParticle * param_2);
undefined dPa_ripplePcallBack__draw(dPa_ripplePcallBack * this, JPABaseEmitter * param_1, JPABaseParticle * param_2);
undefined dPa_waveEcallBack__setup(dPa_waveEcallBack * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
int dPa_waveEcallBack__remove(dPa_waveEcallBack * this);
undefined dPa_waveEcallBack__executeAfter(dPa_waveEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_waveEcallBack__draw(dPa_waveEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_splashEcallBack__setup(dPa_splashEcallBack * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
int dPa_splashEcallBack__remove(dPa_splashEcallBack * this);
undefined dPa_splashEcallBack__execute(dPa_splashEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_cutTurnEcallBack_c__setup(dPa_cutTurnEcallBack_c * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
undefined dPa_cutTurnEcallBack_c__executeAfter(dPa_cutTurnEcallBack_c * this, JPABaseEmitter * param_1);
undefined dPa_cutTurnEcallBack_c__end(dPa_cutTurnEcallBack_c * this);
undefined dPa_stripesEcallBack__draw(dPa_stripesEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_kageroEcallBack__draw(dPa_kageroEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_bombSmokeEcallBack__execute(dPa_bombSmokeEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_trackEcallBack__getMaxWaterY(dPa_trackEcallBack * this, cXyz * param_1);
undefined dPa_trackEcallBack__setup(dPa_trackEcallBack * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
int dPa_trackEcallBack__remove(dPa_trackEcallBack * this);
undefined dPa_trackEcallBack__execute(dPa_trackEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_trackEcallBack__draw(dPa_trackEcallBack * this, JPABaseEmitter * param_1);
void dPa_trackEcallBack__dPa_trackEcallBack_destructor(dPa_trackEcallBack * this);
void dPa_bombSmokeEcallBack__dPa_bombSmokeEcallBack_destructor(dPa_bombSmokeEcallBack * this);
undefined dPa_bombSmokeEcallBack__setup(dPa_bombSmokeEcallBack * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
void dPa_kageroEcallBack__dPa_kageroEcallBack_destructor(dPa_kageroEcallBack * this);
void dPa_stripesEcallBack__dPa_stripesEcallBack_destructor(dPa_stripesEcallBack * this);
undefined dPa_stripesEcallBack__setup(dPa_stripesEcallBack * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
void dPa_cutTurnEcallBack_c__dPa_cutTurnEcallBack_c_destructor(dPa_cutTurnEcallBack_c * this);
void dPa_splashEcallBack__dPa_splashEcallBack_destructor(dPa_splashEcallBack * this);
void dPa_waveEcallBack__dPa_waveEcallBack_destructor(dPa_waveEcallBack * this);
void dPa_ripplePcallBack__dPa_ripplePcallBack_destructor(dPa_ripplePcallBack * this);
int JPACallBackBase2__JPABaseEmitter_star_JPABaseParticle_star____init(JPACallBackBase2__JPABaseEmitter_star_JPABaseParticle_star__ * this, EVP_PKEY_CTX * ctx);
void dPa_singleRippleEcallBack__dPa_singleRippleEcallBack_destructor(dPa_singleRippleEcallBack * this);
void dPa_rippleEcallBack__dPa_rippleEcallBack_destructor(dPa_rippleEcallBack * this);
undefined JPACallBackBase2__JPABaseEmitter_star_JPABaseParticle_star____draw(JPACallBackBase2__JPABaseEmitter_star_JPABaseParticle_star__ * this, JPABaseEmitter * param_1, JPABaseParticle * param_2);
void dPa_selectTexEcallBack__dPa_selectTexEcallBack_destructor(dPa_selectTexEcallBack * this);
undefined dPa_selectTexEcallBack__setup(dPa_selectTexEcallBack * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
undefined JPACallBackBase2__JPABaseEmitter_star_JPABaseParticle_star____execute(JPACallBackBase2__JPABaseEmitter_star_JPABaseParticle_star__ * this, JPABaseEmitter * param_1, JPABaseParticle * param_2);
undefined d_particle__cLib_calcTimer();
undefined d_particle____sinit_d_particle_cpp();
undefined dPa_setColorEcallBack__draw(dPa_setColorEcallBack * this, JPABaseEmitter * param_1);
undefined dPa_setColorEcallBack__setup(dPa_setColorEcallBack * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
void dPa_setColorEcallBack__dPa_setColorEcallBack_destructor(dPa_setColorEcallBack * this);
undefined d_path__dPath_GetPnt(dPath * param_1, undefined4 param_2);
dPath * d_path__dPath_GetRoomPath(undefined4 pathId, undefined4 roomNo);
dPath * d_path__dPath_GetNextRoomPath(dPath * pInPath, undefined4 roomIdx);
undefined4 d_path__dPath_GetPolyRoomPathVec(cBgS_PolyInfo * param_1, cXyz * param_2, uint * param_3);
undefined dDlst_window_c__setViewPort(dDlst_window_c * this, float param_1, float param_2, float param_3, float param_4, float param_5, float param_6);
undefined dDlst_window_c__setScissor(dDlst_window_c * this, float param_1, float param_2, float param_3, float param_4);
undefined dDlst_2DTri_c__draw(dDlst_2DTri_c * this);
undefined dDlst_2DPoint_c__draw(dDlst_2DPoint_c * this);
undefined dDlst_2DT_c__draw(dDlst_2DT_c * this);
undefined dDlst_2DT2_c__draw(dDlst_2DT2_c * this);
int dDlst_2DT2_c__init(dDlst_2DT2_c * this, ResTIMG * param_1, float param_2, float param_3, float param_4, float param_5, byte param_6, byte param_7, byte param_8, float param_9, float param_10);
undefined dDlst_2DM_c__draw(dDlst_2DM_c * this);
int dDlst_2Dm_c__init(dDlst_2Dm_c * this, EVP_PKEY_CTX * ctx);
undefined dDlst_2Dm_c__setPos(dDlst_2Dm_c * this, short param_1, short param_2, short param_3, short param_4);
undefined dDlst_2Dm_c__setScale(dDlst_2Dm_c * this, float param_1, float param_2);
undefined dDlst_2Dm_c__setScroll(dDlst_2Dm_c * this, int param_1, short param_2, short param_3);
undefined dDlst_2Dm_c__draw(dDlst_2Dm_c * this);
undefined dDlst_2DMt_c__draw(dDlst_2DMt_c * this);
void dDlst_2D_c__dDlst_2D_c(dDlst_2D_c * this, ResTIMG * param_1, short param_2, short param_3, uchar param_4);
undefined dDlst_2D_c__draw(dDlst_2D_c * this);
void cM_rnd_c__init(cM_rnd_c * this, int param_1, int param_2, int param_3);
undefined cM_rnd_c__get(cM_rnd_c * this);
undefined cM_rnd_c__getF(cM_rnd_c * this, float param_1);
undefined cM_rnd_c__getFX(cM_rnd_c * this, float param_1);
undefined cM_rnd_c__getValue(cM_rnd_c * this, float param_1, float param_2);
undefined dDlst_effectLine_c__draw(dDlst_effectLine_c * this);
undefined dDlst_effectLine_c__update(dDlst_effectLine_c * this, cXyz * param_1, _GXColor * param_2, ushort param_3, ushort param_4, ushort param_5, ushort param_6, float param_7, float param_8, float param_9, float param_10);
void dDlst_alphaModelData_c__set(dDlst_alphaModelData_c * this, dDlst_alphaModelData__Type param_1, MTX34 * pMtx, uchar param_3);
void dDlst_alphaModelData_c__draw(dDlst_alphaModelData_c * this, MTX34 * param_1);
void dDlst_alphaModel_c__dDlst_alphaModel_c(dDlst_alphaModel_c * this);
dDlst_alphaModel_c * dDlst_alphaModel_c__create(int param_1);
void dDlst_alphaModelData_c__dDlst_alphaModelData_c_destructor(dDlst_alphaModelData_c * this);
void dDlst_alphaModelData_c__dDlst_alphaModelData_c(dDlst_alphaModelData_c * this);
undefined dDlst_alphaModel_c__set(dDlst_alphaModel_c * this, dDlst_alphaModelData__Type param_1, MTX34 * param_2, byte param_3);
undefined4 dDlst_alphaModel_c__draw(dDlst_alphaModel_c * this, MTX34 * param_1);
undefined dDlst_alphaModelPacket__draw(dDlst_alphaModelPacket * this);
undefined dDlst_shadowPoly_c__set(dDlst_shadowPoly_c * this, cBgD_Vtx_t * param_1, ushort param_2, ushort param_3, ushort param_4, cM3dGPla * param_5);
// undefined dDlst_shadowPoly_c__set(dDlst_shadowPoly_c * this, cXyz * param_1, cXyz * param_2, cXyz * param_3);
undefined dDlst_shadowPoly_c__draw(dDlst_shadowPoly_c * this);
void dDlst_shadowReal_c__dDlst_shadowReal_c_destructor(dDlst_shadowReal_c * this);
void dDlst_shadowTri_c__dDlst_shadowTri_c_destructor(dDlst_shadowTri_c * this);
J3DDrawBuffer * d_drawlist__J3DDrawBuffer__create__FUl(ulong param_1);
int dDlst_shadowReal_c__init(dDlst_shadowReal_c * this, EVP_PKEY_CTX * ctx);
undefined dDlst_shadowReal_c__reset(dDlst_shadowReal_c * this);
undefined dDlst_shadowReal_c__imageDraw(dDlst_shadowReal_c * this, float * param_1);
undefined dDlst_shadowReal_c__draw(dDlst_shadowReal_c * this);
undefined d_drawlist__psdRealCallBack();
undefined d_drawlist__seaRealCallBack();
undefined d_drawlist__realPolygonCheck();
void ShdwDrawPoly_c__ShdwDrawPoly_c_destructor(ShdwDrawPoly_c * this);
void cBgS_ShdwDraw__cBgS_ShdwDraw_destructor(cBgS_ShdwDraw * this);
undefined d_drawlist__setShadowRealMtx();
undefined dDlst_shadowReal_c__set(dDlst_shadowReal_c * this, ulong param_1, char param_2, J3DModel * param_3, cXyz * param_4, float param_5, float param_6, dKy_tevstr_c * param_7);
undefined dDlst_shadowReal_c__set2(dDlst_shadowReal_c * this, ulong param_1, char param_2, J3DModel * param_3, cXyz * param_4, float param_5, float param_6, dKy_tevstr_c * param_7);
undefined dDlst_shadowReal_c__add(dDlst_shadowReal_c * this, J3DModel * param_1);
undefined dDlst_shadowSimple_c__draw(dDlst_shadowSimple_c * this);
undefined dDlst_shadowSimple_c__set(dDlst_shadowSimple_c * this, cXyz * param_1, float param_2, float param_3, cXyz * param_4, short param_5, float param_6, _GXTexObj * param_7);
int dDlst_shadowControl_c__init(dDlst_shadowControl_c * this);
undefined dDlst_shadowControl_c__reset(dDlst_shadowControl_c * this);
undefined dDlst_shadowControl_c__imageDraw(dDlst_shadowControl_c * this, float * param_1);
undefined dDlst_shadowControl_c__draw(dDlst_shadowControl_c * this, MTX34 * param_1);
undefined dDlst_shadowControl_c__setReal(dDlst_shadowControl_c * this, ulong param_1, char param_2, J3DModel * param_3, cXyz * param_4, float param_5, float param_6, dKy_tevstr_c * param_7);
undefined dDlst_shadowControl_c__setReal2(dDlst_shadowControl_c * this, ulong param_1, char param_2, J3DModel * param_3, cXyz * param_4, float param_5, float param_6, dKy_tevstr_c * param_7);
undefined dDlst_shadowControl_c__addReal(dDlst_shadowControl_c * this, ulong param_1, J3DModel * param_2);
undefined dDlst_shadowControl_c__setSimple(dDlst_shadowControl_c * this, cXyz * param_1, float param_2, float param_3, cXyz * param_4, short param_5, float param_6, _GXTexObj * param_7);
undefined dDlst_shadowControl_c__setSimpleTex(dDlst_shadowControl_c * this, void * param_1);
undefined dDlst_mirrorPacket__draw(dDlst_mirrorPacket * this);
int dDlst_mirrorPacket__init(dDlst_mirrorPacket * this, EVP_PKEY_CTX * ctx);
undefined d_drawlist__mirrorPolygonCheck();
undefined dDlst_mirrorPacket__update(dDlst_mirrorPacket * this, float * param_1, uchar param_2, float param_3);
undefined dDlst_alphaVolPacket__draw(dDlst_alphaVolPacket * this);
undefined dDlst_alphaInvVolPacket__draw(dDlst_alphaInvVolPacket * this);
undefined4 dDlst_peekZ_c__newData(dDlst_peekZ_c * this, short param_1, short param_2, ulong * param_3);
undefined dDlst_peekZ_c__peekData(dDlst_peekZ_c * this);
void dDlst_list_c__dDlst_list_c(dDlst_list_c * this);
void mDoExt_3DlineMatSortPacket__mDoExt_3DlineMatSortPacket(mDoExt_3DlineMatSortPacket * this);
void dDlst_shadowReal_c__dDlst_shadowReal_c(dDlst_shadowReal_c * this);
void dDlst_shadowRealPoly_c__dDlst_shadowRealPoly_c_destructor(dDlst_shadowRealPoly_c * this);
void dDlst_shadowTri_c__dDlst_shadowTri_c(dDlst_shadowTri_c * this);
void dDlst_shadowPoly_c__dDlst_shadowPoly_c_destructor(dDlst_shadowPoly_c * this);
void dDlst_shadowSimple_c__dDlst_shadowSimple_c_destructor(dDlst_shadowSimple_c * this);
void dDlst_shadowSimple_c__dDlst_shadowSimple_c(dDlst_shadowSimple_c * this);
int dDlst_list_c__init(dDlst_list_c * this, EVP_PKEY_CTX * ctx);
void dDlst_list_c__dDlst_list_c_destructor(dDlst_list_c * this);
undefined dDlst_list_c__reset(dDlst_list_c * this);
undefined dDlst_list_c__entryZSortXluDrawList(dDlst_list_c * this, J3DDrawBuffer * param_1, J3DPacket * param_2, cXyz * param_3);
void dDlst_list_c__set(dDlst_list_c * this, dDlst_base_c * * * pLst, dDlst_base_c * * * * pEnd, dDlst_base_c * param_3);
void dDlst_list_c__draw(dDlst_list_c * this, dDlst_base_c * * param_1, dDlst_base_c * * param_2);
undefined dDlst_list_c__wipeIn(float param_1, _GXColor * param_2);
// void dDlst_list_c__wipeIn(float param_1);
undefined dDlst_list_c__calcWipe(dDlst_list_c * this);
void d_drawlist__dDlst_texSpecmapST(cXyz * param_1, dKy_tevstr_c * param_2, J3DModelData * param_3, float param_4);
void dDlst_alphaInvVolPacket__dDlst_alphaInvVolPacket_destructor(dDlst_alphaInvVolPacket * this);
void dDlst_alphaVolPacket__dDlst_alphaVolPacket_destructor(dDlst_alphaVolPacket * this);
void dDlst_mirrorPacket__dDlst_mirrorPacket_destructor(dDlst_mirrorPacket * this);
undefined dDlst_shadowRealPoly_c__getTri(dDlst_shadowRealPoly_c * this);
undefined dDlst_shadowRealPoly_c__getTriMax(dDlst_shadowRealPoly_c * this);
void dDlst_alphaModelPacket__dDlst_alphaModelPacket_destructor(dDlst_alphaModelPacket * this);
void dDlst_effectLine_c__dDlst_effectLine_c_destructor(dDlst_effectLine_c * this);
void dDlst_2D_c__dDlst_2D_c_destructor(dDlst_2D_c * this);
void dDlst_2DMt_c__dDlst_2DMt_c_destructor(dDlst_2DMt_c * this);
void dDlst_2Dm_c__dDlst_2Dm_c_destructor(dDlst_2Dm_c * this);
void dDlst_2DM_c__dDlst_2DM_c_destructor(dDlst_2DM_c * this);
void dDlst_2DT2_c__dDlst_2DT2_c_destructor(dDlst_2DT2_c * this);
void dDlst_2DT_c__dDlst_2DT_c_destructor(dDlst_2DT_c * this);
void dDlst_2DPoint_c__dDlst_2DPoint_c_destructor(dDlst_2DPoint_c * this);
void dDlst_2DTri_c__dDlst_2DTri_c_destructor(dDlst_2DTri_c * this);
undefined d_drawlist____sinit_d_drawlist_cpp();
stage_palet_info_class * d_kankyo__d_kankyo_data__dKyd_dmpalet_getp(void);
stage_pselect_info_class * d_kankyo__d_kankyo_data__dKyd_dmpselect_getp(void);
stage_envr_info_class * d_kankyo__d_kankyo_data__dKyd_dmenvr_getp(void);
stage_vrbox_info_class * d_kankyo__d_kankyo_data__dKyd_dmvrbox_getp(void);
undefined d_kankyo__d_kankyo_data__dKyd_schejule_getp();
undefined d_kankyo__d_kankyo_data__dKyd_schejule_boss_getp();
undefined d_kankyo__d_kankyo_data__dKyd_schejule_menu_getp();
undefined d_kankyo__d_kankyo_data__dKyd_xfog_table_set();
J3DPacket * d_kankyo_wether__dKyw_setDrawPacketList(J3DPacket * param_1, int param_2);
void d_kankyo_wether__dKyw_setDrawPacketListSky(J3DPacket * param_1, int param_2);
undefined d_kankyo_wether__dKyw_setDrawPacketListXluBg();
undefined d_kankyo_wether__dKyw_setDrawPacketListXluZPos();
undefined dKankyo_sun_Packet__draw(dKankyo_sun_Packet * this);
undefined dKankyo_sunlenz_Packet__draw(dKankyo_sunlenz_Packet * this);
void RAIN_EFF__RAIN_EFF_destructor(RAIN_EFF * this);
void RAIN_EFF__RAIN_EFF(RAIN_EFF * this);
undefined dKankyo_rain_Packet__draw(dKankyo_rain_Packet * this);
void SNOW_EFF__SNOW_EFF_destructor(SNOW_EFF * this);
void SNOW_EFF__SNOW_EFF(SNOW_EFF * this);
undefined dKankyo_snow_Packet__draw(dKankyo_snow_Packet * this);
void STAR_EFF__STAR_EFF_destructor(STAR_EFF * this);
void STAR_EFF__STAR_EFF(STAR_EFF * this);
undefined dKankyo_star_Packet__draw(dKankyo_star_Packet * this);
void POISON_EFF__POISON_EFF_destructor(POISON_EFF * this);
void POISON_EFF__POISON_EFF(POISON_EFF * this);
undefined dKankyo_poison_Packet__draw(dKankyo_poison_Packet * this);
void CLOUD_EFF__CLOUD_EFF_destructor(CLOUD_EFF * this);
void CLOUD_EFF__CLOUD_EFF(CLOUD_EFF * this);
undefined dKankyo_cloud_Packet__draw(dKankyo_cloud_Packet * this);
void HOUSI_EFF__HOUSI_EFF_destructor(HOUSI_EFF * this);
void HOUSI_EFF__HOUSI_EFF(HOUSI_EFF * this);
undefined dKankyo_housi_Packet__draw(dKankyo_housi_Packet * this);
void VRKUMO_EFF__VRKUMO_EFF_destructor(VRKUMO_EFF * this);
void VRKUMO_EFF__VRKUMO_EFF(VRKUMO_EFF * this);
undefined dKankyo_vrkumo_Packet__draw(dKankyo_vrkumo_Packet * this);
void WAVE_EFF__WAVE_EFF_destructor(WAVE_EFF * this);
void WAVE_EFF__WAVE_EFF(WAVE_EFF * this);
undefined dKankyo_wave_Packet__draw(dKankyo_wave_Packet * this);
undefined d_kankyo_wether__dKyw_drawSun();
undefined d_kankyo_wether__dKyw_Sun_Draw();
undefined d_kankyo_wether__dKyw_drawSunlenz();
undefined d_kankyo_wether__dKyw_Sunlenz_Draw();
undefined d_kankyo_wether__dKyw_drawRain();
undefined d_kankyo_wether__dKyw_Rain_Draw();
undefined d_kankyo_wether__dKyw_drawSnow();
undefined d_kankyo_wether__dKyw_Snow_Draw();
undefined d_kankyo_wether__dKyw_drawStar();
undefined d_kankyo_wether__dKyw_Star_Draw();
undefined d_kankyo_wether__dKyw_drawPoison();
undefined d_kankyo_wether__dKyw_Poison_Draw();
undefined d_kankyo_wether__dKyw_drawHousi();
undefined d_kankyo_wether__dKyw_Housi_Draw();
undefined d_kankyo_wether__dKyw_drawCloud();
undefined d_kankyo_wether__dKyw_Cloud_Draw();
void d_kankyo_wether__dKyw_drawVrkumo(int param_1);
undefined d_kankyo_wether__dKyw_Vrkumo_Draw();
undefined d_kankyo_wether__dKyw_drawWave();
undefined d_kankyo_wether__dKyw_Wave_Draw();
undefined d_kankyo_wether__dKyw_wether_init();
undefined d_kankyo_wether__dKyw_wether_init2();
undefined d_kankyo_wether__dKyw_wether_delete();
void WIND_EFF__WIND_EFF_destructor(WIND_EFF * this);
void KAMOME_EFF__KAMOME_EFF_destructor(KAMOME_EFF * this);
void dKankyo_wave_Packet__dKankyo_wave_Packet_destructor(dKankyo_wave_Packet * this);
void dKankyo_cloud_Packet__dKankyo_cloud_Packet_destructor(dKankyo_cloud_Packet * this);
void dKankyo_housi_Packet__dKankyo_housi_Packet_destructor(dKankyo_housi_Packet * this);
void dKankyo_poison_Packet__dKankyo_poison_Packet_destructor(dKankyo_poison_Packet * this);
void dKankyo_star_Packet__dKankyo_star_Packet_destructor(dKankyo_star_Packet * this);
void dKankyo_snow_Packet__dKankyo_snow_Packet_destructor(dKankyo_snow_Packet * this);
void dKankyo_rain_Packet__dKankyo_rain_Packet_destructor(dKankyo_rain_Packet * this);
void dKankyo_sunlenz_Packet__dKankyo_sunlenz_Packet_destructor(dKankyo_sunlenz_Packet * this);
void dKankyo_sun_Packet__dKankyo_sun_Packet_destructor(dKankyo_sun_Packet * this);
undefined d_kankyo_wether__dKyw_wether_delete2();
void dKankyo_vrkumo_Packet__dKankyo_vrkumo_Packet_destructor(dKankyo_vrkumo_Packet * this);
undefined d_kankyo_wether__wether_move_windline();
void KAMOME_EFF__KAMOME_EFF(KAMOME_EFF * this);
void WIND_EFF__WIND_EFF(WIND_EFF * this);
undefined d_kankyo_wether__wether_move_thunder();
undefined d_kankyo_wether__dKyw_wether_move();
undefined d_kankyo_wether__wether_move_sun();
undefined d_kankyo_wether__wether_move_rain();
undefined d_kankyo_wether__wether_move_snow();
undefined d_kankyo_wether__wether_move_star();
undefined d_kankyo_wether__wether_move_poison();
undefined d_kankyo_wether__wether_move_housi();
undefined d_kankyo_wether__wether_move_moya();
undefined d_kankyo_wether__wether_move_vrkumo();
undefined d_kankyo_wether__wether_move_wave();
undefined d_kankyo_wether__dKyw_wether_move_draw();
undefined d_kankyo_wether__dKyw_wether_move_draw2();
undefined d_kankyo_wether__dKyw_wether_draw();
undefined d_kankyo_wether__dKyw_wether_draw2();
undefined d_kankyo_wether__dKyw_wether_proc();
undefined d_kankyo_wether__dKyw_wind_init();
undefined d_kankyo_wether__dKyw_wind_set();
cXyz * d_kankyo_wether__dKyw_get_wind_vec(void);
double d_kankyo_wether__dKyw_get_wind_pow(void);
float * d_kankyo_wether__dKyw_get_wind_power(void);
cXyz * d_kankyo_wether__dKyw_get_wind_vecpow(cXyz * param_1);
undefined d_kankyo_wether__dKyw_squal_set();
undefined d_kankyo_wether__squal_proc();
undefined d_kankyo_wether__dKyw_pntwind_init();
void d_kankyo_wether__pntwind_set(WIND_INFLUENCE * param_1);
void d_kankyo_wether__dKyw_pntwind_set(WIND_INFLUENCE * param_1);
undefined d_kankyo_wether__dKyw_pwind_cylinder_set();
undefined d_kankyo_wether__dKyw_pntwind_cut();
void d_kankyo_wether__dKyw_pntwind_get_info(cXyz * param_1, cXyz * pDir, float * pPow);
cXyz * d_kankyo_wether__dKyw_pntwind_get_vecpow(cXyz * __return_storage_ptr__, cXyz * param_1);
undefined d_kankyo_wether__dKyw_get_AllWind_vec();
undefined d_kankyo_wether__dKyw_get_AllWind_vecpow();
void d_kankyo_wether__dKyw_tact_wind_set(short param_1, short param_2);
undefined d_kankyo_wether__dKyw_tact_wind_set_go();
undefined d_kankyo_wether__dKyw_get_tactwind_dir();
undefined d_kankyo_wether__dKyw_custom_windpower();
undefined d_kankyo_wether__dKyw_get_windsdir();
void d_kankyo_wether__dKyw_evt_wind_set(short param_1, short param_2);
undefined d_kankyo_wether__dKyw_evt_wind_set_go();
undefined d_kankyo_wether__dKyw_gbwind_use_check();
undefined d_kankyo_wether__dKyw_tornado_Notice();
void d_kankyo_wether__dKyw_rain_set(int param_1);
float d_kankyo_rain__vectle_calc(DOUBLE_POS * param_1, cXyz * param_2);
float d_kankyo_rain__get_vectle_calc(cXyz * param_1, cXyz * param_2, cXyz * param_3);
float d_kankyo_rain__dKyr_get_vectle_calc(cXyz * param_1, cXyz * param_2, cXyz * param_3);
void d_kankyo_rain__dKy_set_eyevect_calc(camera_class * param_1, cXyz * param_2, double scaleXZ, double scaleY);
void d_kankyo_rain__dKy_set_eyevect_calc2(camera_class * param_1, cXyz * param_2, float scaleXZ, float scaleY);
undefined d_kankyo_rain__dKyr_set_btitex();
undefined d_kankyo_rain__dKyr_kamome_move();
undefined d_kankyo_rain__dKyr_wind_init();
undefined d_kankyo_rain__dKyr_wind_move();
void dBgS_ObjGndChk_All__dBgS_ObjGndChk_All_destructor(dBgS_ObjGndChk_All * this);
undefined d_kankyo_rain__dKyr_lenzflare_move();
undefined d_kankyo_rain__dKyr_moon_arrival_check();
void d_kankyo_rain__dKyr_sun_move(void);
undefined d_kankyo_rain__dKyr_rain_init();
void d_kankyo_rain__rain_bg_chk(dKankyo_rain_Packet * param_1, int param_2);
undefined d_kankyo_rain__overhead_bg_chk();
void dBgS_RoofChk__dBgS_RoofChk_destructor(dBgS_RoofChk * this);
undefined d_kankyo_rain__forward_overhead_bg_chk();
undefined d_kankyo_rain__dKyr_rain_move();
undefined d_kankyo_rain__dKyr_housi_move();
undefined d_kankyo_rain__dKyr_snow_init();
undefined d_kankyo_rain__dKyr_snow_move();
undefined d_kankyo_rain__dKyr_kazanbai_move();
undefined d_kankyo_rain__dKyr_kazanbai_tamari_move();
undefined d_kankyo_rain__dKyr_star_init();
undefined d_kankyo_rain__dKyr_star_move();
undefined d_kankyo_rain__wave_move();
undefined d_kankyo_rain__cloud_shadow_move();
undefined d_kankyo_rain__light_at_hit_check();
undefined d_kankyo_rain__dKyr_poison_live_check();
undefined d_kankyo_rain__dKyr_poison_light_colision();
undefined d_kankyo_rain__poison_init();
undefined d_kankyo_rain__poison_move();
undefined d_kankyo_rain__vrkumo_move();
undefined d_kankyo_rain__dKy_wave_chan_init();
undefined d_kankyo_rain__snap_sunmoon_proc();
undefined d_kankyo_rain__dKyr_drawSun(undefined4 param_1, cXyz * param_2, undefined4 param_3, byte * * param_4);
undefined d_kankyo_rain__dKyr_drawLenzflare(undefined4 param_1, cXyz * param_2, _GXColor * param_3, undefined4 param_4);
undefined d_kankyo_rain__dKyr_drawRain();
undefined d_kankyo_rain__dKyr_drawSibuki();
undefined d_kankyo_rain__drawPoison();
void d_kankyo_rain__dKyr_drawHousi(MTX34 * param_1, char * pTex);
undefined d_kankyo_rain__dKyr_drawKazanbai();
undefined d_kankyo_rain__dKyr_drawSnow();
void d_kankyo_rain__dKyr_drawStar(MTX34 * param_1, char * pTexData);
undefined d_kankyo_rain__drawWave(undefined4 param_1, byte * param_2);
undefined d_kankyo_rain__drawCloudShadow(undefined4 param_1, char * param_2);
undefined d_kankyo_rain__drawVrkumo(MTX34 * param_1, _GXColor * param_2, uchar * param_3);
undefined d_kankyo_rain__dKyr_thunder_init();
undefined d_kankyo_rain__dKyr_thunder_move();
// void dBgS_ObjGndChk_All__dBgS_ObjGndChk_All_destructor(dBgS_ObjGndChk_All * this);
// void dBgS_ObjGndChk_All__dBgS_ObjGndChk_All_destructor(dBgS_ObjGndChk_All * this);
// void dBgS_ObjGndChk_All__dBgS_ObjGndChk_All_destructor(dBgS_ObjGndChk_All * this);
// void dBgS_RoofChk__dBgS_RoofChk_destructor(dBgS_RoofChk * this);
// void dBgS_RoofChk__dBgS_RoofChk_destructor(dBgS_RoofChk * this);
// void dBgS_RoofChk__dBgS_RoofChk_destructor(dBgS_RoofChk * this);
void dSnap_Obj__dSnap_Obj_destructor(dSnap_Obj * this);
undefined d_kankyo_demo__dKydm_demo_plight_entry();
undefined d_kankyo_demo__dKydm_demo_plight_delete();
undefined d_kankyo_demo__dKydm_demo_plight_execute();
void dDetectPlace_c__dDetectPlace_c(dDetectPlace_c * this);
void dDetectPlace_c__dDetectPlace_c_destructor(dDetectPlace_c * this);
undefined dDetectPlace_c__chk_enable(dDetectPlace_c * this);
void dDetect_c__dDetect_c(dDetect_c * this);
void dDetect_c__dDetect_c_destructor(dDetect_c * this);
undefined dDetect_c__proc(dDetect_c * this);
undefined dDetect_c__chk_quake(dDetect_c * this, cXyz * param_1);
undefined dDetect_c__set_quake(dDetect_c * this, cXyz * param_1);
undefined dDetect_c__chk_quake_area(dDetect_c * this, cXyz * param_1);
undefined dDetect_c__search_tag_light(dDetect_c * this, void * param_1, void * param_2);
undefined dDetect_c__chk_light(dDetect_c * this, cXyz * param_1);
undefined dDetect_c__chk_attention(dDetect_c * this, cXyz * param_1);
// undefined daObj__PrmAbstract(daObj * this, fopAc_ac_c * param_1, Prm_e param_2, Prm_e param_3);
undefined _unnamed_d_vibration_cpp___makedata(_unnamed_d_vibration_cpp_ * this, ushort * param_1, ulong param_2, long param_3);
undefined _unnamed_d_vibration_cpp___rollshift(_unnamed_d_vibration_cpp_ * this, ulong param_1, long param_2, long param_3);
undefined _unnamed_d_vibration_cpp___makebits(_unnamed_d_vibration_cpp_ * this, ulong param_1, long param_2, long param_3);
undefined _unnamed_d_vibration_cpp___randombit(_unnamed_d_vibration_cpp_ * this, long param_1, long param_2);
undefined dVibration_c__Run(dVibration_c * this);
undefined dVibration_c__StartShock(dVibration_c * this, int param_1, int param_2, cXyz * param_3);
undefined dVibration_c__StartQuake(dVibration_c * this, int param_1, int param_2, cXyz * param_3);
// undefined dVibration_c__StartQuake(dVibration_c * this, uchar * param_1, int param_2, int param_3, cXyz * param_4);
undefined dVibration_c__StopQuake(dVibration_c * this, int param_1);
undefined dVibration_c__Kill(dVibration_c * this);
undefined dVibration_c__CheckQuake(dVibration_c * this);
undefined dVibration_c__setDefault(dVibration_c * this);
undefined dVibration_c__Init(dVibration_c * this);
undefined dVibration_c__Pause(dVibration_c * this);
void dVibration_c__dVibration_c(dVibration_c * this);
void dVibration_c__dVibration_c_destructor(dVibration_c * this);
void dAttParam_c__dAttParam_c(dAttParam_c * this, long param_1);
void dAttParam_c__dAttParam_c_destructor(dAttParam_c * this);
undefined dAttDraw_CallBack_c__execute(dAttDraw_CallBack_c * this, ushort param_1, J3DTransformInfo * param_2);
void dAttention_c__dAttention_c(dAttention_c * this, fopAc_ac_c * param_1, ulong param_2);
void dAttention_c__dAttention_c_destructor(dAttention_c * this);
undefined dAttention_c__GetActionList(dAttention_c * this, long param_1);
undefined dAttention_c__GetLockonList(dAttention_c * this, long param_1);
undefined dAttention_c__getActionBtnB(dAttention_c * this);
dAttList_c * dAttention_c__getActionBtnXYZ_local(dAttention_c * this, int param_1);
dAttList_c * dAttention_c__getActionBtnX(dAttention_c * this);
dAttList_c * dAttention_c__getActionBtnY(dAttention_c * this);
dAttList_c * dAttention_c__getActionBtnZ(dAttention_c * this);
undefined dAttention_c__chkAttMask(dAttention_c * this, ulong param_1, ulong param_2);
undefined d_attention__check_event_condition();
undefined d_attention__check_flontofplayer();
undefined d_attention__distace_weight();
undefined d_attention__distace_angle_adjust();
undefined d_attention__check_distace();
undefined dAttention_c__calcWeight(dAttention_c * this, int param_1, fopAc_ac_c * param_2, float param_3, short param_4, short param_5, ulong * param_6);
undefined dAttention_c__setLList(dAttention_c * this, fopAc_ac_c * param_1, float param_2, float param_3, ulong param_4);
undefined dAttention_c__setAList(dAttention_c * this, fopAc_ac_c * param_1, float param_2, float param_3, ulong param_4);
undefined dAttention_c__initList(dAttention_c * this, ulong param_1);
undefined d_attention__select_attention();
undefined dAttention_c__makeList(dAttention_c * this);
undefined dAttention_c__SelectAttention(dAttention_c * this, fopAc_ac_c * param_1);
undefined dAttention_c__sortList(dAttention_c * this);
undefined dAttention_c__stockAttention(dAttention_c * this, ulong param_1);
undefined dAttention_c__nextAttention(dAttention_c * this, ulong param_1);
undefined dAttention_c__freeAttention(dAttention_c * this);
undefined dAttention_c__chaseAttention(dAttention_c * this);
undefined dAttention_c__EnemyDistance(dAttention_c * this, fopAc_ac_c * param_1);
undefined d_attention__sound_attention();
undefined dAttention_c__runSoundProc(dAttention_c * this);
undefined dAttention_c__runDrawProc(dAttention_c * this);
undefined dAttention_c__runDebugDisp0(dAttention_c * this);
undefined dAttention_c__runDebugDisp(dAttention_c * this);
undefined dAttention_c__judgementButton(dAttention_c * this);
undefined dAttention_c__judgementTriggerProc(dAttention_c * this);
undefined dAttention_c__judgementLostCheck(dAttention_c * this);
undefined dAttention_c__judgementStatusSw(dAttention_c * this, ulong param_1);
undefined dAttention_c__judgementStatusHd(dAttention_c * this, ulong param_1);
undefined dAttention_c__Run(dAttention_c * this, ulong param_1);
undefined dAttention_c__Draw(dAttention_c * this);
undefined dAttDraw_c__setAnm(dAttDraw_c * this, int param_1, int param_2, int param_3);
undefined dAttDraw_c__draw(dAttDraw_c * this, cXyz * param_1, float * param_2);
undefined dAttention_c__LockonTarget(dAttention_c * this, long param_1);
undefined dAttention_c__LockonReleaseDistanse(dAttention_c * this);
undefined dAttention_c__LockonTargetPId(dAttention_c * this, long param_1);
undefined dAttention_c__ActionTarget(dAttention_c * this, long param_1);
undefined dAttention_c__LockonTruth(dAttention_c * this);
undefined dAttList_c__getActor(dAttList_c * this);
undefined dAttList_c__setActor(dAttList_c * this, fopAc_ac_c * param_1);
undefined dAttHint_c__getPId(dAttHint_c * this, void * param_1);
undefined dAttHint_c__convPId(dAttHint_c * this, uint param_1);
undefined dAttHint_c__request(dAttHint_c * this, fopAc_ac_c * param_1, int param_2);
int dAttHint_c__init(dAttHint_c * this, EVP_PKEY_CTX * ctx);
undefined dAttHint_c__proc(dAttHint_c * this);
undefined dAttCatch_c__convPId(dAttCatch_c * this, uint param_1);
int dAttCatch_c__init(dAttCatch_c * this, EVP_PKEY_CTX * ctx);
undefined dAttCatch_c__proc(dAttCatch_c * this);
undefined dAttCatch_c__request(dAttCatch_c * this, fopAc_ac_c * param_1, uchar param_2, float param_3, float param_4, float param_5, short param_6, int param_7);
undefined dAttLook_c__convPId(dAttLook_c * this, uint param_1);
int dAttLook_c__init(dAttLook_c * this, EVP_PKEY_CTX * ctx);
undefined dAttLook_c__proc(dAttLook_c * this);
undefined dAttLook_c__request(dAttLook_c * this, fopAc_ac_c * param_1, float param_2, float param_3, float param_4, short param_5, int param_6);
undefined dAttLook_c__requestF(dAttLook_c * this, fopAc_ac_c * param_1, short param_2, int param_3);
undefined dBgS__Ct(dBgS * this);
undefined dBgS__Dt(dBgS * this);
undefined dBgS__ClrMoveFlag(dBgS * this);
undefined dBgS__Move(dBgS * this);
undefined dBgS__Regist(dBgS * this, dBgW * pBgW, fopAc_ac_c * pActor);
undefined dBgS__ChkMoveBG(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__ChkMoveBG_NoDABg(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__GetPolyId0(dBgS * this, int param_1, int param_2, int param_3, ulong param_4, ulong param_5);
undefined dBgS__GetPolyCamId(dBgS * this, int param_1, int param_2);
undefined dBgS__GetMtrlSndId(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__GetExitId(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__GetPolyColor(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__GetGrpRoomInfId(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__GetGrpSoundId(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__ChkGrpInf(dBgS * this, cBgS_PolyInfo * param_1, ulong param_2);
undefined dBgS__GetPolyId1(dBgS * this, int param_1, int param_2, int param_3, ulong param_4, ulong param_5);
undefined dBgS__GetLinkNo(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__GetWallCode(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__GetSpecialCode(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS_ChangeAttributeCode();
undefined dBgS__GetAttributeCodeDirect(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__GetAttributeCode(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__GetGroundCode(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__GetPolyId2(dBgS * this, int param_1, int param_2, int param_3, ulong param_4, ulong param_5);
undefined dBgS__GetCamMoveBG(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__GetRoomCamId(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__GetRoomPathId(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS_GetRoomPathPntNo();
undefined dBgS__GetRoomPathPntNo(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__GetRoomId(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__ChkPolyHSStick(dBgS * this, cBgS_PolyInfo * param_1);
undefined dBgS__LineCrossNonMoveBG(dBgS * this, cBgS_LinChk * param_1);
undefined dBgS__WallCorrect(dBgS * this, dBgS_Acch * param_1);
undefined dBgS__RoofChk(dBgS * this, dBgS_RoofChk * param_1);
undefined dBgS__SplGrpChk(dBgS * this, dBgS_SplGrpChk * param_1);
undefined dBgS__SphChk(dBgS * this, dBgS_SphChk * param_1, void * param_2);
undefined dBgS__WallCrrPos(dBgS * this, dBgS_CrrPos * param_1);
undefined dBgS__MoveBgCrrPos(dBgS * this, cBgS_PolyInfo * param_1, bool param_2, cXyz * outPos, csXyz * param_4, csXyz * param_5);
undefined dBgS__MoveBgTransPos(dBgS * this, cBgS_PolyInfo * param_1, bool param_2, cXyz * param_3, csXyz * param_4, csXyz * param_5);
undefined dBgS__MoveBgMatrixCrrPos(dBgS * this, cBgS_PolyInfo * param_1, bool param_2, cXyz * param_3, csXyz * param_4, csXyz * param_5);
void dBgS_MoveBGProc_Typical(dBgW * param_1, void * param_2, undefined param_3, cBgS_PolyInfo * param_4, bool param_5, cXyz * param_6, csXyz * param_7, csXyz * param_8);
void dBgS_MoveBGProc_RotY(dBgW * param_1, void * param_2, cBgS_PolyInfo * param_3, bool param_4, cXyz * param_5, csXyz * param_6, csXyz * param_7);
undefined dBgS_MoveBGProc_TypicalRotY();
void dBgS_MoveBGProc_Trans(cBgW * param_1, void * param_2, cBgS_PolyInfo * param_3, bool param_4, cXyz * param_5, cXyz * param_6, csXyz * param_7);
undefined dBgS__RideCallBack(dBgS * this, cBgS_PolyInfo * param_1, fopAc_ac_c * param_2);
undefined dBgS__PushPullCallBack(dBgS * this, cBgS_PolyInfo * param_1, fopAc_ac_c * param_2, short param_3, PushPullLabel param_4);
undefined dBgS_CrrPos__CrrPos(dBgS_CrrPos * this, dBgS * param_1);
undefined dBgW__MatrixCrrPos(dBgW * this, cBgS_PolyInfo * param_1, void * param_2, bool param_3, cXyz * param_4, csXyz * param_5, csXyz * param_6);
void dBgS_AcchCir__dBgS_AcchCir(dBgS_AcchCir * this);
undefined dBgS_AcchCir__SetWallR(dBgS_AcchCir * this, float radius);
undefined dBgS_AcchCir__SetWall(dBgS_AcchCir * this, float halfHeight, float radius);
void dBgS_Acch__dBgS_Acch_destructor(dBgS_Acch * this);
void dBgS_Acch__dBgS_Acch(dBgS_Acch * this);
undefined dBgS_Acch__Init(dBgS_Acch * this);
undefined dBgS_Acch__Set(dBgS_Acch * this, cXyz * param_1, cXyz * param_2, fopAc_ac_c * param_3, int param_4, dBgS_AcchCir * param_5, cXyz * param_6, csXyz * param_7, csXyz * param_8);
undefined dBgS_Acch__GroundCheckInit(dBgS_Acch * this, dBgS * param_1);
undefined dBgS_Acch__GroundCheck(dBgS_Acch * this, dBgS * param_1);
undefined dBgS_Acch__GroundRoofProc(dBgS_Acch * this, dBgS * param_1);
undefined dBgS_Acch__LineCheck(dBgS_Acch * this, dBgS * param_2);
undefined dBgS_Acch__CrrPos(dBgS_Acch * this, dBgS * param_1);
undefined dBgS_Acch__GetWallAllR(dBgS_Acch * this);
undefined dBgS_Acch__SetWallCir(dBgS_Acch * this);
undefined dBgS_Acch__CalcWallBmdCyl(dBgS_Acch * this);
undefined dBgS_Acch__SetGroundUpY(dBgS_Acch * this, float param_1);
undefined dBgS_Acch__GetWallAllLowH(dBgS_Acch * this);
undefined dBgS_Acch__GetWallAllLowH_R(dBgS_Acch * this);
undefined dBgS_Acch__GetOnePolyInfo(dBgS_Acch * this, cBgS_PolyInfo * param_1);
undefined dBgS_Acch__GetWallAddY(dBgS_Acch * this, Vec * param_1, int param_2);
void cM3dGCir__cM3dGCir_destructor(cM3dGCir * this);
void cM2dGCir__cM2dGCir_destructor(cM2dGCir * this);
void cM3dGPla__cM3dGPla_destructor(cM3dGPla * this);
undefined dStage_roomControl_c__getBgW(dStage_roomControl_c * this, int param_1);
void dBgS_ObjAcch__dBgS_ObjAcch_destructor(dBgS_ObjAcch * this);
void dBgS_AcchCir__dBgS_AcchCir_destructor(dBgS_AcchCir * this);
// void dBgS_Acch__dBgS_Acch_destructor(dBgS_Acch * this);
// void dBgS_Acch__dBgS_Acch_destructor(dBgS_Acch * this);
// void dBgS_ObjAcch__dBgS_ObjAcch_destructor(dBgS_ObjAcch * this);
// void dBgS_ObjAcch__dBgS_ObjAcch_destructor(dBgS_ObjAcch * this);
undefined8 d_bg_s_func__dBgS_ObjGndChk_Func(cXyz * param_1);
undefined d_bg_s_func__dBgS_ObjGndChk_Wtr_Func();
undefined d_bg_s_func__dBgS_SplGrpChk_In_ObjGnd();
undefined d_bg_s_func__dBgS_GetWaterHeight();
undefined d_bg_s_func__dBgS_GetGndMtrlSndId_Func();
void dBgS_ObjGndChk_Wtr__dBgS_ObjGndChk_Wtr_destructor(dBgS_ObjGndChk_Wtr * this);
// void dBgS_ObjGndChk_Wtr__dBgS_ObjGndChk_Wtr_destructor(dBgS_ObjGndChk_Wtr * this);
// void dBgS_ObjGndChk_Wtr__dBgS_ObjGndChk_Wtr_destructor(dBgS_ObjGndChk_Wtr * this);
// void dBgS_ObjGndChk_Wtr__dBgS_ObjGndChk_Wtr_destructor(dBgS_ObjGndChk_Wtr * this);
undefined dBgS_LinChk__Set(dBgS_LinChk * this, cXyz * param_1, cXyz * param_2, fopAc_ac_c * param_3);
void dBgS_MoveBgActor__dBgS_MoveBgActor(dBgS_MoveBgActor * this);
undefined d_bg_s_movebg_actor__CheckCreateHeap(undefined4 actor);
undefined dBgS_MoveBgActor__MoveBGCreateHeap(dBgS_MoveBgActor * this);
PhaseState dBgS_MoveBgActor__MoveBGCreate(dBgS_MoveBgActor * this, char * arcName, int dzbFileIndex, void * param_3, ulong maxHeapSize);
undefined dBgS_MoveBgActor__MoveBGDelete(dBgS_MoveBgActor * this);
undefined dBgS_MoveBgActor__MoveBGExecute(dBgS_MoveBgActor * this);
undefined dBgS_MoveBgActor__CreateHeap(dBgS_MoveBgActor * this);
undefined dBgS_MoveBgActor__Create(dBgS_MoveBgActor * this);
undefined dBgS_MoveBgActor__Delete(dBgS_MoveBgActor * this);
undefined dBgS_MoveBgActor__Execute(dBgS_MoveBgActor * this, float * * param_1);
undefined dBgS_MoveBgActor__Draw(dBgS_MoveBgActor * this);
undefined dBgS_MoveBgActor__IsDelete(dBgS_MoveBgActor * this);
undefined dBgS_MoveBgActor__ToFore(dBgS_MoveBgActor * this);
undefined dBgS_MoveBgActor__ToBack(dBgS_MoveBgActor * this);
void dBgS_SplGrpChk__dBgS_SplGrpChk(dBgS_SplGrpChk * this);
undefined dBgS_SplGrpChk__Init(dBgS_SplGrpChk * this);
void dBgS_WtrChk__dBgS_WtrChk(dBgS_WtrChk * this);
dBgW * dBgW__dBgW(dBgW * this);
undefined dBgW__Move(dBgW * this);
undefined dBgW__positionWallCorrect(dBgW * this, dBgS_Acch * param_1, float param_2, cM3dGPla * param_3, cXyz * param_4, float param_5);
undefined dBgW__RwgWallCorrect(dBgW * this, dBgS_Acch * param_1, ushort param_2);
undefined dBgW__WallCorrectRp(dBgW * this, dBgS_Acch * param_1, int param_2);
undefined dBgW__WallCorrectGrpRp(dBgW * this, dBgS_Acch * param_1, int param_2, int param_3);
undefined dBgW__RwgRoofChk(dBgW * this, ushort param_1, dBgS_RoofChk * param_2);
undefined dBgW__RoofChkRp(dBgW * this, dBgS_RoofChk * param_1, int param_2);
undefined dBgW__RoofChkGrpRp(dBgW * this, dBgS_RoofChk * param_1, int param_2, int param_3);
undefined dBgW__RwgSplGrpChk(dBgW * this, ushort param_1, dBgS_SplGrpChk * param_2);
undefined dBgW__SplGrpChkRp(dBgW * this, dBgS_SplGrpChk * param_1, int param_2);
undefined dBgW__SplGrpChkGrpRp(dBgW * this, dBgS_SplGrpChk * param_1, int param_2, int param_3);
undefined dBgW__RwgSphChk(dBgW * this, ushort param_1, dBgS_SphChk * param_2, void * param_3);
undefined dBgW__SphChkRp(dBgW * this, dBgS_SphChk * param_1, void * param_2, int param_3);
undefined dBgW__SphChkGrpRp(dBgW * this, dBgS_SphChk * param_1, void * param_2, int param_3, int param_4);
undefined dBgW__positionWallCrrPos(dBgW * this, cM3dGTri * param_1, dBgS_CrrPos * param_2, cXyz * param_3, float param_4, float param_5);
undefined dBgW__RwgWallCrrPos(dBgW * this, ushort param_1, dBgS_CrrPos * param_2);
undefined dBgW__WallCrrPosRp(dBgW * this, dBgS_CrrPos * param_1, int param_2);
undefined dBgW__WallCrrPosGrpRp(dBgW * this, dBgS_CrrPos * param_1, int param_2, int param_3);
undefined dBgW__WallCrrPos(dBgW * this, dBgS_CrrPos * param_1);
undefined dBgW__CrrPos(dBgW * this, cBgS_PolyInfo * param_1, void * param_2, bool param_3, cXyz * param_4, csXyz * param_5, csXyz * param_6);
undefined dBgW__TransPos(dBgW * this, cBgS_PolyInfo * param_1, void * param_2, bool param_3, cXyz * param_4, csXyz * param_5, csXyz * param_6);
undefined dBgW__ChkPolyThrough(dBgW * this, int poly_index, cBgS_PolyPassChk * param_2);
undefined dBgW__ChkShdwDrawThrough(dBgW * this, int param_1, cBgS_PolyPassChk * param_2);
undefined dBgW__ChkGrpThrough(dBgW * this, int param_1, cBgS_GrpPassChk * param_2, int depth);
undefined dBgW__ChangeAttributeCodeByPathPntNo(dBgW * this, int param_1, ulong param_2);
undefined d_bg_w__dBgW_NewSet();
void cM3dGTri__cM3dGTri_destructor(cM3dGTri * this);
void dBgW__dBgW_destructor(dBgW * this);
undefined dBgWDeform__Set(dBgWDeform * this, cBgD_t * param_1, J3DModel * param_2, ulong param_3);
undefined dBgWHf__Set(dBgWHf * this, cBgD_t * param_1, ushort * param_2, float param_3, int param_4, int param_5, ulong param_6);
undefined dBgWHf__CalcPlane(dBgWHf * this);
undefined dBgWHf__ClassifyPlane(dBgWHf * this);
undefined dBgWHf__MoveHf(dBgWHf * this);
undefined dBgWHf__MakeBlckMinMaxHf(dBgWHf * this, int param_1, float * param_2, float * param_3);
undefined dBgWHf__MakeBlckBndHf(dBgWHf * this, int param_1, float * param_2, float * param_3);
undefined dBgWHf__MakeNodeTreeRpHf(dBgWHf * this, int param_1);
undefined dBgWHf__MakeNodeTreeGrpRpHf(dBgWHf * this, int param_1);
undefined dBgWHf__MakeNodeTreeHf(dBgWHf * this);
void dBgWHf__dBgWHf_destructor(dBgWHf * this);
undefined dBgWSv__MatrixCrrPos(dBgWSv * this, cBgS_PolyInfo * param_1, void * param_2, bool param_3, cXyz * param_4, csXyz * param_5, csXyz * param_6);
undefined dBgWSv__Set(dBgWSv * this, cBgD_t * param_1, ulong param_2);
undefined dBgWSv__CopyBackVtx(dBgWSv * this);
undefined dBgWSv__CrrPosWork(dBgWSv * this, cXyz * param_1, int param_2, int param_3, int param_4);
undefined dBgWSv__CrrPos(dBgWSv * this, cBgS_PolyInfo * param_1, void * param_2, bool param_3, cXyz * param_4, csXyz * param_5, csXyz * param_6);
undefined dBgWSv__TransPosWork(dBgWSv * this, cXyz * param_1, int param_2, int param_3, int param_4);
undefined dBgWSv__TransPos(dBgWSv * this, cBgS_PolyInfo * param_1, void * param_2, bool param_3, cXyz * param_4, csXyz * param_5, csXyz * param_6);
void dBgWSv__dBgWSv_destructor(dBgWSv * this);
undefined dCcD_GAtTgCoCommonBase__GetAc(dCcD_GAtTgCoCommonBase * this);
undefined dCcD_GAtTgCoCommonBase__SetEffCounterTimer(dCcD_GAtTgCoCommonBase * this);
void dCcD_GStts__dCcD_GStts(dCcD_GStts * this);
undefined dCcD_GStts__Ct(dCcD_GStts * this);
undefined dCcD_GStts__Move(dCcD_GStts * this);
undefined dCcD_Stts__Init(dCcD_Stts * this, int param_1, int param_2, fopAc_ac_c * pActor);
undefined dCcD_Stts__Ct(dCcD_Stts * this);
undefined dCcD_GObjAt__Set(dCcD_GObjAt * this, dCcD_SrcGObjAt * param_1);
undefined dCcD_GObjTg__Set(dCcD_GObjTg * this, dCcD_SrcGObjTg * param_1);
void dCcD_GObjInf__dCcD_GObjInf(dCcD_GObjInf * this);
void dCcD_GObjInf__dCcD_GObjInf_destructor(dCcD_GObjInf * this);
void * dCcD_GObjInf__GetGObjInf(dCcD_GObjInf * this);
undefined dCcD_GObjInf__ClrAtHit(dCcD_GObjInf * this);
undefined dCcD_GObjInf__ChkAtHit(dCcD_GObjInf * this);
undefined dCcD_GObjInf__ResetAtHit(dCcD_GObjInf * this);
undefined dCcD_GObjInf__GetAtHitObj(dCcD_GObjInf * this);
undefined dCcD_GObjInf__GetAtHitGObj(dCcD_GObjInf * this);
undefined dCcD_GObjInf__ChkAtNoGuard(dCcD_GObjInf * this);
undefined dCcD_GObjInf__ClrTgHit(dCcD_GObjInf * this);
undefined dCcD_GObjInf__ChkTgHit(dCcD_GObjInf * this);
undefined dCcD_GObjInf__ResetTgHit(dCcD_GObjInf * this);
cCcD_Obj * dCcD_GObjInf__GetTgHitObj(dCcD_GObjInf * this);
undefined dCcD_GObjInf__GetTgHitGObj(dCcD_GObjInf * this);
undefined dCcD_GObjInf__GetTgHitObjSe(dCcD_GObjInf * this);
undefined dCcD_GObjInf__ClrCoHit(dCcD_GObjInf * this);
undefined dCcD_GObjInf__ChkCoHit(dCcD_GObjInf * this);
undefined dCcD_GObjInf__GetCoHitObj(dCcD_GObjInf * this);
undefined dCcD_GObjInf__Set(dCcD_GObjInf * this, dCcD_SrcGObjInf * param_1);
undefined d_cc_d__dCcD_GetGObjInf(cCcD_Obj * param_1);
undefined dCcD_Cps__Set(dCcD_Cps * this, dCcD_SrcCps * param_1);
undefined dCcD_Tri__Set(dCcD_Tri * this, dCcD_SrcTri * param_1);
undefined dCcD_Cyl__Set(dCcD_Cyl * this, dCcD_SrcCyl * param_1);
undefined dCcD_Cyl__StartCAt(dCcD_Cyl * this, cXyz * param_1);
undefined dCcD_Cyl__StartCTg(dCcD_Cyl * this, cXyz * param_1);
undefined dCcD_Cyl__MoveCAtTg(dCcD_Cyl * this, cXyz * param_1);
undefined dCcD_Cyl__MoveCAt(dCcD_Cyl * this, cXyz * param_1);
undefined dCcD_Cyl__MoveCTg(dCcD_Cyl * this, cXyz * param_1);
undefined dCcD_Sph__Set(dCcD_Sph * this, dCcD_SrcSph * param_1);
undefined dCcD_Sph__StartCAt(dCcD_Sph * this, cXyz * param_1);
undefined dCcD_Sph__MoveCAt(dCcD_Sph * this, cXyz * param_1);
void cCcD_GStts__cCcD_GStts_destructor(cCcD_GStts * this);
void cCcD_GObjInf__cCcD_GObjInf_destructor(cCcD_GObjInf * this);
void cCcD_Obj__cCcD_Obj_destructor(cCcD_Obj * this);
void cCcD_ObjHitInf__cCcD_ObjHitInf_destructor(cCcD_ObjHitInf * this);
void cCcD_ObjCo__cCcD_ObjCo_destructor(cCcD_ObjCo * this);
void cCcD_ObjTg__cCcD_ObjTg_destructor(cCcD_ObjTg * this);
void cCcD_ObjAt__cCcD_ObjAt_destructor(cCcD_ObjAt * this);
void cCcD_ObjCommonBase__cCcD_ObjCommonBase_destructor(cCcD_ObjCommonBase * this);
undefined cCcD_Obj__GetGObjInf(cCcD_Obj * this);
void * cCcD_GObjInf__GetGObjInf(cCcD_GObjInf * this);
// undefined cCcD_Obj__GetShapeAttr(cCcD_Obj * this);
undefined cCcD_GObjInf__ClrAtHit(cCcD_GObjInf * this);
undefined cCcD_GObjInf__ClrTgHit(cCcD_GObjInf * this);
undefined cCcD_GObjInf__ClrCoHit(cCcD_GObjInf * this);
// undefined cCcD_GObjInf__GetGObjInf(cCcD_GObjInf * this);
// undefined cCcD_Obj__GetGObjInf(cCcD_Obj * this);
void dCcD_GObjCo__dCcD_GObjCo_destructor(dCcD_GObjCo * this);
void dCcD_GObjTg__dCcD_GObjTg_destructor(dCcD_GObjTg * this);
void dCcD_GObjAt__dCcD_GObjAt_destructor(dCcD_GObjAt * this);
void dCcD_GAtTgCoCommonBase__dCcD_GAtTgCoCommonBase_destructor(dCcD_GAtTgCoCommonBase * this);
undefined dCcD_Stts__GetGStts(dCcD_Stts * this);
undefined dCcD_Stts__ClrAt(dCcD_Stts * this);
undefined dCcD_Stts__ClrTg(dCcD_Stts * this);
void dCcD_Stts__dCcD_Stts_destructor(dCcD_Stts * this);
void dCcD_GStts__dCcD_GStts_destructor(dCcD_GStts * this);
// void dCcD_Stts__dCcD_Stts_destructor(dCcD_Stts * this);
void dCcMassS_Mng__dCcMassS_Mng(dCcMassS_Mng * this);
undefined dCcMassS_Mng__Ct(dCcMassS_Mng * this);
undefined dCcMassS_Mng__Prepare(dCcMassS_Mng * this);
undefined dCcMassS_Mng__Chk(dCcMassS_Mng * this, cXyz * param_1, fopAc_ac_c * * param_2, dCcMassS_HitInf * param_3);
undefined dCcMassS_Mng__Clear(dCcMassS_Mng * this);
undefined dCcMassS_Mng__Set(dCcMassS_Mng * this, cCcD_Obj * param_1, uchar param_2);
undefined dCcMassS_Mng__SetAreaChk(dCcMassS_Mng * this, cCcD_Obj * param_1, uchar param_2, void * param_3);
undefined dCcMassS_Mng__SetCam(dCcMassS_Mng * this, cM3dGCps * param_1);
undefined dCcMassS_Mng__GetResultCam(dCcMassS_Mng * this);
undefined dCcMassS_Mng__GetCamTopPos(dCcMassS_Mng * this, cXyz * param_1);
void cCcD_CpsAttr__cCcD_CpsAttr_destructor(cCcD_CpsAttr * this);
void cCcD_CylAttr__cCcD_CylAttr_destructor(cCcD_CylAttr * this);
undefined cCcD_CylAttr__CrossAtTg(cCcD_CylAttr * this, cCcD_ShapeAttr * param_1, cXyz * param_2);
undefined cCcD_CylAttr__CrossCo(cCcD_CylAttr * this, cCcD_ShapeAttr * param_1, float * param_2);
void dCcMassS_Obj__dCcMassS_Obj(dCcMassS_Obj * this);
undefined dCcS__Ct(dCcS * this);
undefined dCcS__Dt(dCcS * this);
undefined dCcS__ChkShieldFrontRange(dCcS * this, cCcD_Obj * pAt, cCcD_Obj * pTg);
undefined dCcS__ChkShield(dCcS * this, cCcD_Obj * pAt, cCcD_Obj * pTg, dCcD_GObjInf * pAtInf, dCcD_GObjInf * pTgInf);
undefined dCcS__CalcTgPlusDmg(dCcS * this, cCcD_Obj * param_1, cCcD_Obj * param_2, cCcD_Stts * param_3, cCcD_Stts * param_4);
undefined4 dCcS__ChkAtTgHitAfterCross(dCcS * this, bool param_1, bool param_2, dCcD_GObjInf * pAtInf, dCcD_GObjInf * pTgInf, dCcD_Stts * pAtStts, dCcD_Stts * pTgStts, dCcD_GStts * pAtGStts, dCcD_GStts * pTgGStts);
undefined dCcS__SetCoGObjInf(dCcS * this, bool param_1, bool param_2, dCcD_GObjInf * param_3, dCcD_GObjInf * param_4, dCcD_Stts * param_5, dCcD_Stts * param_6, dCcD_GStts * param_7, dCcD_GStts * param_8);
undefined dCcS__GetRank(dCcS * this, uchar param_1);
undefined dCcS__SetPosCorrect(dCcS * this, cCcD_Obj * param_1, cXyz * param_2, cCcD_Obj * param_3, cXyz * param_4, float param_5);
undefined dCcS__CalcParticleAngle(dCcS * this, dCcD_GObjInf * param_1, cCcD_Stts * param_2, cCcD_Stts * param_3, csXyz * param_4);
undefined dCcS__ProcAtTgHitmark(dCcS * this, bool param_1, bool param_2, cCcD_Obj * pAt, cCcD_Obj * pTg, dCcD_GObjInf * pAtInf, dCcD_GObjInf * pTgInf, cCcD_Stts * pAtStts, cCcD_Stts * pTgStts, dCcD_GStts * pAtGStts, dCcD_GStts * pTgGStts, cXyz * param_11);
void dCcS__SetAtTgGObjInf(dCcS * this, bool param_1, bool param_2, cCcD_Obj * pAt, cCcD_Obj * pTg, dCcD_GObjInf * pAtInf, dCcD_GObjInf * pTgInf, dCcD_Stts * pAtStts, dCcD_Stts * pTgStts, dCcD_GStts * pAtGStts, dCcD_GStts * pTgGStts, cXyz * param_11);
undefined dCcS__ChkCamera(dCcS * this, cXyz * param_1, cXyz * param_2, float param_3, fopAc_ac_c * param_4, fopAc_ac_c * param_5);
undefined dCcS__MoveAfterCheck(dCcS * this);
undefined dCcS__DrawAfter(dCcS * this);
undefined dCcS__Move(dCcS * this);
undefined dCcS__Draw(dCcS * this);
undefined dCcS__MassClear(dCcS * this);
undefined dCcS__ChkNoHitGCo(dCcS * this, cCcD_Obj * param_1, cCcD_Obj * param_2);
undefined cCcS__ChkNoHitGAtTg(cCcS * this, cCcD_GObjInf * param_1, cCcD_GObjInf * param_2, cCcD_GStts * param_3, cCcD_GStts * param_4);
undefined d_cc_uty__cc_pl_cut_bit_get();
undefined d_cc_uty__at_se_get();
undefined d_cc_uty__at_se_getC();
void d_cc_uty__def_se_set(fopAc_ac_c * param_1, cCcD_Obj * param_2, ulong param_3);
undefined d_cc_uty__def_se_set_p();
void d_cc_uty__at_power_check(CcAtInfo * param_1);
undefined d_cc_uty__cc_at_check();
// undefined daObj__PrmAbstract(daObj * this, fopAc_ac_c * param_1, Prm_e param_2, Prm_e param_3);
undefined dCamMath__rationalBezierRatio(dCamMath * this, float param_1, float param_2);
undefined dCamMath__customRBRatio(dCamMath * this, float param_1, float param_2);
undefined dCamMath__zoomFovy(dCamMath * this, float param_1, float param_2);
undefined dCamMath__xyzRotateX(dCamMath * this, cXyz * param_1, cSAngle param_2);
undefined dCamMath__xyzRotateY(dCamMath * this, cXyz * param_1, cSAngle param_2);
undefined dCamMath__xyzHorizontalDistance(dCamMath * this, cXyz * param_1, cXyz * param_2);
undefined dCamMath__xyzProjPosOnYZ(dCamMath * this, cSAngle param_1, cXyz * param_2, cXyz * param_3);
void dCstick_c__dCstick_c(dCstick_c * this);
undefined dCstick_c__Shift(dCstick_c * this, ulong param_1);
void dCamBGChk_c__dCamBGChk_c(dCamBGChk_c * this);
void dCamParam_c__dCamParam_c(dCamParam_c * this, long param_1);
void dCamParam_c__dCamParam_c_destructor(dCamParam_c * this);
undefined dCamParam_c__Change(dCamParam_c * this, long param_1);
undefined dCamParam_c__SearchStyle(dCamParam_c * this, ulong param_1);
undefined dCamParam_c__ratiof(dCamParam_c * this, float param_1, float param_2, float param_3, float param_4);
undefined dCamParam_c__DefaultRadius(dCamParam_c * this, float * param_1);
undefined dCamParam_c__RadiusRatio(dCamParam_c * this, float param_1);
undefined dCamParam_c__CenterHeight(dCamParam_c * this, float param_1);
undefined dCamParam_c__Fovy(dCamParam_c * this, float param_1);
undefined dCamParam_c__LockonLongitude(dCamParam_c * this, float param_1);
undefined dCamParam_c__LockonLatitude(dCamParam_c * this, float param_1);
undefined dCamParam_c__LockonFovy(dCamParam_c * this, float param_1);
undefined dCamParam_c__LockonCenterHeight(dCamParam_c * this, float param_1);
void dCamSetup_c__dCamSetup_c(dCamSetup_c * this);
void dCamSetup_c__dCamSetup_c_destructor(dCamSetup_c * this);
undefined dCamSetup_c__CheckLatitudeRange(dCamSetup_c * this, short * param_1);
undefined dCamSetup_c__FanBank(dCamSetup_c * this);
void dCstick_c__dCstick_c_destructor(dCstick_c * this);
undefined dCamera_c__StartEventCamera(dCamera_c * this, int param_1, int param_2, ...);
undefined dCamera_c__EndEventCamera(dCamera_c * this, int param_1);
undefined dCamera_c__searchEventArgData(dCamera_c * this, char * param_1);
undefined dCamera_c__getEvIntData(dCamera_c * this, int * param_1, char * param_2);
undefined dCamera_c__getEvStringPntData(dCamera_c * this, char * param_1);
// undefined dCamera_c__getEvIntData(dCamera_c * this, int * param_1, char * param_2, int param_3);
undefined dCamera_c__getEvFloatData(dCamera_c * this, float * param_1, char * param_2, float param_3);
undefined dCamera_c__getEvXyzData(dCamera_c * this, cXyz * param_1, char * param_2, cXyz * param_3);
undefined dCamera_c__getEvStringData(dCamera_c * this, char * param_1, char * param_2, char * param_3);
// undefined dCamera_c__getEvStringPntData(dCamera_c * this, char * param_1, char * param_2);
fopAc_ac_c * dCamera_c__getEvActor(dCamera_c * this, char * param_1);
// undefined dCamera_c__getEvActor(dCamera_c * this, char * param_1, char * param_2);
undefined dCamera_c__pauseEvCamera(dCamera_c * this);
undefined dCamera_c__fixedFrameEvCamera(dCamera_c * this);
undefined dCamera_c__stokerEvCamera(dCamera_c * this);
undefined dCamera_c__rollingEvCamera(dCamera_c * this);
undefined dCamera_c__fixedPositionEvCamera(dCamera_c * this);
undefined dCamera_c__uniformTransEvCamera(dCamera_c * this);
undefined cSGlobe__U(cSGlobe * this, cSAngle * param_1);
undefined cSGlobe__operator_set(cSGlobe * this, cSGlobe * param_1);
int cXyz__abs(cXyz * this, int __x);
undefined cXyz__operator_set(cXyz * this, cXyz * param_1);
// void cXyz__cXyz(cXyz * this, cXyz * param_1);
void dCamera_c___class$5621d_ev_camera_cpp___class$5621d_ev_camera_cpp_destructor(_class$5621d_ev_camera_cpp * this);
undefined dCamera_c__uniformBrakeEvCamera(dCamera_c * this);
void dCamera_c___class$6314d_ev_camera_cpp___class$6314d_ev_camera_cpp_destructor(_class$6314d_ev_camera_cpp * this);
undefined dCamera_c__uniformAcceleEvCamera(dCamera_c * this);
void dCamera_c___class$6993d_ev_camera_cpp___class$6993d_ev_camera_cpp_destructor(_class$6993d_ev_camera_cpp * this);
undefined dCamera_c__watchActorEvCamera(dCamera_c * this);
undefined cSGlobe__V(cSGlobe * this, cSAngle * param_1);
undefined _unnamed_d_ev_camera_cpp___lineCollisionCheck(_unnamed_d_ev_camera_cpp_ * this, cXyz * param_1, cXyz * param_2, fopAc_ac_c * param_3, fopAc_ac_c * param_4);
undefined dCamera_c__restorePosEvCamera(dCamera_c * this);
undefined dCamera_c__talktoEvCamera(dCamera_c * this);
undefined dCamera_c__maptoolIdEvCamera(dCamera_c * this);
undefined dCamera_c__styleEvCamera(dCamera_c * this);
undefined dCamera_c__gameOverEvCamera(dCamera_c * this);
undefined dCamera_c__tactEvCamera(dCamera_c * this);
undefined dCamera_c__windDirectionEvCamera(dCamera_c * this);
undefined dCamera_c__turnToActorEvCamera(dCamera_c * this);
undefined dCamera_c__tornadoWarpEvCamera(dCamera_c * this);
undefined dCamera_c__saveEvCamera(dCamera_c * this);
undefined dCamera_c__loadEvCamera(dCamera_c * this);
undefined dCamera_c__useItem0EvCamera(dCamera_c * this);
undefined dCamera_c__useItem1EvCamera(dCamera_c * this);
undefined dCamera_c__getItemEvCamera(dCamera_c * this);
undefined dCamera_c__possessedEvCamera(dCamera_c * this);
undefined dCamera_c__fixedFramesEvCamera(dCamera_c * this);
undefined dCamera_c__bSplineEvCamera(dCamera_c * this);
undefined dCamera_c__twoActor0EvCamera(dCamera_c * this);
void dWood__Anm_c__Anm_c(Anm_c * this);
undefined dWood__Anm_c__play(Anm_c * this, Packet_c * param_1);
undefined dWood__Anm_c__copy_angamp(Anm_c * this, Anm_c * param_1);
undefined dWood__Anm_c__mode_cut_init(Anm_c * this, Anm_c * param_1, short param_2);
undefined dWood__Anm_c__mode_cut(Anm_c * this, Packet_c * param_1);
undefined dWood__Anm_c__mode_push_into_init(Anm_c * this, Anm_c * param_1, short param_2);
undefined dWood__Anm_c__mode_push_into(Anm_c * this, Packet_c * param_1);
undefined dWood__Anm_c__mode_push_back_init(Anm_c * this);
undefined dWood__Anm_c__mode_push_back(Anm_c * this, Packet_c * param_1);
undefined dWood__Anm_c__mode_fan(Anm_c * this, Packet_c * param_1);
undefined dWood__Anm_c__mode_norm_init(Anm_c * this);
undefined dWood__Anm_c__mode_norm(Anm_c * this, Packet_c * param_1);
undefined dWood__Anm_c__mode_norm_set_wind(Anm_c * this, float param_1, short param_2);
undefined dWood__Anm_c__mode_to_norm_init(Anm_c * this, AnmID_e param_1);
undefined dWood__Anm_c__mode_to_norm(Anm_c * this, Packet_c * param_1);
void dWood__Unit_c__Unit_c(Unit_c * this);
undefined dWood__Unit_c__set_ground(Unit_c * this);
undefined dWood__Unit_c__set_mtx(Unit_c * this, Anm_c * param_1);
undefined dWood__Unit_c__clear(Unit_c * this);
undefined dWood__Unit_c__cc_hit_before_cut(Unit_c * this, Packet_c * param_1);
undefined dWood__Unit_c__cc_hit_after_cut(Unit_c * this, Packet_c * param_1);
undefined dWood__Unit_c__proc(Unit_c * this, Packet_c * param_1);
void dWood__Room_c__Room_c(Room_c * this);
undefined dWood__Room_c__entry_unit(Room_c * this, Unit_c * param_1);
undefined dWood__Room_c__delete_all_unit(Room_c * this);
void dWood__Packet_c__Packet_c(Packet_c * this);
void dWood__Unit_c__Unit_c_destructor(Unit_c * this);
void dWood__Packet_c__Packet_c_destructor(Packet_c * this);
undefined dWood__Packet_c__delete_room(Packet_c * this, int param_1);
undefined dWood__Packet_c__put_unit(Packet_c * this, cXyz * param_1, int param_2);
undefined dWood__Packet_c__calc_cc(Packet_c * this);
undefined dWood__Packet_c__calc(Packet_c * this);
undefined dWood__Packet_c__update(Packet_c * this);
undefined dWood__Packet_c__draw(Packet_c * this);
undefined dWood__Packet_c__search_empty_UnitID(Packet_c * this);
undefined dWood__Packet_c__search_anm(Packet_c * this, Mode_e param_1);
undefined d_wood____sinit_d_wood_cpp();
undefined dFlower_data_c__WorkCo(dFlower_data_c * this, fopAc_ac_c * param_1, ulong param_2, int param_3);
undefined dFlower_data_c__WorkAt_NoCutAnim(dFlower_data_c * this, fopAc_ac_c * param_1, ulong param_2, int param_3, dCcMassS_HitInf * param_4, cCcD_Obj * param_5);
undefined dFlower_data_c__WorkAt(dFlower_data_c * this, fopAc_ac_c * param_1, ulong param_2, int param_3, dCcMassS_HitInf * param_4);
undefined dFlower_data_c__hitCheck(dFlower_data_c * this, fopAc_ac_c * param_1, int param_2);
undefined dFlower_room_c__newData(dFlower_room_c * this, dFlower_data_c * param_1);
undefined dFlower_room_c__deleteData(dFlower_room_c * this);
void dFlower_packet_c__dFlower_packet_c(dFlower_packet_c * this);
void dFlower_room_c__dFlower_room_c(dFlower_room_c * this);
void dFlower_anm_c__dFlower_anm_c(dFlower_anm_c * this);
void dFlower_data_c__dFlower_data_c(dFlower_data_c * this);
undefined dFlower_packet_c__draw(dFlower_packet_c * this);
undefined dFlower_packet_c__calc(dFlower_packet_c * this);
undefined d_flower__checkGroundY();
undefined dFlower_packet_c__update(dFlower_packet_c * this);
undefined dFlower_packet_c__setData(dFlower_packet_c * this, dFlower_data_c * param_1, int param_2, char param_3, cXyz * param_4, int param_5, char param_6);
undefined dFlower_packet_c__newData(dFlower_packet_c * this, char param_1, cXyz * param_2, int param_3, char param_4);
undefined dFlower_packet_c__newAnm(dFlower_packet_c * this);
undefined dFlower_packet_c__setAnm(dFlower_packet_c * this, int param_1, short param_2);
undefined d_flower____sinit_d_flower_cpp();
undefined dItem_data__checkAppearEffect(dItem_data * this, uchar param_1);
undefined dItem_data__getAppearEffect(dItem_data * this, uchar param_1);
undefined dItem_data__checkSpecialEffect(dItem_data * this, uchar param_1);
undefined dItem_data__getSpecialEffect(dItem_data * this, uchar param_1);
undefined d_item_data____sinit_d_item_data_cpp();
int dSeaFightGame_info_c__init(dSeaFightGame_info_c * this, EVP_PKEY_CTX * ctx);
undefined dSeaFightGame_info_c__put_ship(dSeaFightGame_info_c * this, uchar param_1, uchar param_2);
undefined dSeaFightGame_info_c__checkPutShip(dSeaFightGame_info_c * this, int param_1, int param_2, int param_3, int param_4);
undefined dSeaFightGame_info_c__attack(dSeaFightGame_info_c * this, uchar param_1, uchar param_2);
undefined d2DBSplinePath__Init(d2DBSplinePath * this, long param_1, long param_2);
undefined d2DBSplinePath__Step(d2DBSplinePath * this);
undefined d2DBSplinePath__Calc(d2DBSplinePath * this, cXyz * param_1);
// undefined d2DBSplinePath__Calc(d2DBSplinePath * this, float * param_1);
void dADM_CharTbl__dADM_CharTbl(dADM_CharTbl * this);
void dADM_CharTbl__dADM_CharTbl_destructor(dADM_CharTbl * this);
undefined dADM_CharTbl__SetData(dADM_CharTbl * this, ulong param_1, ulong param_2, ulong param_3, ulong param_4, ulong param_5, ulong param_6, ulong param_7);
undefined dADM_CharTbl__SetUpIndex(dADM_CharTbl * this);
undefined dADM_CharTbl__GetNameIndex2(dADM_CharTbl * this, char * param_1, int param_2);
void dADM__dADM(dADM * this);
void dADM__dADM_destructor(dADM * this);
undefined dADM__FindTag(dADM * this, ulong param_1, ulong * param_2, ulong * param_3);
undefined dADM__SetData(dADM * this, void * param_1);
undefined d_item__execItemGet(dItem_data__ItemNo itemNo);
undefined d_item__checkItemGet();
undefined d_item__item_func_heart();
undefined d_item__item_func_green_rupee();
undefined d_item__item_func_blue_rupee();
undefined d_item__item_func_white_rupee();
undefined d_item__item_func_red_rupee();
undefined d_item__item_func_purple_rupee();
undefined d_item__item_func_orange_rupee();
undefined d_item__item_func_kakera_heart();
undefined d_item__item_func_utuwa_heart();
undefined d_item__item_func_s_magic();
undefined d_item__item_func_l_magic();
undefined d_item__item_func_bomb_5();
undefined d_item__item_func_bomb_10();
undefined d_item__item_func_bomb_20();
undefined d_item__item_func_bomb_30();
undefined d_item__item_func_silver_rupee();
undefined d_item__item_func_arrow_10();
undefined d_item__item_func_arrow_20();
undefined d_item__item_func_arrow_30();
undefined d_item__item_func_small_key();
undefined d_item__item_func_recover_faily();
undefined d_item__item_func_subdun_rupee();
undefined d_item__item_func_triple_heart();
undefined d_item__item_func_pendant();
undefined d_item__item_func_telescope();
undefined d_item__item_func_tncl_whitsl();
undefined d_item__item_func_wind_tact();
undefined d_item__item_func_camera();
undefined d_item__item_func_emono_bag();
undefined d_item__item_func_rope();
undefined d_item__item_func_camera2();
undefined d_item__item_func_bow();
undefined d_item__item_func_pwr_groove();
undefined d_item__item_func_hvy_boots();
undefined d_item__item_func_drgn_shield();
undefined d_item__item_func_water_boots();
undefined d_item__item_func_esa_bag();
undefined d_item__item_func_boomerang();
undefined d_item__item_func_bare_hand();
undefined d_item__item_func_hookshot();
undefined d_item__item_func_warasibe_bag();
undefined d_item__item_func_bomb_bag();
undefined d_item__item_func_fuku();
undefined d_item__item_func_hummer();
undefined d_item__item_func_deku_leaf();
undefined d_item__item_func_magic_arrow();
undefined d_item__item_func_light_arrow();
undefined d_item__item_func_sword();
undefined d_item__item_func_master_sword();
undefined d_item__item_func_lv3_sword();
undefined d_item__item_func_shield();
undefined d_item__item_func_mirror_shield();
undefined d_item__item_func_dropped_sword();
undefined d_item__item_func_master_sword_ex();
undefined d_item__item_func_pirates_omamori();
undefined d_item__item_func_heros_omamori();
undefined d_item__item_func_grass_ball();
undefined d_item__item_func_skull_necklace();
undefined d_item__item_func_bokobaba_seed();
undefined d_item__item_func_golden_feather();
undefined d_item__item_func_boko_belt();
undefined d_item__item_func_red_jerry();
undefined d_item__item_func_green_jerry();
undefined d_item__item_func_blue_jerry();
undefined d_item__item_func_map();
undefined d_item__item_func_compass();
undefined d_item__item_func_boss_key();
undefined d_item__item_func_empty_bship();
undefined d_item__item_func_empty_bottle();
undefined d_item__item_func_red_bottle();
undefined d_item__item_func_green_bottle();
undefined d_item__item_func_blue_bottle();
undefined d_item__item_func_bottleship();
undefined d_item__item_func_soup_bottle();
undefined d_item__item_func_bin_in_water();
undefined d_item__item_func_fairy_bottle();
undefined d_item__item_func_firefly_bottle();
undefined d_item__item_func_fwater_bottle();
undefined d_item__item_func_bin();
undefined d_item__item_func_triforce1();
undefined d_item__item_func_triforce2();
undefined d_item__item_func_triforce3();
undefined d_item__item_func_triforce4();
undefined d_item__item_func_triforce5();
undefined d_item__item_func_triforce6();
undefined d_item__item_func_triforce7();
undefined d_item__item_func_triforce8();
undefined d_item__item_func_pearl1();
undefined d_item__item_func_pearl2();
undefined d_item__item_func_pearl3();
undefined d_item__item_func_knowledge_tf();
undefined d_item__item_func_tact_song1();
undefined d_item__item_func_tact_song2();
undefined d_item__item_func_tact_song3();
undefined d_item__item_func_tact_song4();
undefined d_item__item_func_tact_song5();
undefined d_item__item_func_tact_song6();
undefined d_item__item_func_normal_sail();
undefined d_item__item_func_triforce_map1();
undefined d_item__item_func_triforce_map2();
undefined d_item__item_func_triforce_map3();
undefined d_item__item_func_triforce_map4();
undefined d_item__item_func_triforce_map5();
undefined d_item__item_func_triforce_map6();
undefined d_item__item_func_triforce_map7();
undefined d_item__item_func_triforce_map8();
undefined d_item__item_func_bird_esa_5();
undefined d_item__item_func_animal_esa();
undefined d_item__item_func_esa1();
undefined d_item__item_func_esa2();
undefined d_item__item_func_esa3();
undefined d_item__item_func_esa4();
undefined d_item__item_func_esa5();
undefined d_item__item_func_magic_bean();
undefined d_item__item_func_bird_esa_10();
undefined d_item__item_func_flower_1();
undefined d_item__item_func_flower_2();
undefined d_item__item_func_flower_3();
undefined d_item__item_func_heros_flag();
undefined d_item__item_func_tairyo_flag();
undefined d_item__item_func_sales_flag();
undefined d_item__item_func_wind_flag();
undefined d_item__item_func_red_flag();
undefined d_item__item_func_fossil_head();
undefined d_item__item_func_water_statue();
undefined d_item__item_func_postman_statue();
undefined d_item__item_func_president_statue();
undefined d_item__item_func_letter00();
undefined d_item__item_func_magic_seed();
undefined d_item__item_func_magys_letter();
undefined d_item__item_func_mo_letter();
undefined d_item__item_func_cottage_paper();
undefined d_item__item_func_kaisen_present1();
undefined d_item__item_func_kaisen_present2();
undefined d_item__item_func_salvage_item1();
undefined d_item__item_func_salvage_item2();
undefined d_item__item_func_salvage_item3();
undefined d_item__item_func_xxx_039();
undefined d_item__item_func_tincle_statue01();
undefined d_item__item_func_tincle_statue02();
undefined d_item__item_func_tincle_statue03();
undefined d_item__item_func_tincle_statue04();
undefined d_item__item_func_tincle_statue05();
undefined d_item__item_func_tincle_statue06();
undefined d_item__item_func_max_rupee_up1();
undefined d_item__item_func_max_rupee_up2();
undefined d_item__item_func_max_bomb_up1();
undefined d_item__item_func_max_bomb_up2();
undefined d_item__item_func_max_arrow_up1();
undefined d_item__item_func_max_arrow_up2();
undefined d_item__item_func_magic_power();
undefined d_item__item_func_max_mp_up1();
undefined d_item__item_func_tincle_rupee1();
undefined d_item__item_func_tincle_rupee2();
undefined d_item__item_func_tincle_rupee3();
undefined d_item__item_func_tincle_rupee4();
undefined d_item__item_func_tincle_rupee5();
undefined d_item__item_func_tincle_rupee6();
undefined d_item__item_func_lithograph1();
undefined d_item__item_func_lithograph2();
undefined d_item__item_func_lithograph3();
undefined d_item__item_func_lithograph4();
undefined d_item__item_func_lithograph5();
undefined d_item__item_func_lithograph6();
undefined d_item__item_func_collectmap64();
undefined d_item__item_func_collectmap63();
undefined d_item__item_func_collectmap62();
undefined d_item__item_func_collectmap61();
undefined d_item__item_func_collectmap60();
undefined d_item__item_func_collectmap59();
undefined d_item__item_func_collectmap58();
undefined d_item__item_func_collectmap57();
undefined d_item__item_func_collectmap56();
undefined d_item__item_func_collectmap55();
undefined d_item__item_func_collectmap54();
undefined d_item__item_func_collectmap53();
undefined d_item__item_func_collectmap52();
undefined d_item__item_func_collectmap51();
undefined d_item__item_func_collectmap50();
undefined d_item__item_func_collectmap49();
undefined d_item__item_func_collectmap48();
undefined d_item__item_func_collectmap47();
undefined d_item__item_func_collectmap46();
undefined d_item__item_func_collectmap45();
undefined d_item__item_func_collectmap44();
undefined d_item__item_func_collectmap43();
undefined d_item__item_func_collectmap42();
undefined d_item__item_func_collectmap41();
undefined d_item__item_func_collectmap40();
undefined d_item__item_func_collectmap39();
undefined d_item__item_func_collectmap38();
undefined d_item__item_func_collectmap37();
undefined d_item__item_func_collectmap36();
undefined d_item__item_func_collectmap35();
undefined d_item__item_func_collectmap34();
undefined d_item__item_func_collectmap33();
undefined d_item__item_func_collectmap32();
undefined d_item__item_func_collectmap31();
undefined d_item__item_func_collectmap30();
undefined d_item__item_func_collectmap29();
undefined d_item__item_func_collectmap28();
undefined d_item__item_func_collectmap27();
undefined d_item__item_func_collectmap26();
undefined d_item__item_func_collectmap25();
undefined d_item__item_func_collectmap24();
undefined d_item__item_func_collectmap23();
undefined d_item__item_func_collectmap22();
undefined d_item__item_func_collectmap21();
undefined d_item__item_func_collectmap20();
undefined d_item__item_func_collectmap19();
undefined d_item__item_func_collectmap18();
undefined d_item__item_func_collectmap17();
undefined d_item__item_func_collectmap16();
undefined d_item__item_func_collectmap15();
undefined d_item__item_func_collectmap14();
undefined d_item__item_func_collectmap13();
undefined d_item__item_func_collectmap12();
undefined d_item__item_func_collectmap11();
undefined d_item__item_func_collectmap10();
undefined d_item__item_func_collectmap09();
undefined d_item__item_func_collectmap08();
undefined d_item__item_func_collectmap07();
undefined d_item__item_func_collectmap06();
undefined d_item__item_func_collectmap05();
undefined d_item__item_func_collectmap04();
undefined d_item__item_func_collectmap03();
undefined d_item__item_func_collectmap02();
undefined d_item__item_func_collectmap01();
undefined d_item__item_func_noentry();
undefined d_item__item_getcheck_func_heart();
undefined d_item__item_getcheck_func_green_rupee();
undefined d_item__item_getcheck_func_blue_rupee();
undefined d_item__item_getcheck_func_white_rupee();
undefined d_item__item_getcheck_func_red_rupee();
undefined d_item__item_getcheck_func_purple_rupee();
undefined d_item__item_getcheck_func_silver_rupee();
undefined d_item__item_getcheck_func_kakera_heart();
undefined d_item__item_getcheck_func_utuwa_heart();
undefined d_item__item_getcheck_func_s_magic();
undefined d_item__item_getcheck_func_l_magic();
undefined d_item__item_getcheck_func_bomb_5();
undefined d_item__item_getcheck_func_bomb_10();
undefined d_item__item_getcheck_func_bomb_20();
undefined d_item__item_getcheck_func_bomb_30();
undefined d_item__item_getcheck_func_noentry();
undefined d_item__item_getcheck_func_arrow_10();
undefined d_item__item_getcheck_func_arrow_20();
undefined d_item__item_getcheck_func_arrow_30();
undefined d_item__item_getcheck_func_small_key();
undefined d_item__item_getcheck_func_recover_faily();
undefined d_item__item_getcheck_func_triple_heart();
undefined d_item__item_getcheck_func_pendant();
undefined d_item__item_getcheck_func_telescope();
undefined d_item__item_getcheck_func_tncl_whitsl();
undefined d_item__item_getcheck_func_wind_tact();
undefined d_item__item_getcheck_func_camera();
undefined d_item__item_getcheck_func_emono_bag();
undefined d_item__item_getcheck_func_rope();
undefined d_item__item_getcheck_func_camera2();
undefined d_item__item_getcheck_func_bow();
undefined d_item__item_getcheck_func_pwr_groove();
undefined d_item__item_getcheck_func_hvy_boots();
undefined d_item__item_getcheck_func_drgn_shield();
undefined d_item__item_getcheck_func_water_boots();
undefined d_item__item_getcheck_func_esa_bag();
undefined d_item__item_getcheck_func_boomerang();
undefined d_item__item_getcheck_func_bare_hand();
undefined d_item__item_getcheck_func_hookshot();
undefined d_item__item_getcheck_func_warasibe_bag();
undefined d_item__item_getcheck_func_bomb_bag();
undefined d_item__item_getcheck_func_hummer();
undefined d_item__item_getcheck_func_deku_leaf();
undefined d_item__item_getcheck_func_magic_arrow();
undefined d_item__item_getcheck_func_light_arrow();
undefined d_item__item_getcheck_func_sword();
undefined d_item__item_getcheck_func_master_sword();
undefined d_item__item_getcheck_func_lv3_sword();
undefined d_item__item_getcheck_func_shield();
undefined d_item__item_getcheck_func_mirror_shield();
undefined d_item__item_getcheck_func_master_sword_ex();
undefined d_item__item_getcheck_func_pirates_omamori();
undefined d_item__item_getcheck_func_heros_omamori();
undefined d_item__item_getcheck_func_grass_ball();
undefined d_item__item_getcheck_func_skull_necklace();
undefined d_item__item_getcheck_func_bokobaba_seed();
undefined d_item__item_getcheck_func_golden_feather();
undefined d_item__item_getcheck_func_boko_belt();
undefined d_item__item_getcheck_func_red_jerry();
undefined d_item__item_getcheck_func_green_jerry();
undefined d_item__item_getcheck_func_blue_jerry();
undefined d_item__item_getcheck_func_map();
undefined d_item__item_getcheck_func_compass();
undefined d_item__item_getcheck_func_boss_key();
undefined d_item__item_getcheck_func_empty_bship();
undefined d_item__item_getcheck_func_empty_bottle();
undefined d_item__item_getcheck_func_red_bottle();
undefined d_item__item_getcheck_func_green_bottle();
undefined d_item__item_getcheck_func_blue_bottle();
undefined d_item__item_getcheck_func_bottleship();
undefined d_item__item_getcheck_func_bin_in_bottleship();
undefined d_item__item_getcheck_func_bin_in_water();
undefined d_item__item_getcheck_func_bin();
undefined d_item__item_getcheck_func_triforce1();
undefined d_item__item_getcheck_func_triforce2();
undefined d_item__item_getcheck_func_triforce3();
undefined d_item__item_getcheck_func_triforce4();
undefined d_item__item_getcheck_func_triforce5();
undefined d_item__item_getcheck_func_triforce6();
undefined d_item__item_getcheck_func_triforce7();
undefined d_item__item_getcheck_func_triforce8();
undefined d_item__item_getcheck_func_pearl1();
undefined d_item__item_getcheck_func_pearl2();
undefined d_item__item_getcheck_func_pearl3();
undefined d_item__item_getcheck_func_tact_song1();
undefined d_item__item_getcheck_func_tact_song2();
undefined d_item__item_getcheck_func_tact_song3();
undefined d_item__item_getcheck_func_tact_song4();
undefined d_item__item_getcheck_func_tact_song5();
undefined d_item__item_getcheck_func_tact_song6();
undefined d_item__item_getcheck_func_normal_sail();
undefined d_item__item_getcheck_func_zora_sail();
undefined d_item__item_getcheck_func_tincle_sail();
undefined d_item__item_getcheck_func_sail();
undefined d_item__item_getcheck_func_bird_esa_5();
undefined d_item__item_getcheck_func_animal_esa();
undefined d_item__item_getcheck_func_esa1();
undefined d_item__item_getcheck_func_esa2();
undefined d_item__item_getcheck_func_esa3();
undefined d_item__item_getcheck_func_esa4();
undefined d_item__item_getcheck_func_esa5();
undefined d_item__item_getcheck_func_magic_bean();
undefined d_item__item_getcheck_func_bird_esa_10();
undefined d_item__item_getcheck_func_flower_1();
undefined d_item__item_getcheck_func_flower_2();
undefined d_item__item_getcheck_func_flower_3();
undefined d_item__item_getcheck_func_heros_flag();
undefined d_item__item_getcheck_func_tairyo_flag();
undefined d_item__item_getcheck_func_sales_flag();
undefined d_item__item_getcheck_func_wind_flag();
undefined d_item__item_getcheck_func_red_flag();
undefined d_item__item_getcheck_func_fossil_head();
undefined d_item__item_getcheck_func_water_statue();
undefined d_item__item_getcheck_func_postman_statue();
undefined d_item__item_getcheck_func_president_statue();
undefined d_item__item_getcheck_func_letter00();
undefined d_item__item_getcheck_func_magic_seed();
undefined d_item__item_getcheck_func_magys_letter();
undefined d_item__item_getcheck_func_mo_letter();
undefined d_item__item_getcheck_func_cottage_paper();
undefined d_item__item_getcheck_func_kaisen_present1();
undefined d_item__item_getcheck_func_kaisen_present2();
undefined d_item__item_getcheck_func_salvage_item1();
undefined d_item__item_getcheck_func_salvage_item2();
undefined d_item__item_getcheck_func_salvage_item3();
undefined d_item__item_getcheck_func_xxx_039();
undefined d_item__item_getcheck_func_lithograph1();
undefined d_item__item_getcheck_func_lithograph2();
undefined d_item__item_getcheck_func_lithograph3();
undefined d_item__item_getcheck_func_lithograph4();
undefined d_item__item_getcheck_func_lithograph5();
undefined d_item__item_getcheck_func_lithograph6();
undefined d_item__item_getcheck_func_lithograph7();
undefined d_item__item_getcheck_func_lithograph8();
undefined d_item__item_getcheck_func_lithograph9();
undefined d_item__item_getcheck_func_lithograph10();
undefined d_item__item_getcheck_func_lithograph11();
undefined d_item__item_getcheck_func_lithograph12();
undefined d_item__item_getcheck_func_lithograph13();
undefined d_item__item_getcheck_func_lithograph14();
undefined d_item__item_getcheck_func_lithograph15();
undefined d_item__item_getcheck_func_lithograph16();
undefined d_item__getRotenItemNumInBag();
undefined d_item__isDaizaItem();
bool d_item__isBomb(dItem_data__ItemNo itemNo);
bool d_item__isArrow(dItem_data__ItemNo itemNo);
undefined d_item__isEmono();
undefined d_item__isEsa();
undefined d_item__isRupee(byte param_1);
undefined d_item__isLimitedItem();
undefined d_item__isNonSavedEmono();
undefined d_item__isUseClothPacket();
undefined d_item__isTriforce();
bool d_item__isHeart(dItem_data__ItemNo itemNo);
undefined d_item__getItemNoByLife();
undefined d_item__check_itemno();
undefined d_item__getEmonoItemFromLifeBallTable();
undefined d_item__getItemFromLifeBallTableWithoutEmono();
void dDlst_2DNumber_c__dDlst_2DNumber_c(dDlst_2DNumber_c * this);
void dDlst_2DNumber_c__dDlst_2DNumber_c_destructor(dDlst_2DNumber_c * this);
int dDlst_2DNumber_c__init(dDlst_2DNumber_c * this, EVP_PKEY_CTX * ctx);
undefined dDlst_2DNumber_c__draw(dDlst_2DNumber_c * this);
int dDlst_2DMinigame_c__init(dDlst_2DMinigame_c * this, EVP_PKEY_CTX * ctx);
undefined dDlst_2DMinigame_c__draw(dDlst_2DMinigame_c * this);
int dDlst_2DBattery_c__init(dDlst_2DBattery_c * this, EVP_PKEY_CTX * ctx);
undefined dDlst_2DBattery_c__setRotate(dDlst_2DBattery_c * this, float param_1);
undefined dDlst_2DBattery_c__draw(dDlst_2DBattery_c * this);
int dDlst_2DObject_c__init(dDlst_2DObject_c * this, EVP_PKEY_CTX * ctx);
undefined dDlst_2DObject_c__draw(dDlst_2DObject_c * this);
undefined dDlst_2DOutFont_c__initial(dDlst_2DOutFont_c * this);
undefined dDlst_2DOutFont_c__setPane(dDlst_2DOutFont_c * this, JUTFont * param_1, fopMsgM_pane_class * param_2, fopMsgM_pane_class * param_3, fopMsgM_pane_class * param_4, fopMsgM_pane_class * param_5);
undefined dDlst_2DOutFont_c__setPaneEx(dDlst_2DOutFont_c * this, JUTFont * param_1, fopMsgM_pane_class * param_2, fopMsgM_pane_class * param_3, fopMsgM_pane_class * param_4, fopMsgM_pane_class * param_5, char * param_6);
undefined dDlst_2DOutFont_c__setRuby(dDlst_2DOutFont_c * this, JUTFont * param_1, fopMsgM_pane_class * param_2);
undefined dDlst_2DOutFont_c__setRubyEx(dDlst_2DOutFont_c * this, JUTFont * param_1, fopMsgM_pane_class * param_2, char * param_3);
undefined dDlst_2DOutFont_c__charWidth(dDlst_2DOutFont_c * this, int param_1);
undefined dDlst_2DOutFont_c__rubyCharWidth(dDlst_2DOutFont_c * this, int param_1);
undefined dDlst_2DOutFont_c__iconset(dDlst_2DOutFont_c * this, int param_1, char * * param_2);
undefined dDlst_2DOutFont_c__messageSet(dDlst_2DOutFont_c * this, ulong param_1);
undefined dDlst_2DOutFont_c__outFontStickAnime1(dDlst_2DOutFont_c * this, uchar param_1);
undefined dDlst_2DOutFont_c__outFontStickAnime2(dDlst_2DOutFont_c * this, uchar param_1, uchar param_2);
undefined dDlst_2DOutFont_c__outFontStickAnime3(dDlst_2DOutFont_c * this, uchar param_1, uchar param_2);
undefined dDlst_2DOutFont_c__outFontStickAnimePiece(dDlst_2DOutFont_c * this, uchar param_1, uchar param_2);
undefined dDlst_2DOutFont_c__move(dDlst_2DOutFont_c * this);
undefined dDlst_2DOutFont_c__setAlpha(dDlst_2DOutFont_c * this, uchar param_1);
void dDlst_2DObject_c__dDlst_2DObject_c_destructor(dDlst_2DObject_c * this);
void dDlst_2DBattery_c__dDlst_2DBattery_c_destructor(dDlst_2DBattery_c * this);
void dDlst_2DMinigame_c__dDlst_2DMinigame_c_destructor(dDlst_2DMinigame_c * this);
undefined daNpc_Cb1_c__getMaxFlyingTimer(daNpc_Cb1_c * this);
undefined daNpc_Mk_Static_c__aroundWalk(daNpc_Mk_Static_c * this, fopAc_ac_c * param_1, fopAc_ac_c * param_2, uchar param_3);
undefined daNpc_Mk_Static_c__turnPath(daNpc_Mk_Static_c * this, fopAc_ac_c * param_1, dNpc_PathRun_c * param_2, uchar param_3);
undefined daNpc_Mk_Static_c__chkPath(daNpc_Mk_Static_c * this, fopAc_ac_c * param_1, dNpc_PathRun_c * param_2, uchar param_3);
undefined daNpc_Mk_Static_c__walkPath(daNpc_Mk_Static_c * this, fopAc_ac_c * param_1, dNpc_PathRun_c * param_2, uchar param_3);
undefined daNpc_Mk_Static_c__getSpeedF(daNpc_Mk_Static_c * this, float param_1, float param_2);
int daNpc_Mk_Static_c__init(daNpc_Mk_Static_c * this, EVP_PKEY_CTX * ctx);
undefined daNpc_Mk_Static_c__goFarLink_3(daNpc_Mk_Static_c * this, fopAc_ac_c * param_1, dNpc_PathRun_c * param_2);
undefined daNpc_Mk_Static_c__goFarLink_2(daNpc_Mk_Static_c * this, fopAc_ac_c * param_1, dNpc_PathRun_c * param_2);
undefined daNpc_Mk_Static_c__runaway_com2(daNpc_Mk_Static_c * this, dNpc_PathRun_c * param_1, uchar param_2);
undefined daNpc_Mk_Static_c__runAwayProc(daNpc_Mk_Static_c * this, fopAc_ac_c * param_1, dNpc_PathRun_c * param_2, dCcD_Cyl * param_3, short * param_4);
undefined daNpc_Mk_Static_c__chkGameSet(daNpc_Mk_Static_c * this);
undefined daNpc_Mk_Static_c__setRndPathPos(daNpc_Mk_Static_c * this, fopAc_ac_c * param_1, dNpc_PathRun_c * param_2);
undefined daNpc_Mk_Static_c__chkPointPass(daNpc_Mk_Static_c * this, cXyz * param_1, cXyz * param_2, cXyz * param_3);
int dSalvage_control_c__init(dSalvage_control_c * this, EVP_PKEY_CTX * ctx);
undefined dSalvage_control_c__init_end(dSalvage_control_c * this);
undefined dSalvage_control_c__entry(dSalvage_control_c * this, fopAc_ac_c * param_1, JPABaseEmitter * param_2);
undefined dSalvage_control_c__init_room(dSalvage_control_c * this, char param_1);
undefined dSalvage_control_c__init_one(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__init_one_sub(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__calcDistanceXZ(dSalvage_control_c * this);
undefined dSalvage_control_c__getPos(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__getPosP(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__getScale(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__getR(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__getH(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__getRoomNo(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__getItemNo(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__getSwitchNo(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__getSaveNo(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__getType(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__getKind(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__getDistance(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__getAlphaPtr(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__getDrawMode(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__checkRegist(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__checkUsed(dSalvage_control_c * this, int param_1);
undefined dSalvage_control_c__setPos(dSalvage_control_c * this, int param_1, cXyz * param_2);
undefined dSalvage_control_c__setFlag(dSalvage_control_c * this, int param_1, uchar param_2);
undefined dSalvage_control_c__clrFlag(dSalvage_control_c * this, int param_1, uchar param_2);
undefined dSalvage_control_c__setNowAlpha(dSalvage_control_c * this, int param_1, uchar param_2);
undefined dSalvage_control_c__setDrawMode(dSalvage_control_c * this, int param_1, int param_2);
int d_snap__dSnap_PhotoIndex2TableIndex(int param_1);
undefined d_snap__dSnap_GetFigRoomId();
void dSnap_Obj__dSnap_Obj(dSnap_Obj * this);
undefined dSnap_Obj__CalcArea2D(dSnap_Obj * this);
undefined dSnap_Obj__draw(dSnap_Obj * this);
undefined dSnap_Obj__SetGeo(dSnap_Obj * this, cXyz * param_1, float param_2, float param_3, short param_4);
undefined dSnap_Obj__SetGeoSph(dSnap_Obj * this, Vec * param_1, float param_2);
undefined dSnap_Obj__SetInf(dSnap_Obj * this, uchar param_1, fopAc_ac_c * param_2, uchar param_3, uchar param_4, short param_5);
undefined dSnap_Obj__SetAreaClear(dSnap_Obj * this);
undefined dSnap_Obj__SetArea(dSnap_Obj * this, short param_1, short param_2);
undefined dSnap_Obj__ChkPhoto(dSnap_Obj * this, int param_1);
undefined dSnap_Obj__ChkSuccess(dSnap_Obj * this, long param_1, float param_2);
undefined dSnap_Obj__ChkCamCull(dSnap_Obj * this);
undefined dSnap_RegistObjElm__Init(dSnap_RegistObjElm * this);
undefined dSnap_RegistObjElm__Regist(dSnap_RegistObjElm * this, dSnap_Obj * param_1);
undefined dSnap_packet__Create(dSnap_packet * this);
undefined dSnap_packet__ReleaseShutter(dSnap_packet * this);
undefined dSnap_packet__ChkReleaseShutter(dSnap_packet * this);
undefined dSnap_packet__Execute(dSnap_packet * this);
undefined dSnap_packet__Regist(dSnap_packet * this, dSnap_Obj * param_1);
undefined d_snap__dSnap_MatDl();
undefined d_snap__dSnap_AlphaClearDL();
undefined dSnap_packet__draw(dSnap_packet * this);
undefined dSnap_packet__ClearAlphaBuffer(dSnap_packet * this);
undefined dSnap_packet__Judge(dSnap_packet * this);
undefined dSnap_packet__FindPhoto(dSnap_packet * this, int param_1, int param_2);
undefined dSnap_packet__JudgePost(dSnap_packet * this);
undefined dSnap_packet__JudgeBikutsuki(dSnap_packet * this);
undefined dSnap_packet__JudgeCoupleLook(dSnap_packet * this);
undefined dSnap_packet__JudgeGF(dSnap_packet * this);
undefined dSnap_packet__JudgeGenzo(dSnap_packet * this);
undefined dSnap_packet__JudgeObasan4(dSnap_packet * this);
undefined dSnap_packet__JudgeTestM(dSnap_packet * this);
undefined dSnap_packet__JudgeGene(dSnap_packet * this);
undefined dSnap_packet__JudgeFigure(dSnap_packet * this, int param_1);
undefined dSnap_packet__SetResult(dSnap_packet * this);
undefined d_snap__dSnap_Create();
undefined d_snap__dSnap_ReleaseShutter();
undefined d_snap__dSnap_Execute();
undefined d_snap__dSnap_GetResult();
undefined d_snap__dSnap_GetResultDetail();
undefined d_snap__dSnap_RegistSnapObj();
void d_snap__dSnap_RegistFig(double param_1, double param_2, double param_3, byte param_4, fopAc_ac_c * param_5);
// void d_snap__dSnap_RegistFig(byte param_1, fopAc_ac_c * param_2, cXyz * param_3, short param_4, float param_5, float param_6, float param_7);
undefined d_snap__dSnap_DebugDraw();
undefined d_snap__dSnap_Delete();
void dSnap_packet__dSnap_packet_destructor(dSnap_packet * this);
void dSnap_RegistObjElm__dSnap_RegistObjElm_destructor(dSnap_RegistObjElm * this);
undefined d_snap____sinit_d_snap_cpp();
void dSnap_RegistObjElm__dSnap_RegistObjElm(dSnap_RegistObjElm * this);
undefined dPointWind_c__set_pwind_init(dPointWind_c * this, cM3dGCpsS * param_1);
undefined dPointWind_c__set_pwind_move(dPointWind_c * this);
undefined dPointWind_c__set_pwind_delete(dPointWind_c * this);
void daAgb_HIO_c__daAgb_HIO_c(daAgb_HIO_c * this);
void mDoHIO_entry_c__mDoHIO_entry_c_destructor(mDoHIO_entry_c * this);
int dMsgCtrl_c__init(dMsgCtrl_c * this, EVP_PKEY_CTX * ctx);
undefined dMsgCtrl_c__execute(dMsgCtrl_c * this);
undefined d_a_agb__sjis2chrNo();
undefined daAgb_c__NameConv(daAgb_c * this);
undefined daAgb_c__uploadInitCheck(daAgb_c * this);
undefined daAgb_c__uploadPortCheckWait(daAgb_c * this);
undefined daAgb_c__uploadSelect(daAgb_c * this);
undefined daAgb_c__uploadJoyboot1(daAgb_c * this);
undefined daAgb_c__uploadJoyboot2(daAgb_c * this);
undefined daAgb_c__uploadMessageLoad(daAgb_c * this);
undefined daAgb_c__uploadMessageLoad2(daAgb_c * this);
undefined daAgb_c__uploadConnect(daAgb_c * this);
undefined daAgb_c__uploadMessageSend(daAgb_c * this);
undefined daAgb_c__uploadRetryWait(daAgb_c * this);
undefined daAgb_c__uploadMsgEndWait(daAgb_c * this);
undefined daAgb_c__uploadMsgEndTimer(daAgb_c * this);
undefined daAgb_c__modeLoad(daAgb_c * this);
undefined daAgb_c__modeLookAttention(daAgb_c * this);
undefined daAgb_c__DungeonNoGet(daAgb_c * this);
undefined daAgb_c__MapNoSet(daAgb_c * this, uchar param_1, uchar param_2, uchar param_3);
undefined daAgb_c__onFree(daAgb_c * this);
undefined daAgb_c__onHold(daAgb_c * this);
undefined daAgb_c__offHold(daAgb_c * this);
undefined daAgb_c__resetCursor(daAgb_c * this, bool param_1);
undefined daAgb_c__FlashCheck(daAgb_c * this);
undefined daAgb_c__FlagsRecv(daAgb_c * this);
undefined daAgb_c__SwitchOn(daAgb_c * this);
undefined daAgb_c__GbaItemUse(daAgb_c * this);
undefined daAgb_c__Shopping(daAgb_c * this);
undefined daAgb_c__FlagsSend(daAgb_c * this, ulong param_1);
undefined daAgb_c__CursorMove(daAgb_c * this, fopAc_ac_c * param_1, ulong param_2);
void dBgS_LinkLinChk__dBgS_LinkLinChk_destructor(dBgS_LinkLinChk * this);
undefined daAgb_c__modeMove(daAgb_c * this);
undefined daAgb_c__modeDelete(daAgb_c * this);
undefined d_a_agb__daAgb_Execute();
undefined d_a_agb__daAgb_Draw();
// undefined J3DTevBlock__setTevColor(J3DTevBlock * this, ulong param_1, J3DGXColorS10 * param_2);
undefined d_a_agb__daAgb_IsDelete();
undefined d_a_agb__daAgb_Delete();
undefined d_a_agb__createHeap_CB();
undefined daAgb_c__createHeap(daAgb_c * this);
undefined d_a_agb__daAgb_Create();
void daAgb_c__daAgb_c(daAgb_c * this);
void dBgS_LinkAcch__dBgS_LinkAcch_destructor(dBgS_LinkAcch * this);
void dBgS_LinkCrrPos__dBgS_LinkCrrPos_destructor(dBgS_LinkCrrPos * this);
void dBgS_CrrPos__dBgS_CrrPos_destructor(dBgS_CrrPos * this);
void dBgS_LinkCrrPos__dBgS_LinkCrrPos(dBgS_LinkCrrPos * this);
void dBgS_CrrPos__dBgS_CrrPos(dBgS_CrrPos * this);
void daAgb_HIO_c__daAgb_HIO_c_destructor(daAgb_HIO_c * this);
undefined d_a_agb____sinit_d_a_agb_cpp();
void dMsgCtrl_c__dMsgCtrl_c_destructor(dMsgCtrl_c * this);
// void dBgS_LinkLinChk__dBgS_LinkLinChk_destructor(dBgS_LinkLinChk * this);
// void dBgS_LinkLinChk__dBgS_LinkLinChk_destructor(dBgS_LinkLinChk * this);
// void dBgS_LinkLinChk__dBgS_LinkLinChk_destructor(dBgS_LinkLinChk * this);
// void dBgS_LinkAcch__dBgS_LinkAcch_destructor(dBgS_LinkAcch * this);
// void dBgS_LinkAcch__dBgS_LinkAcch_destructor(dBgS_LinkAcch * this);
// void dBgS_LinkCrrPos__dBgS_LinkCrrPos_destructor(dBgS_LinkCrrPos * this);
// void dBgS_LinkCrrPos__dBgS_LinkCrrPos_destructor(dBgS_LinkCrrPos * this);
// void dBgS_LinkCrrPos__dBgS_LinkCrrPos_destructor(dBgS_LinkCrrPos * this);
// void dBgS_CrrPos__dBgS_CrrPos_destructor(dBgS_CrrPos * this);
// void dBgS_CrrPos__dBgS_CrrPos_destructor(dBgS_CrrPos * this);
// void dBgS_CrrPos__dBgS_CrrPos_destructor(dBgS_CrrPos * this);
undefined daPy_py_c__checkPlayerFly(daPy_py_c * this);
undefined d_a_arrow__createHeap_CB();
undefined daArrow_c___createHeap(daArrow_c * this);
undefined d_a_arrow__atHit_CB();
undefined daArrow_c___atHit(daArrow_c * this, dCcD_GObjInf * param_1, fopAc_ac_c * param_2, dCcD_GObjInf * param_3);
undefined daArrow_c__checkCreater(daArrow_c * this);
undefined daArrow_c__setLightEffect(daArrow_c * this);
undefined daArrow_c__setBlur(daArrow_c * this);
undefined daArrow_c__createBlur(daArrow_c * this);
undefined daArrow_c__setArrowShootSe(daArrow_c * this);
undefined daArrow_c__setDrawShapeMaterial(daArrow_c * this);
undefined daArrow_c__arrowShooting(daArrow_c * this);
undefined daArrow_c__arrowUseMp(daArrow_c * this);
undefined daArrow_c__ShieldReflect(daArrow_c * this);
undefined daArrow_c__check_water_in(daArrow_c * this);
undefined daArrow_c__changeArrowMp(daArrow_c * this);
undefined daArrow_c__changeArrowType(daArrow_c * this);
undefined daArrow_c__changeArrowTypeNotReady(daArrow_c * this);
undefined daArrow_c__setRoomInfo(daArrow_c * this);
undefined daArrow_c__setKeepMatrix(daArrow_c * this);
undefined daArrow_c__setStopActorMatrix(daArrow_c * this);
undefined daArrow_c__procWait(daArrow_c * this);
undefined daArrow_c__procMove(daArrow_c * this);
undefined daArrow_c__procReturn(daArrow_c * this);
undefined daArrow_c__procStop_BG(daArrow_c * this);
undefined daArrow_c__procStop_Actor(daArrow_c * this);
undefined daArrow_c__procWater(daArrow_c * this);
undefined daArrow_c__checkRestMp(daArrow_c * this);
undefined daArrow_c__setTypeByPlayer(daArrow_c * this);
undefined daArrow_c__createInit(daArrow_c * this);
undefined daArrow_c___execute(daArrow_c * this);
undefined daArrow_c___draw(daArrow_c * this);
undefined daArrow_c___create(daArrow_c * this);
void daArrow_c__daArrow_c(daArrow_c * this);
void dCcD_Sph__dCcD_Sph_destructor(dCcD_Sph * this);
void cCcD_SphAttr__cCcD_SphAttr_destructor(cCcD_SphAttr * this);
void cM3dGSph__cM3dGSph_destructor(cM3dGSph * this);
void dCcD_Cps__dCcD_Cps_destructor(dCcD_Cps * this);
void cCcD_Stts__cCcD_Stts_destructor(cCcD_Stts * this);
void dBgS_ArrowLinChk__dBgS_ArrowLinChk_destructor(dBgS_ArrowLinChk * this);
undefined daArrow_c___delete(daArrow_c * this);
undefined d_a_arrow__daArrowCreate();
undefined d_a_arrow__daArrowDelete();
undefined d_a_arrow__daArrowExecute();
undefined d_a_arrow__daArrowDraw();
undefined d_a_arrow__daArrowIsDelete();
undefined dCcD_Sph__GetShapeAttr(dCcD_Sph * this);
// undefined cCcD_SphAttr__GetCoCP(cCcD_SphAttr * this);
undefined cCcD_SphAttr__CrossAtTg(cCcD_SphAttr * this, cCcD_AabAttr * param_1, cXyz * param_2);
// undefined cCcD_SphAttr__CrossAtTg(cCcD_SphAttr * this, cCcD_PntAttr * param_1, cXyz * param_2);
// undefined cCcD_SphAttr__CrossAtTg(cCcD_SphAttr * this, cCcD_ShapeAttr * param_1, cXyz * param_2);
undefined cCcD_SphAttr__CrossCo(cCcD_SphAttr * this, cCcD_AabAttr * param_1, float * param_2);
// undefined cCcD_SphAttr__CrossCo(cCcD_SphAttr * this, cCcD_TriAttr * param_1, float * param_2);
// undefined cCcD_SphAttr__CrossCo(cCcD_SphAttr * this, cCcD_PntAttr * param_1, float * param_2);
// undefined cCcD_SphAttr__CrossCo(cCcD_SphAttr * this, cCcD_ShapeAttr * param_1, float * param_2);
undefined dCcD_Cps__GetShapeAttr(dCcD_Cps * this);
undefined cCcD_CpsAttr__CrossAtTg(cCcD_CpsAttr * this, cCcD_AabAttr * param_1, cXyz * param_2);
// undefined cCcD_CpsAttr__CrossAtTg(cCcD_CpsAttr * this, cCcD_PntAttr * param_1, cXyz * param_2);
// undefined cCcD_CpsAttr__CrossAtTg(cCcD_CpsAttr * this, cCcD_ShapeAttr * param_1, cXyz * param_2);
undefined cCcD_CpsAttr__CrossCo(cCcD_CpsAttr * this, cCcD_AabAttr * param_1, float * param_2);
// undefined cCcD_CpsAttr__CrossCo(cCcD_CpsAttr * this, cCcD_TriAttr * param_1, float * param_2);
// undefined cCcD_CpsAttr__CrossCo(cCcD_CpsAttr * this, cCcD_PntAttr * param_1, float * param_2);
// undefined cCcD_CpsAttr__CrossCo(cCcD_CpsAttr * this, cCcD_ShapeAttr * param_1, float * param_2);
undefined d_a_arrow__cLib_calcTimer();
// void dBgS_ArrowLinChk__dBgS_ArrowLinChk_destructor(dBgS_ArrowLinChk * this);
// void dBgS_ArrowLinChk__dBgS_ArrowLinChk_destructor(dBgS_ArrowLinChk * this);
// void dBgS_ArrowLinChk__dBgS_ArrowLinChk_destructor(dBgS_ArrowLinChk * this);
// void dCcD_Cps__dCcD_Cps_destructor(dCcD_Cps * this);
// void dCcD_Cps__dCcD_Cps_destructor(dCcD_Cps * this);
// void dCcD_Sph__dCcD_Sph_destructor(dCcD_Sph * this);
// void dCcD_Sph__dCcD_Sph_destructor(dCcD_Sph * this);
undefined daBg_c__setArcName(daBg_c * this);
undefined d_a_bg__createMatAnm();
undefined daBg_btkAnm_c__create(daBg_btkAnm_c * this, J3DModelData * param_1, J3DAnmTextureSRTKey * param_2);
undefined daBg_btkAnm_c__entry(daBg_btkAnm_c * this, J3DModelData * param_1);
undefined daBg_btkAnm_c__play(daBg_btkAnm_c * this);
undefined daBg_brkAnm_c__create(daBg_brkAnm_c * this, J3DModelData * param_1, J3DAnmTevRegKey * param_2);
undefined daBg_brkAnm_c__entry(daBg_brkAnm_c * this, J3DModelData * param_1);
undefined daBg_brkAnm_c__play(daBg_brkAnm_c * this);
undefined d_a_bg__checkCreateHeap();
undefined4 daBg_c__createHeap(daBg_c * this);
void daBg_c__daBg_c_destructor(daBg_c * this);
undefined d_a_bg__daBg_Draw(daBg_c * param_1);
undefined d_a_bg__daBg_Execute(daBg_c * param_1);
undefined d_a_bg__daBg_IsDelete();
undefined d_a_bg__daBg_Delete();
undefined d_a_bg__daBg_Create();
undefined daBg_c__create(daBg_c * this);
undefined _unnamed_d_a_bomb_cpp___chk_attrState(daBomb_c * param_1, AttrSt_e param_2);
undefined daBomb_fuseSmokeEcallBack__executeAfter(daBomb_fuseSmokeEcallBack * this, JPABaseEmitter * param_1);
undefined daBomb_fuseSparksEcallBack__execute(daBomb_fuseSparksEcallBack * this, JPABaseEmitter * param_1);
undefined daBomb_c__draw_norm(daBomb_c * this);
undefined daBomb_c__draw_nut(daBomb_c * this);
undefined daBomb_c__draw(daBomb_c * this);
undefined d_a_bomb__daBomb_Draw();
undefined daBomb_c__checkExplodeCc_norm(daBomb_c * this);
undefined daBomb_c__checkExplodeCc_nut(daBomb_c * this);
undefined daBomb_c__checkExplodeCc_cannon(daBomb_c * this);
undefined daBomb_c__checkExplodeCc(daBomb_c * this);
undefined daBomb_c__checkExplodeTimer(daBomb_c * this);
undefined daBomb_c__checkExplode(daBomb_c * this);
undefined daBomb_c__checkExplodeBg_norm(daBomb_c * this);
undefined daBomb_c__checkExplodeBg_nut(daBomb_c * this);
undefined daBomb_c__checkExplodeBg_cannon(daBomb_c * this);
undefined daBomb_c__checkExplodeBg(daBomb_c * this);
undefined daBomb_c__water_tention(daBomb_c * this);
undefined daBomb_c__posMoveF(daBomb_c * this);
undefined daBomb_c__bgCrrPos(daBomb_c * this);
undefined daBomb_c__bgCrrPos_lava(daBomb_c * this);
undefined daBomb_c__bgCrrPos_water(daBomb_c * this);
undefined daBomb_c__chk_water_land(daBomb_c * this);
undefined daBomb_c__chk_water_in(daBomb_c * this);
undefined daBomb_c__chk_water_sink(daBomb_c * this);
undefined daBomb_c__chk_lava_hit(daBomb_c * this);
undefined daBomb_c__chk_dead_zone(daBomb_c * this);
undefined daBomb_c__bound(daBomb_c * this, float param_1);
undefined daBomb_c__set_real_shadow_flag(daBomb_c * this);
undefined daBomb_c__setRoomInfo(daBomb_c * this);
undefined daBomb_c__makeFireEffect(daBomb_c * this, cXyz * param_1, csXyz * param_2);
undefined daBomb_c__makeWaterEffect(daBomb_c * this);
undefined daBomb_c__setFuseEffect(daBomb_c * this);
undefined daBomb_c__eff_explode_normal(daBomb_c * this, csXyz * param_1);
undefined daBomb_c__eff_explode_cheap(daBomb_c * this, csXyz * param_1);
undefined daBomb_c__eff_explode(daBomb_c * this);
undefined daBomb_c__procExplode_init(daBomb_c * this);
undefined daBomb_c__procExplode(daBomb_c * this);
undefined daBomb_c__procCarry_init(daBomb_c * this);
undefined daBomb_c__procCarry(daBomb_c * this);
undefined daBomb_c__procWait_init(daBomb_c * this);
undefined daBomb_c__procWait(daBomb_c * this);
undefined daBomb_c__waitState_cannon(daBomb_c * this);
undefined daBomb_c__waitState_bomtyu(daBomb_c * this);
undefined daBomb_c__procSink(daBomb_c * this);
undefined daBomb_c__execute(daBomb_c * this);
undefined d_a_bomb__daBomb_Execute();
undefined daBomb_c__set_wind_vec(daBomb_c * this);
undefined daBomb_c__anm_play_nut(daBomb_c * this);
undefined daBomb_c__set_mtx(daBomb_c * this);
undefined daBomb_c__init_mtx(daBomb_c * this);
undefined daBomb_c__se_cannon_fly_set(daBomb_c * this);
undefined daBomb_c__se_cannon_fly_stop(daBomb_c * this);
undefined daBomb_c__eff_water_splash(daBomb_c * this);
undefined d_a_bomb__daBomb_IsDelete();
undefined daBomb_c__bombDelete(daBomb_c * this);
undefined d_a_bomb__daBomb_Delete();
undefined daBomb_c__createHeap(daBomb_c * this);
undefined d_a_bomb__daBomb_createHeap();
undefined daBomb_c__create(daBomb_c * this);
void daBomb_c__daBomb_c(daBomb_c * this);
void LIGHT_INFLUENCE__LIGHT_INFLUENCE_destructor(LIGHT_INFLUENCE * this);
undefined d_a_bomb__daBomb_Create();
undefined daBomb_c__create_init(daBomb_c * this);
void daBomb_fuseSparksEcallBack__daBomb_fuseSparksEcallBack_destructor(daBomb_fuseSparksEcallBack * this);
void daBomb_fuseSmokeEcallBack__daBomb_fuseSmokeEcallBack_destructor(daBomb_fuseSmokeEcallBack * this);
void dBgS_BombAcch__dBgS_BombAcch_destructor(dBgS_BombAcch * this);
void mDoExt_bckAnm__mDoExt_bckAnm_destructor(mDoExt_bckAnm * this);
undefined daBomb_fuseSparksEcallBack__draw(daBomb_fuseSparksEcallBack * this, JPABaseEmitter * param_1);
undefined daBomb_fuseSparksEcallBack__setup(daBomb_fuseSparksEcallBack * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
undefined daBomb_fuseSmokeEcallBack__execute(daBomb_fuseSmokeEcallBack * this, JPABaseEmitter * param_1);
undefined daBomb_fuseSmokeEcallBack__draw(daBomb_fuseSmokeEcallBack * this, JPABaseEmitter * param_1);
undefined daBomb_fuseSmokeEcallBack__setup(daBomb_fuseSmokeEcallBack * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
// void dBgS_BombAcch__dBgS_BombAcch_destructor(dBgS_BombAcch * this);
// void dBgS_BombAcch__dBgS_BombAcch_destructor(dBgS_BombAcch * this);
undefined daBomb2__Env_c__set(Env_c * this, cXyz * param_1);
undefined daBomb2__Env_c__clean(Env_c * this);
undefined daBomb2__Env_c__is_end(Env_c * this);
undefined daBomb2__Env_c__proc(Env_c * this, cXyz * param_1);
undefined daBomb2__FuseSmokeCB_c__setOldPosP(FuseSmokeCB_c * this, cXyz * param_1, cXyz * param_2);
undefined daBomb2__FuseSmokeCB_c__deleteCallBack(FuseSmokeCB_c * this);
undefined daBomb2__FuseSmokeCB_c__execute(FuseSmokeCB_c * this, JPABaseEmitter * param_1);
undefined daBomb2__FuseSmokeCB_c__executeAfter(FuseSmokeCB_c * this, JPABaseEmitter * param_1);
undefined daBomb2__FuseSmokeCB_c__draw(FuseSmokeCB_c * this, JPABaseEmitter * param_1);
undefined daBomb2__FuseSmokeCB_c__setup(FuseSmokeCB_c * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
undefined daBomb2__FuseSparksCB_c__deleteCallBack(FuseSparksCB_c * this);
undefined daBomb2__FuseSparksCB_c__execute(FuseSparksCB_c * this, JPABaseEmitter * param_1);
undefined daBomb2__FuseSparksCB_c__draw(FuseSparksCB_c * this, JPABaseEmitter * param_1);
undefined daBomb2__FuseSparksCB_c__setup(FuseSparksCB_c * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
undefined daBomb2__Act_c__solidHeapCB(Act_c * this, fopAc_ac_c * param_1);
undefined daBomb2__Act_c__create_heap_nut(Act_c * this);
undefined daBomb2__Act_c__create_heap(Act_c * this);
undefined daBomb2__Act_c__crr_init(Act_c * this);
undefined daBomb2__Act_c__cc_init(Act_c * this);
undefined daBomb2__Act_c__start_explode_instant(Act_c * this);
undefined daBomb2__Act_c__start_explode_interval(Act_c * this);
undefined daBomb2__Act_c__start_carry(Act_c * this);
undefined daBomb2__Act_c__start_proc_call(Act_c * this);
undefined daBomb2__Act_c__create_init(Act_c * this);
undefined daBomb2__Act_c___create(Act_c * this);
void daBomb2__Act_c__Act_c(Act_c * this);
undefined daBomb2__Act_c___delete(Act_c * this);
undefined daBomb2__Act_c__set_mtx(Act_c * this);
undefined daBomb2__Act_c__init_mtx(Act_c * this);
undefined daBomb2__Act_c__cc_set(Act_c * this);
undefined daBomb2__Act_c__camera_lockoff(Act_c * this);
undefined daBomb2__Act_c__posMoveF(Act_c * this);
undefined daBomb2__Act_c__bgCrrPos(Act_c * this);
undefined daBomb2__Act_c__bgCrrPos_lava(Act_c * this);
undefined daBomb2__Act_c__bgCrrPos_water(Act_c * this);
undefined daBomb2__Act_c__chk_water_in(Act_c * this);
undefined daBomb2__Act_c__chk_lava_in(Act_c * this);
undefined daBomb2__Act_c__setRoomInfo(Act_c * this);
undefined daBomb2__Act_c__bound(Act_c * this, float param_1);
undefined daBomb2__Act_c__set_nut_exp_interval(Act_c * this);
undefined daBomb2__Act_c__anm_play(Act_c * this);
undefined daBomb2__Act_c__set_wind_vec(Act_c * this);
undefined daBomb2__Act_c__eff_explode(Act_c * this);
undefined daBomb2__Act_c__eff_explode_normal(Act_c * this, csXyz * param_1);
undefined daBomb2__Act_c__eff_explode_water(Act_c * this);
undefined daBomb2__Act_c__eff_fuse_init(Act_c * this);
undefined daBomb2__Act_c__eff_fuse_start(Act_c * this);
undefined daBomb2__Act_c__eff_fuse_move(Act_c * this);
undefined daBomb2__Act_c__eff_fuse_end(Act_c * this);
undefined daBomb2__Act_c__eff_water_splash(Act_c * this);
undefined daBomb2__Act_c__se_fall_water(Act_c * this);
undefined daBomb2__Act_c__se_explode(Act_c * this);
undefined daBomb2__Act_c__se_explode_water(Act_c * this);
undefined daBomb2__Act_c__se_ignition(Act_c * this);
undefined daBomb2__Act_c__set_sound_env(Act_c * this, int param_1, int param_2);
undefined daBomb2__Act_c__chk_exp_cc_nut(Act_c * this);
undefined daBomb2__Act_c__chk_exp_cc(Act_c * this);
undefined daBomb2__Act_c__chk_exp_bg_nut(Act_c * this);
undefined daBomb2__Act_c__chk_exp_bg(Act_c * this);
undefined daBomb2__Act_c__chk_exp_timer(Act_c * this);
undefined daBomb2__Act_c__chk_sink_bg_nut(Act_c * this);
undefined daBomb2__Act_c__chk_sink_bg(Act_c * this);
undefined daBomb2__Act_c__chk_exp_pre(Act_c * this);
undefined daBomb2__Act_c__chk_exp_post(Act_c * this);
undefined daBomb2__Act_c__chk_sink_post(Act_c * this);
undefined daBomb2__Act_c__set_real_shadow_flag(Act_c * this);
undefined daBomb2__Act_c__carry_fuse_start(Act_c * this);
undefined daBomb2__Act_c__on_carry(Act_c * this);
undefined daBomb2__Act_c__off_carry(Act_c * this);
undefined daBomb2__Act_c__mode_wait_init(Act_c * this);
undefined daBomb2__Act_c__mode_wait(Act_c * this);
undefined daBomb2__Act_c__mode_carry_init(Act_c * this);
undefined daBomb2__Act_c__mode_carry(Act_c * this);
undefined daBomb2__Act_c__mode_explode_init(Act_c * this);
undefined daBomb2__Act_c__mode_explode(Act_c * this);
undefined daBomb2__Act_c__mode_sink_init(Act_c * this);
undefined daBomb2__Act_c__mode_sink(Act_c * this);
undefined daBomb2__Act_c__mode_proc_call(Act_c * this);
undefined daBomb2__Act_c__tensor_init(Act_c * this);
undefined daBomb2__Act_c__vib_init(Act_c * this);
undefined daBomb2__Act_c__vib_proc(Act_c * this);
undefined daBomb2__Act_c__set_vib_tensor(Act_c * this);
undefined daBomb2__Act_c__tensor_wait(Act_c * this);
undefined daBomb2__Act_c__tensor_wait_drop(Act_c * this);
undefined daBomb2__Act_c__tensor_wait_ground(Act_c * this);
undefined daBomb2__Act_c__tensor_carry(Act_c * this);
undefined daBomb2__Act_c__tensor_explode(Act_c * this);
undefined daBomb2__Act_c__tensor_sink(Act_c * this);
undefined daBomb2__Act_c__tensor_proc_call(Act_c * this);
undefined daBomb2__Act_c___execute(Act_c * this);
undefined daBomb2__Act_c__is_draw(Act_c * this);
undefined daBomb2__Act_c__draw_nut(Act_c * this);
undefined daBomb2__Act_c__draw_shadow(Act_c * this);
undefined daBomb2__Act_c___draw(Act_c * this);
undefined daBomb2___unnamed_d_a_bomb2_cpp___Mthd_Create(_unnamed_d_a_bomb2_cpp_ * this, void * param_1);
undefined daBomb2___unnamed_d_a_bomb2_cpp___Mthd_Delete(_unnamed_d_a_bomb2_cpp_ * this, void * param_1);
undefined daBomb2___unnamed_d_a_bomb2_cpp___Mthd_Execute(_unnamed_d_a_bomb2_cpp_ * this, void * param_1);
undefined daBomb2___unnamed_d_a_bomb2_cpp___Mthd_Draw(_unnamed_d_a_bomb2_cpp_ * this, void * param_1);
undefined daBomb2___unnamed_d_a_bomb2_cpp___Mthd_IsDelete(_unnamed_d_a_bomb2_cpp_ * this, void * param_1);
void daBomb2__FuseSparksCB_c__FuseSparksCB_c_destructor(FuseSparksCB_c * this);
void daBomb2__FuseSmokeCB_c__FuseSmokeCB_c_destructor(FuseSmokeCB_c * this);
// undefined daObj__PrmAbstract(daObj * this, fopAc_ac_c * param_1, Prm_e param_2, Prm_e param_3);
undefined daBoomerang_blur_c__initBlur(daBoomerang_blur_c * this, float * param_1, short param_2);
undefined daBoomerang_blur_c__copyBlur(daBoomerang_blur_c * this, float * param_1, short param_2);
undefined daBoomerang_blur_c__draw(daBoomerang_blur_c * this);
undefined daBoomerang_sightPacket_c__draw(daBoomerang_sightPacket_c * this);
undefined daBoomerang_sightPacket_c__setSight(daBoomerang_sightPacket_c * this, cXyz * param_1, int param_2);
undefined daBoomerang_sightPacket_c__play(daBoomerang_sightPacket_c * this, int param_1);
undefined daBoomerang_c__draw(daBoomerang_c * this);
undefined d_a_boomerang__daBoomerang_Draw();
undefined daBoomerang_c__getFlyMax(daBoomerang_c * this);
undefined daBoomerang_c__rockLineCallback(daBoomerang_c * this, fopAc_ac_c * param_1);
undefined d_a_boomerang__daBoomerang_rockLineCallback();
undefined daBoomerang_c__setAimActor(daBoomerang_c * this, fopAc_ac_c * param_1);
undefined daBoomerang_c__setLockActor(daBoomerang_c * this, fopAc_ac_c * param_1, int param_2);
undefined daBoomerang_c__resetLockActor(daBoomerang_c * this);
undefined daBoomerang_c__setRoomInfo(daBoomerang_c * this);
undefined daBoomerang_c__setKeepMatrix(daBoomerang_c * this);
undefined daBoomerang_c__setAimPos(daBoomerang_c * this);
undefined daBoomerang_c__checkBgHit(daBoomerang_c * this, cXyz * param_1, cXyz * param_2);
undefined daBoomerang_c__procWait(daBoomerang_c * this);
undefined daBoomerang_c__procMove(daBoomerang_c * this);
undefined daBoomerang_c__execute(daBoomerang_c * this);
undefined d_a_boomerang__daBoomerang_Execute();
undefined d_a_boomerang__daBoomerang_IsDelete();
undefined d_a_boomerang__daBoomerang_Delete();
undefined daBoomerang_c__createHeap(daBoomerang_c * this);
undefined d_a_boomerang__daBoomerang_createHeap();
undefined daBoomerang_c__create(daBoomerang_c * this);
void daBoomerang_c__daBoomerang_c(daBoomerang_c * this);
void dBgS_BoomerangLinChk__dBgS_BoomerangLinChk_destructor(dBgS_BoomerangLinChk * this);
undefined d_a_boomerang__daBoomerang_Create();
undefined d_a_boomerang____sinit_d_a_boomerang_cpp();
// void dBgS_BoomerangLinChk__dBgS_BoomerangLinChk_destructor(dBgS_BoomerangLinChk * this);
// void dBgS_BoomerangLinChk__dBgS_BoomerangLinChk_destructor(dBgS_BoomerangLinChk * this);
// void dBgS_BoomerangLinChk__dBgS_BoomerangLinChk_destructor(dBgS_BoomerangLinChk * this);
undefined daPy_py_c__checkPlayerNoDraw(daPy_py_c * this);
undefined daPy_lk_c__getBoomerangCatchPos(daPy_lk_c * this);
undefined daPy_lk_c__getLineTopPos(daPy_lk_c * this);
undefined daPy_sightPacket_c__getPos(daPy_sightPacket_c * this);
void daBoomerang_blur_c__daBoomerang_blur_c_destructor(daBoomerang_blur_c * this);
void daBoomerang_sightPacket_c__daBoomerang_sightPacket_c_destructor(daBoomerang_sightPacket_c * this);
undefined d_a_dai_item__convItemNo();
undefined daStandItem_c___delete(daStandItem_c * this);
undefined d_a_dai_item__CheckCreateHeap();
undefined daStandItem_c__CreateHeap(daStandItem_c * this);
undefined daStandItem_c__CreateInit(daStandItem_c * this);
undefined daStandItem_c___create(daStandItem_c * this);
void dCcD_Cyl__dCcD_Cyl_destructor(dCcD_Cyl * this);
undefined daStandItem_c__set_mtx(daStandItem_c * this);
undefined daStandItem_c___execute(daStandItem_c * this);
undefined daStandItem_c__itemProc(daStandItem_c * this);
undefined daStandItem_c__actionFobj00(daStandItem_c * this);
undefined daStandItem_c__actionFobj01(daStandItem_c * this);
undefined daStandItem_c__actionFobj02(daStandItem_c * this);
undefined daStandItem_c__actionFobj03(daStandItem_c * this);
undefined daStandItem_c__actionFobj04(daStandItem_c * this);
undefined daStandItem_c__actionFobj05(daStandItem_c * this);
undefined daStandItem_c__actionFobj06(daStandItem_c * this);
undefined daStandItem_c__actionFobj07(daStandItem_c * this);
undefined daStandItem_c__actionFobj08(daStandItem_c * this);
undefined daStandItem_c__actionFobj09(daStandItem_c * this);
undefined daStandItem_c__actionFobj10(daStandItem_c * this);
undefined daStandItem_c__actionFobj11(daStandItem_c * this);
undefined daStandItem_c__animTest(daStandItem_c * this);
undefined daStandItem_c__animTestForOneTime(daStandItem_c * this);
undefined daStandItem_c__execAction(daStandItem_c * this);
undefined daStandItem_c__mode_carry_init(daStandItem_c * this);
undefined daStandItem_c__mode_carry(daStandItem_c * this);
undefined daStandItem_c__mode_wait_init(daStandItem_c * this);
undefined daStandItem_c__mode_wait(daStandItem_c * this);
undefined daStandItem_c__mode_drop_init(daStandItem_c * this);
undefined daStandItem_c__mode_drop(daStandItem_c * this);
undefined daStandItem_c___draw(daStandItem_c * this);
undefined d_a_dai_item__daStandItem_Create();
undefined d_a_dai_item__daStandItem_Delete();
undefined d_a_dai_item__daStandItem_Draw();
undefined d_a_dai_item__daStandItem_Execute();
undefined d_a_dai_item__daStandItem_IsDelete();
undefined dCcD_Cyl__GetShapeAttr(dCcD_Cyl * this);
// undefined cCcD_CylAttr__GetCoCP(cCcD_CylAttr * this);
// undefined cCcD_CylAttr__CrossAtTg(cCcD_CylAttr * this, cCcD_AabAttr * param_1, cXyz * param_2);
// undefined cCcD_CylAttr__CrossAtTg(cCcD_CylAttr * this, cCcD_PntAttr * param_1, cXyz * param_2);
// undefined cCcD_CylAttr__CrossCo(cCcD_CylAttr * this, cCcD_AabAttr * param_1, float * param_2);
// undefined cCcD_CylAttr__CrossCo(cCcD_CylAttr * this, cCcD_TriAttr * param_1, float * param_2);
// undefined cCcD_CylAttr__CrossCo(cCcD_CylAttr * this, cCcD_PntAttr * param_1, float * param_2);
undefined d_a_dai_item____sinit_d_a_dai_item_cpp();
undefined d_a_dai_item____arraydtor$4071();
undefined d_a_dai_item____arraydtor$4069();
undefined d_a_dai_item____arraydtor$4067();
undefined d_a_dai_item____arraydtor$4065();
undefined d_a_dai_item____arraydtor$4063();
undefined d_a_dai_item____arraydtor$4061();
undefined d_a_dai_item____arraydtor$4059();
undefined d_a_dai_item____arraydtor$4057();
// void dCcD_Cyl__dCcD_Cyl_destructor(dCcD_Cyl * this);
// void dCcD_Cyl__dCcD_Cyl_destructor(dCcD_Cyl * this);
undefined daDemo00_resID_c__reset(daDemo00_resID_c * this);
undefined daDemo00_model_c__reset(daDemo00_model_c * this);
void daDemo00_c__daDemo00_c_destructor(daDemo00_c * this);
undefined daDemo00_c__setBaseMtx(daDemo00_c * this);
undefined daDemo00_c__setShadowSize(daDemo00_c * this);
undefined d_a_demo00__awaCheck();
undefined d_a_demo00__createHeapCallBack();
undefined daDemo00_c__createHeap(daDemo00_c * this);
undefined daDemo00_c__actStandby(daDemo00_c * this, dDemo_actor_c * param_1);
undefined daDemo00_c__actPerformance(daDemo00_c * this, dDemo_actor_c * param_1);
undefined daDemo00_c__actLeaving(daDemo00_c * this, dDemo_actor_c * param_1);
undefined d_a_demo00__daDemo00_Draw();
undefined daDemo00_c__draw(daDemo00_c * this);
undefined d_a_demo00__daDemo00_Execute();
undefined daDemo00_c__execute(daDemo00_c * this);
undefined d_a_demo00__daDemo00_IsDelete();
undefined d_a_demo00__daDemo00_Delete();
undefined d_a_demo00__daDemo00_Create();
void mDoExt_btpAnm__mDoExt_btpAnm_destructor(mDoExt_btpAnm * this);
undefined d_a_disappear__daDisappear_Draw();
undefined d_a_disappear__daDisappear_Execute();
undefined d_a_disappear__daDisappear_IsDelete();
undefined d_a_disappear__daDisappear_Delete();
undefined d_a_disappear__set_disappear();
undefined d_a_disappear__daDisappear_Create();
undefined d_a_esa__daEsa_Draw();
undefined d_a_esa__bg_check();
undefined d_a_esa__esa_1_move();
undefined d_a_esa__daEsa_Execute();
undefined d_a_esa__daEsa_IsDelete();
undefined d_a_esa__daEsa_Delete();
undefined d_a_esa__daEsa_CreateHeap();
undefined d_a_esa__daEsa_Create();
undefined daPy_py_c__getLeftHandPos(daPy_py_c * this);
undefined daHo_packet_c__setBackNrm(daHo_packet_c * this);
undefined daHo_packet_c__setNrmMtx(daHo_packet_c * this, cXyz * param_1);
undefined daHo_packet_c__setNrmVtx(daHo_packet_c * this, cXyz * param_1, int param_2, int param_3);
undefined daHo_packet_c__setTopNrmVtx(daHo_packet_c * this, cXyz * param_1);
undefined daHo_packet_c__draw(daHo_packet_c * this);
undefined d_a_grid__daGrid_Draw();
undefined d_a_grid__ho_move();
undefined d_a_grid__daGrid_Execute();
undefined d_a_grid__daGrid_IsDelete();
undefined d_a_grid__daGrid_Delete();
undefined d_a_grid__daGrid_Create();
undefined daGrid_c___create(daGrid_c * this);
undefined daGrid_c___delete(daGrid_c * this);
undefined daGrid_c___execute(daGrid_c * this);
undefined daGrid_c___draw(daGrid_c * this);
undefined J3DMatPacket__entry(J3DMatPacket * this, J3DDrawBuffer * param_1);
undefined d_a_grid____sinit_d_a_grid_cpp();
void daHo_HIO_c__daHo_HIO_c_destructor(daHo_HIO_c * this);
void daHo_packet_c__daHo_packet_c_destructor(daHo_packet_c * this);
undefined dCamera_c__Eye(dCamera_c * this);
undefined d_a_himo2__spin_draw();
undefined d_a_himo2__himo2_control();
undefined d_a_himo2__himo2_control2();
undefined d_a_himo2__himo2_draw();
undefined d_a_himo2__himo_hang_draw();
undefined d_a_himo2__himo2_disp();
undefined d_a_himo2__daHimo2_Draw();
undefined d_a_himo2__s_a_d_sub();
undefined d_a_himo2__search_target();
undefined himo2_class__setTargetPos(himo2_class * this, cXyz * param_1, float * param_2, float * param_3);
undefined d_a_himo2__dr_a_sub();
undefined d_a_himo2__b_a_sub();
undefined d_a_himo2__himo2_bg_check();
undefined d_a_himo2__pl_pos_add();
undefined d_a_himo2__new_himo2_move();
undefined d_a_himo2__cM_scos();
undefined d_a_himo2__cM_ssin();
undefined cBgS_LinChk__GetCross(cBgS_LinChk * this);
void dBgS_LinChk__dBgS_LinChk(dBgS_LinChk * this);
undefined d_a_himo2__daHimo2_Execute();
undefined d_a_himo2__daHimo2_IsDelete();
undefined d_a_himo2__daHimo2_Delete();
undefined d_a_himo2__CallbackCreateHeap();
undefined d_a_himo2__daHimo2_Create();
undefined d_a_himo2____sinit_d_a_himo2_cpp();
void himo2HIO_c__himo2HIO_c_destructor(himo2HIO_c * this);
undefined daPy_py_c__checkPlayerGuard(daPy_py_c * this);
undefined daPy_py_c__getRopeJumpLand(daPy_py_c * this);
float std__fabsf(std * this, float __x);
undefined daPy_py_c__checkRopeReadyAnime(daPy_py_c * this);
undefined daPy_py_c__checkRopeForceEnd(daPy_py_c * this);
void himo2_s__himo2_s_destructor(himo2_s * this);
void himo2_s__himo2_s(himo2_s * this);
undefined daYkgr_c__show(daYkgr_c * this);
undefined daYkgr_c__hide(daYkgr_c * this);
undefined d_a_himo2__dComIfGs_isEventBit();
undefined d_a_himo2__dComIfGp_getStartStageName();
undefined d_a_himo2__fopAcM_searchPlayerAngleY();
undefined d_a_himo2__dComIfGp_event_reset();
undefined d_a_himo2__mDoAud_seStart();
undefined d_a_himo2__fopAcM_OnStatus();
undefined d_a_himo2__fopAcM_seStartCurrent();
undefined dEvt_info_c__onCondition(dEvt_info_c * this, ushort param_1);
undefined d_a_himo2__dComIfGs_onEventBit();
undefined d_a_himo2__fopAcM_OffStatus();
undefined d_a_himo2__fopAcM_GetID();
undefined d_a_himo2__fopAcM_GetParam();
undefined cXyz__operator_plus_set(cXyz * this, Vec * param_1);
undefined d_a_himo2__fopAcM_GetName();
undefined d_a_himo2__fopAcM_seStart();
undefined d_a_himo2__fopAcM_SetParam();
undefined dEvt_info_c__checkCommandDemoAccrpt(dEvt_info_c * this);
undefined d_a_himo2__daPy_getPlayerLinkActorClass();
undefined dAttention_c__Lockon(dAttention_c * this);
undefined d_a_himo2__dComIfGp_getAttention();
float std__sqrtf(std * this, float __x);
undefined d_a_himo2__dComIfGp_getCamera();
undefined d_a_himo2__dComIfGp_getPlayerCameraID();
undefined d_a_himo2__dComIfGp_getPlayer();
undefined daHookshot_shape__draw(daHookshot_shape * this);
undefined daHookshot_c__draw(daHookshot_c * this);
undefined d_a_hookshot__daHookshot_Draw();
undefined d_a_hookshot__daHookshot_rockLineCallback();
undefined daHookshot_c__procWait_init(daHookshot_c * this, int param_1);
undefined daHookshot_c__procWait(daHookshot_c * this);
undefined daHookshot_c__procShot(daHookshot_c * this);
undefined daHookshot_c__procPlayerPull(daHookshot_c * this);
undefined daHookshot_c__procReturn(daHookshot_c * this);
undefined daHookshot_c__execute(daHookshot_c * this);
undefined d_a_hookshot__daHookshot_Execute();
undefined d_a_hookshot__daHookshot_IsDelete();
undefined daHookshot_c__hookshot_delete(daHookshot_c * this);
undefined d_a_hookshot__daHookshot_Delete();
undefined daHookshot_c__create(daHookshot_c * this);
void daHookshot_c__daHookshot_c(daHookshot_c * this);
void dBgS_RopeLinChk__dBgS_RopeLinChk_destructor(dBgS_RopeLinChk * this);
undefined d_a_hookshot__daHookshot_Create();
undefined d_a_hookshot____sinit_d_a_hookshot_cpp();
// void dBgS_RopeLinChk__dBgS_RopeLinChk_destructor(dBgS_RopeLinChk * this);
// void dBgS_RopeLinChk__dBgS_RopeLinChk_destructor(dBgS_RopeLinChk * this);
// void dBgS_RopeLinChk__dBgS_RopeLinChk_destructor(dBgS_RopeLinChk * this);
undefined daPy_lk_c__getHookshotRootPos(daPy_lk_c * this);
undefined daPy_lk_c__getModelJointMtx(daPy_lk_c * this, ushort param_1);
void daHookshot_shape__daHookshot_shape_destructor(daHookshot_shape * this);
undefined daIball_c__setPointLight(daIball_c * this);
undefined daIball_c__createDisappearEffect(daIball_c * this, int param_1, int param_2);
undefined d_a_ib__itemParamSet_CB();
undefined daIball_c__createItem(daIball_c * this);
undefined daIball_c__dead(daIball_c * this);
undefined daIball_c__checkGeo(daIball_c * this);
undefined daIball_c__mode_wait_init(daIball_c * this);
undefined daIball_c__mode_wait(daIball_c * this);
undefined daIball_c__mode_water_init(daIball_c * this);
undefined daIball_c__mode_water(daIball_c * this);
undefined daIball_c__animControl(daIball_c * this);
undefined daIball_c__damage(daIball_c * this);
undefined daIball_c__set_mtx(daIball_c * this);
undefined daIball_c__CreateInit(daIball_c * this);
undefined daIball_c___daIball_draw(daIball_c * this);
undefined daIball_c___daIball_execute(daIball_c * this);
undefined daIball_c___daIball_delete(daIball_c * this);
undefined d_a_ib__CheckCreateHeap();
undefined daIball_c___daIball_create(daIball_c * this);
void mDoExt_brkAnm__mDoExt_brkAnm(mDoExt_brkAnm * this);
undefined daIball_c__CreateHeap(daIball_c * this);
undefined d_a_ib__daIball_Create();
undefined d_a_ib__daIball_Draw();
undefined d_a_ib__daIball_Delete();
undefined d_a_ib__daIball_IsDelete();
undefined d_a_ib__daIball_Execute();
daItemBase_c_m_data * daItemBase_c__getData(daItemBase_c * this);
undefined d_a_item__setArrowTrans();
undefined daItem_c__getYOffset(daItem_c * this);
undefined daItem_c__set_mtx(daItem_c * this);
undefined daItem_c__set_mtx_base(daItem_c * this, J3DModel * param_1, cXyz * param_2, csXyz * param_3);
undefined d_a_item__itemGetCallBack();
undefined daItem_c__CreateInit(daItem_c * this);
undefined daItem_c___daItem_create(daItem_c * this);
undefined daItem_c___daItem_execute(daItem_c * this);
undefined daItem_c__mode_proc_call(daItem_c * this);
undefined daItem_c__execInitNormalDirection(daItem_c * this);
undefined daItem_c__execMainNormalDirection(daItem_c * this);
undefined daItem_c__execInitGetDemoDirection(daItem_c * this);
undefined daItem_c__execWaitGetDemoDirection(daItem_c * this);
undefined daItem_c__execMainGetDemoDirection(daItem_c * this);
undefined daItem_c__execBringNezumi(daItem_c * this);
undefined daItem_c__execWaitMain(daItem_c * this);
undefined daItem_c__execWaitMainFromBoss(daItem_c * this);
undefined daItem_c__scaleAnimFromBossItem(daItem_c * this);
undefined daItem_c___daItem_draw(daItem_c * this);
undefined daItem_c__setTevStr(daItem_c * this);
undefined daItem_c___daItem_delete(daItem_c * this);
undefined d_a_item__Reflect();
undefined daItem_c__itemGetExecute(daItem_c * this);
undefined daItem_c__itemDefaultRotateY(daItem_c * this);
undefined daItem_c__checkItemDisappear(daItem_c * this);
undefined daItem_c__setItemTimer(daItem_c * this, int param_1);
undefined daItem_c__checkPlayerGet(daItem_c * this);
undefined daItem_c__itemActionForRupee(daItem_c * this);
undefined daItem_c__itemActionForHeart(daItem_c * this);
undefined daItem_c__itemActionForKey(daItem_c * this);
undefined daItem_c__itemActionForEmono(daItem_c * this);
undefined daItem_c__itemActionForSword(daItem_c * this);
undefined daItem_c__itemActionForArrow(daItem_c * this);
undefined daItem_c__checkWall(daItem_c * this);
undefined daItem_c__set_bound_se(daItem_c * this);
undefined daItem_c__checkGetItem(daItem_c * this);
undefined daItem_c__timeCount(daItem_c * this);
undefined daItem_c__mode_wait_init(daItem_c * this);
undefined daItem_c__mode_water_init(daItem_c * this);
undefined daItem_c__mode_wait(daItem_c * this);
undefined daItem_c__mode_water(daItem_c * this);
undefined daItem_c__initAction(daItem_c * this);
undefined d_a_item__daItem_Draw();
undefined d_a_item__daItem_Execute();
undefined d_a_item__daItem_IsDelete();
undefined d_a_item__daItem_Delete();
undefined d_a_item__daItem_Create();
undefined daItem_c___daItem_isdelete(daItem_c * this);
cXyz * daPy_py_c__getHeadTopPos(cXyz * __return_storage_ptr__, daPy_py_c * this);
undefined daItemBase_c__DeleteBase(daItemBase_c * this, char * param_1);
undefined daItemBase_c__clothCreate(daItemBase_c * this);
undefined daItemBase_c__CreateItemHeap(daItemBase_c * this, char * param_1, short param_2, short param_3, short param_4, short param_5, short param_6, short param_7, short param_8);
undefined daItemBase_c__DrawBase(daItemBase_c * this);
undefined daItemBase_c__setListStart(daItemBase_c * this);
undefined daItemBase_c__setListEnd(daItemBase_c * this);
undefined daItemBase_c__settingBeforeDraw(daItemBase_c * this);
undefined daItemBase_c__setTevStr(daItemBase_c * this);
undefined daItemBase_c__setShadow(daItemBase_c * this);
undefined daItemBase_c__animEntry(daItemBase_c * this);
undefined daItemBase_c__animPlay(daItemBase_c * this, float param_1, float param_2, float param_3, float param_4, float param_5);
void daNh_HIO_c__daNh_HIO_c(daNh_HIO_c * this);
void daNh_c__daNh_c_destructor(daNh_c * this);
undefined daNh_c__setBaseMtx(daNh_c * this);
undefined daNh_c__createHeap(daNh_c * this);
undefined d_a_nh__checkCreateHeap();
undefined daNh_c__create(daNh_c * this);
int daNh_c__init(daNh_c * this, EVP_PKEY_CTX * ctx);
undefined daNh_c__action(daNh_c * this, void * param_1);
undefined daNh_c__setAction(daNh_c * this, void * param_1, void * param_2);
undefined daNh_c__checkBinCatch(daNh_c * this);
undefined daNh_c__searchPlayer(daNh_c * this);
undefined daNh_c__moveProc(daNh_c * this, float param_1, float param_2, short param_3);
undefined daNh_c__getHomeDistance(daNh_c * this);
undefined daNh_c__checkTimer(daNh_c * this);
undefined daNh_c__BGCheck(daNh_c * this);
undefined daNh_c__airMove(daNh_c * this);
undefined daNh_c__waitAction(daNh_c * this, void * param_1);
undefined daNh_c__checkEscapeEnd(daNh_c * this);
undefined daNh_c__escapeAction(daNh_c * this, void * param_1);
undefined daNh_c__returnAction(daNh_c * this, void * param_1);
undefined daNh_c__execute(daNh_c * this);
undefined daNh_c__initBrkAnm(daNh_c * this, bool param_1);
undefined daNh_c__playBrkAnm(daNh_c * this);
undefined daNh_c__draw(daNh_c * this);
undefined d_a_nh__daNh_Draw();
undefined d_a_nh__daNh_Execute();
undefined d_a_nh__daNh_IsDelete();
undefined d_a_nh__daNh_Delete();
undefined d_a_nh__daNh_Create();
void daNh_HIO_c__daNh_HIO_c_destructor(daNh_HIO_c * this);
undefined d_a_nh__cLib_calcTimer();
undefined d_a_nh__cLib_getRndValue();
undefined d_a_nh____sinit_d_a_nh_cpp();
void daNpc_Fa1_HIO3_c__daNpc_Fa1_HIO3_c(daNpc_Fa1_HIO3_c * this);
void daNpc_Fa1_HIO2_c__daNpc_Fa1_HIO2_c(daNpc_Fa1_HIO2_c * this);
void daNpc_Fa1_HIO_c__daNpc_Fa1_HIO_c(daNpc_Fa1_HIO_c * this);
void daNpc_Fa1_HIO3_c__daNpc_Fa1_HIO3_c_destructor(daNpc_Fa1_HIO3_c * this);
void daNpc_Fa1_HIO2_c__daNpc_Fa1_HIO2_c_destructor(daNpc_Fa1_HIO2_c * this);
void daNpc_Fa1_McaMorfCallBack1_c__daNpc_Fa1_McaMorfCallBack1_c(daNpc_Fa1_McaMorfCallBack1_c * this);
undefined daNpc_Fa1_McaMorfCallBack1_c__execute(daNpc_Fa1_McaMorfCallBack1_c * this, ushort param_1, J3DTransformInfo * param_2);
undefined daNpc_Fa1_c__setPointLightParam(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__createInit(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c___draw(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c___execute(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__checkBinCatch(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__position_move(daNpc_Fa1_c * this, float param_1, float param_2);
undefined daNpc_Fa1_c__BGCheck(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_normal_move(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__normal_move(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_straight(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_straight2(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__straight(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_turn(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__turn(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_areaMove(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__areaMove(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_areaOutMove(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__areaOutMove(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_get_player_move(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__get_player_move(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_escape_move(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__escape_move(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_hover_move(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__hover_move(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_bottle_appear_move(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__bottle_appear_move(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_up1(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__up1(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_down(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__down(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_up2(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__up2(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_bottle_baba_wait(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__bottle_baba_wait(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_bottle_baba_move(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__bottle_baba_move(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_bottle_baba_move2(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__bottle_baba_move2(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_baba_down(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__baba_down(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_baba_up(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__init_bigelf_change(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__bigelf_change(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__findPlayer(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c___delete(daNpc_Fa1_c * this);
undefined d_a_npc_fa1__CheckCreateHeap();
undefined daNpc_Fa1_c___create(daNpc_Fa1_c * this);
void daNpc_Fa1_c__daNpc_Fa1_c(daNpc_Fa1_c * this);
void daNpc_Fa1_McaMorfCallBack1_c__daNpc_Fa1_McaMorfCallBack1_c_destructor(daNpc_Fa1_McaMorfCallBack1_c * this);
undefined daNpc_Fa1_c__CreateHeap(daNpc_Fa1_c * this);
undefined daNpc_Fa1_c__setMtx(daNpc_Fa1_c * this);
undefined d_a_npc_fa1__daNpc_Fa1_Create();
undefined d_a_npc_fa1__daNpc_Fa1_Delete();
undefined d_a_npc_fa1__daNpc_Fa1_Execute();
undefined d_a_npc_fa1__daNpc_Fa1_Draw();
undefined d_a_npc_fa1__daNpc_Fa1_IsDelete();
void daNpc_Fa1_HIO_c__daNpc_Fa1_HIO_c_destructor(daNpc_Fa1_HIO_c * this);
undefined d_a_npc_fa1__cLib_calcTimer();
undefined d_a_npc_fa1__cLib_getRndValue();
// undefined d_a_npc_fa1__cLib_getRndValue();
undefined d_a_npc_fa1____sinit_d_a_npc_fa1_cpp();
undefined fopNpc_npc_c__next_msgStatus(fopNpc_npc_c * this, ulong * param_1);
undefined fopNpc_npc_c__getMsg(fopNpc_npc_c * this);
undefined fopNpc_npc_c__anmAtr(fopNpc_npc_c * this, ushort param_1);
undefined d_a_obj_search__createHeap_CB();
undefined daObj_Search__Act_c___createHeap(Act_c * this);
undefined daObj_Search__Act_c__searchCreateHeap(Act_c * this);
undefined daObj_Search__Act_c__beamCreateHeap(Act_c * this, int param_1);
undefined d_a_obj_search__nodeControl_CB();
undefined daObj_Search__Act_c___nodeControl(Act_c * this, J3DNode * param_1, J3DModel * param_2);
undefined daObj_Search__Act_c__modeSearchRndInit(Act_c * this);
undefined daObj_Search__Act_c__modeSearchRnd(Act_c * this);
undefined daObj_Search__Act_c__modeSearchPathInit(Act_c * this);
undefined daObj_Search__Act_c__modeSearchPath(Act_c * this);
undefined daObj_Search__Act_c__modeStopInit(Act_c * this);
undefined daObj_Search__Act_c__modeStop(Act_c * this);
undefined daObj_Search__Act_c__modeToSearchInit(Act_c * this);
undefined daObj_Search__Act_c__modeToSearch(Act_c * this);
undefined daObj_Search__Act_c__modeToStopInit(Act_c * this);
undefined daObj_Search__Act_c__modeToStop(Act_c * this);
undefined daObj_Search__Act_c__modeFindInit(Act_c * this);
undefined daObj_Search__Act_c__modeFind(Act_c * this);
undefined daObj_Search__Act_c__modeFind2ndInit(Act_c * this);
undefined daObj_Search__Act_c__modeFind2nd(Act_c * this);
undefined daObj_Search__Act_c__modeSearchBdkInit(Act_c * this);
undefined daObj_Search__Act_c__modeSearchBdk(Act_c * this);
undefined daObj_Search__Act_c__modeProc(Act_c * this, Proc_e param_1, int param_2);
void daObj_Search__Bgc_c__Bgc_c(Bgc_c * this);
undefined daObj_Search__Bgc_c__wall_pos(Bgc_c * this, Act_c * param_1, cXyz * param_2, cXyz * param_3, bool * param_4, float * param_5);
undefined daObj_Search__Act_c__attr(Act_c * this);
undefined daObj_Search__Act_c__SetArgData(Act_c * this);
undefined daObj_Search__Act_c__CreateInit(Act_c * this);
undefined daObj_Search__Act_c___create(Act_c * this);
void daObj_Search__Act_c__Act_c(Act_c * this);
void dBgS_ObjLinChk__dBgS_ObjLinChk_destructor(dBgS_ObjLinChk * this);
void csXyz__csXyz(csXyz * this);
void dCcD_Stts__dCcD_Stts(dCcD_Stts * this);
void dCcD_Cps__dCcD_Cps(dCcD_Cps * this);
undefined daObj_Search__Act_c__smoke_set(Act_c * this, float param_1, int param_2);
undefined daObj_Search__Act_c___execute(Act_c * this);
undefined daObj_Search__Act_c__check_bk_control(Act_c * this);
undefined daObj_Search__Act_c__set_mtx_base(Act_c * this);
undefined daObj_Search__Act_c__set_mtx_light_A(Act_c * this);
undefined daObj_Search__Act_c__set_mtx_light_B(Act_c * this);
undefined daObj_Search__Act_c__set_moveBG_mtx_base(Act_c * this);
undefined daObj_Search__Act_c__set_moveBG_mtx_light_A(Act_c * this);
undefined daObj_Search__Act_c__set_moveBG_mtx_light_B(Act_c * this);
undefined daObj_Search__Act_c__bg_check(Act_c * this);
undefined daObj_Search__Act_c__player_check(Act_c * this);
undefined daObj_Search__Act_c__set_path_info(Act_c * this);
undefined daObj_Search__Act_c__is_path_info(Act_c * this);
undefined daObj_Search__Act_c___draw(Act_c * this);
undefined daObj_Search__Act_c___delete(Act_c * this);
undefined daObj_Search__Act_c___isdelete(Act_c * this);
undefined daObj_Search__Mthd__Create(Mthd * this, void * param_1);
undefined daObj_Search__Mthd__Delete(Mthd * this, void * param_1);
undefined daObj_Search__Mthd__Execute(Mthd * this, void * param_1);
undefined daObj_Search__Mthd__Draw(Mthd * this, void * param_1);
undefined daObj_Search__Mthd__IsDelete(Mthd * this, void * param_1);
// void dBgS_ObjLinChk__dBgS_ObjLinChk_destructor(dBgS_ObjLinChk * this);
// void dBgS_ObjLinChk__dBgS_ObjLinChk_destructor(dBgS_ObjLinChk * this);
// void dBgS_ObjLinChk__dBgS_ObjLinChk_destructor(dBgS_ObjLinChk * this);
void daPy_py_c__changePlayer(daPy_py_c * this, fopAc_ac_c * param_1);
undefined daPy_py_c__objWindHitCheck(daPy_py_c * this, dCcD_Cyl * param_1);
undefined daPy_mtxFollowEcallBack_c__execute(daPy_mtxFollowEcallBack_c * this, JPABaseEmitter * param_1);
undefined daPy_mtxFollowEcallBack_c__end(daPy_mtxFollowEcallBack_c * this);
undefined daPy_mtxFollowEcallBack_c__makeEmitter(daPy_mtxFollowEcallBack_c * this, ushort param_1, float * param_2, cXyz * param_3, cXyz * param_4);
undefined daPy_mtxFollowEcallBack_c__makeEmitterColor(daPy_mtxFollowEcallBack_c * this, ushort param_1, float * param_2, cXyz * param_3, _GXColor * param_4, _GXColor * param_5);
undefined daPy_py_c__setDoButtonQuake(daPy_py_c * this);
undefined daPy_py_c__stopDoButtonQuake(daPy_py_c * this, int param_1);
void daPy_mtxFollowEcallBack_c__daPy_mtxFollowEcallBack_c_destructor(daPy_mtxFollowEcallBack_c * this);
undefined daPy_mtxFollowEcallBack_c__setup(daPy_mtxFollowEcallBack_c * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
undefined d_a_player_main__daPy_createHeap();
void daPy_matAnm_c__daPy_matAnm_c(daPy_matAnm_c * this);
void J3DMaterialAnm__J3DMaterialAnm_destructor(J3DMaterialAnm * this);
undefined daPy_matAnm_c__calc(daPy_matAnm_c * this, J3DMaterial * param_1);
undefined daPy_lk_c__seStartOnlyReverb(daPy_lk_c * this, ulong param_1);
undefined daPy_lk_c__seStartMapInfo(daPy_lk_c * this, ulong param_1);
undefined daPy_lk_c__seStartSwordCut(daPy_lk_c * this, ulong param_1);
undefined daPy_lk_c__voiceStart(daPy_lk_c * this, ulong param_1);
undefined daPy_lk_c__itemButton(daPy_lk_c * this);
undefined daPy_lk_c__itemTrigger(daPy_lk_c * this);
undefined daPy_lk_c__getReadyItem(daPy_lk_c * this);
undefined daPy_lk_c__checkGroupItem(daPy_lk_c * this, int param_1, int param_2);
undefined daPy_lk_c__checkSetItemTrigger(daPy_lk_c * this, int param_1, int param_2);
undefined daPy_lk_c__auraJointCB0(daPy_lk_c * this, int param_1);
undefined d_a_player_main__daPy_auraCallback();
undefined daPy_lk_c__jointBeforeCB(daPy_lk_c * this, int param_1, J3DTransformInfo * param_2, Quaternion * param_3);
undefined d_a_player_main__daPy_jointBeforeCallback();
undefined daPy_lk_c__jointAfterCB(daPy_lk_c * this, int param_1, J3DTransformInfo * param_2, Quaternion * param_3);
undefined d_a_player_main__daPy_jointAfterCallback();
undefined daPy_lk_c__jointCB0(daPy_lk_c * this, int param_1);
undefined d_a_player_main__daPy_jointCallback0();
undefined daPy_lk_c__jointCB1(daPy_lk_c * this);
undefined d_a_player_main__daPy_jointCallback1();
undefined daPy_lk_c__setAnimeHeap(daPy_lk_c * this, JKRSolidHeap * param_1);
undefined daPy_lk_c__setItemHeap(daPy_lk_c * this);
undefined daPy_lk_c__setBlurPosResource(daPy_lk_c * this, ushort param_1);
undefined daPy_lk_c__getItemAnimeResource(daPy_lk_c * this, ushort param_1);
undefined daPy_lk_c__getAnimeResource(daPy_lk_c * this, daPy_anmHeap_c * param_1, ushort param_2, ulong param_3);
undefined daPy_lk_c__getUnderUpperAnime(daPy_lk_c * this, daPy_anmIndex_c * param_1, J3DAnmTransform * * param_2, J3DAnmTransform * * param_3, int param_4, ulong param_5);
undefined daPy_lk_c__setTextureAnimeResource(daPy_lk_c * this, J3DAnmTexPattern * param_1, int param_2);
undefined daPy_lk_c__loadTextureAnimeResource(daPy_lk_c * this, ulong param_1, int param_2);
undefined daPy_lk_c__checkBossBgm(daPy_lk_c * this);
undefined daPy_lk_c__checkMabaAnimeBtp(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__checkNormalFace(daPy_lk_c * this);
undefined daPy_lk_c__setTextureAnime(daPy_lk_c * this, ushort param_1, int param_2);
undefined daPy_lk_c__setPriTextureAnime(daPy_lk_c * this, ushort param_1, int param_2);
undefined daPy_lk_c__resetPriTextureAnime(daPy_lk_c * this);
undefined daPy_lk_c__setDemoTextureAnime(daPy_lk_c * this, ushort param_1, ushort param_2, int param_3, ushort param_4);
undefined daPy_lk_c__resetDemoTextureAnime(daPy_lk_c * this);
undefined daPy_lk_c__setTextureScrollResource(daPy_lk_c * this, J3DAnmTextureSRTKey * param_1, int param_2);
undefined daPy_lk_c__loadTextureScrollResource(daPy_lk_c * this, ulong param_1, int param_2);
undefined daPy_lk_c__playTextureAnime(daPy_lk_c * this);
undefined daPy_lk_c__checkPlayerGuard(daPy_lk_c * this);
undefined daPy_lk_c__setOutPower(daPy_lk_c * this, float param_1, short param_2, int param_3);
undefined daPy_lk_c__checkSightLine(daPy_lk_c * this, float param_1, cXyz * param_2);
undefined daPy_lk_c__setBootsModel(daPy_lk_c * this, J3DModel * bootModels[2]);
undefined daPy_lk_c__setItemModel(daPy_lk_c * this);
undefined daPy_lk_c__checkUpperReadyAnime(daPy_lk_c * this);
undefined daPy_lk_c__checkUpperReadyThrowAnime(daPy_lk_c * this);
undefined daPy_lk_c__checkNoCollisionCorret(daPy_lk_c * this);
undefined daPy_lk_c__setDrawHandModel(daPy_lk_c * this);
undefined daPy_lk_c__entryDLSetLight(daPy_lk_c * this, J3DModel * param_1, ulong param_2);
undefined daPy_lk_c__updateDLSetLight(daPy_lk_c * this, J3DModel * param_1, ulong param_2);
undefined daPy_lk_c__hideHatAndBackle(daPy_lk_c * this, J3DMaterial * param_1);
undefined daPy_lk_c__drawMirrorLightModel(daPy_lk_c * this);
undefined daPy_lk_c__drawShadow(daPy_lk_c * this);
undefined daPy_lk_c__offBodyEffect(daPy_lk_c * this);
undefined daPy_lk_c__onBodyEffect(daPy_lk_c * this);
undefined daPy_lk_c__draw(daPy_lk_c * this);
undefined d_a_player_main__daPy_Draw();
undefined daPy_lk_c__setAtnList(daPy_lk_c * this);
undefined daPy_actorKeep_c__setActor(daPy_actorKeep_c * this);
undefined daPy_actorKeep_c__setData(daPy_actorKeep_c * this, fopAc_ac_c * param_1);
undefined daPy_actorKeep_c__clearData(daPy_actorKeep_c * this);
undefined daPy_lk_c__setActorPointer(daPy_lk_c * this);
undefined daPy_lk_c__setTalkStatus(daPy_lk_c * this);
undefined daPy_lk_c__setHintActor(daPy_lk_c * this);
undefined daPy_lk_c__setDoStatusBasic(daPy_lk_c * this);
undefined daPy_lk_c__setDoStatus(daPy_lk_c * this);
undefined daPy_lk_c__getDirectionFromAngle(daPy_lk_c * this, short param_1);
undefined daPy_lk_c__getDirectionFromShapeAngle(daPy_lk_c * this);
undefined daPy_lk_c__getDirectionFromCurrentAngle(daPy_lk_c * this);
undefined daPy_lk_c__setNormalSpeedF(daPy_lk_c * this, float param_1, float param_2, float param_3, float param_4);
undefined daPy_lk_c__posMoveFromFootPos(daPy_lk_c * this);
undefined daPy_lk_c__posMove(daPy_lk_c * this);
undefined daPy_lk_c__setShapeAngleToAtnActor(daPy_lk_c * this);
undefined daPy_lk_c__cancelItemUpperReadyAnime(daPy_lk_c * this);
undefined daPy_lk_c__checkBodyAngleX(daPy_lk_c * this, short param_1);
undefined daPy_lk_c__setBodyAngleToCamera(daPy_lk_c * this);
undefined daPy_lk_c__setBodyAngleXReadyAnime(daPy_lk_c * this);
undefined daPy_lk_c__setSpeedAndAngleNormal(daPy_lk_c * this, short param_1);
undefined daPy_lk_c__setSpeedAndAngleAtn(daPy_lk_c * this);
undefined daPy_lk_c__setSpeedAndAngleAtnBack(daPy_lk_c * this);
undefined daPy_lk_c__setSpeedAndAngleAtnActor(daPy_lk_c * this);
undefined daPy_lk_c__setFrameCtrl(daPy_lk_c * this, J3DFrameCtrl * param_1, uchar param_2, short param_3, short param_4, float param_5, float param_6);
undefined daPy_lk_c__checkAtnWaitAnime(daPy_lk_c * this);
undefined daPy_lk_c__setBlendMoveAnime(daPy_lk_c * this, float param_1);
undefined daPy_lk_c__setBlendAtnBackMoveAnime(daPy_lk_c * this, float param_1);
undefined daPy_lk_c__setBlendAtnMoveAnime(daPy_lk_c * this, float param_1);
undefined daPy_lk_c__setAnimeEquipSword(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__setAnimeEquipSingleItem(daPy_lk_c * this, ushort param_1);
undefined daPy_lk_c__setAnimeEquipItem(daPy_lk_c * this);
undefined daPy_lk_c__setAnimeUnequipSword(daPy_lk_c * this);
undefined daPy_lk_c__setAnimeUnequipItem(daPy_lk_c * this, ushort param_1);
undefined daPy_lk_c__setAnimeUnequip(daPy_lk_c * this);
undefined daPy_lk_c__checkBossGomaStage(daPy_lk_c * this);
undefined daPy_lk_c__checkSingleItemEquipAnime(daPy_lk_c * this);
undefined daPy_lk_c__checkItemEquipAnime(daPy_lk_c * this);
undefined daPy_lk_c__checkEquipAnime(daPy_lk_c * this);
undefined daPy_lk_c__deleteEquipItem(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__setFallVoice(daPy_lk_c * this);
undefined daPy_lk_c__keepItemData(daPy_lk_c * this);
undefined daPy_lk_c__returnKeepItemData(daPy_lk_c * this);
undefined daPy_lk_c__makeItemType(daPy_lk_c * this);
undefined daPy_lk_c__setScopeModel(daPy_lk_c * this);
undefined daPy_lk_c__setPhotoBoxModel(daPy_lk_c * this);
undefined daPy_lk_c__changeDragonShield(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__checkNewItemChange(daPy_lk_c * this, uchar param_1);
undefined daPy_lk_c__checkItemChangeFromButton(daPy_lk_c * this);
undefined daPy_lk_c__checkItemAction(daPy_lk_c * this);
undefined daPy_lk_c__getSlidePolygon(daPy_lk_c * this);
undefined daPy_lk_c__checkJumpCutFromButton(daPy_lk_c * this);
undefined daPy_lk_c__orderTalk(daPy_lk_c * this);
undefined daPy_lk_c__checkNextActionFromButton(daPy_lk_c * this);
undefined daPy_lk_c__setShieldGuard(daPy_lk_c * this);
undefined daPy_lk_c__checkItemModeActorPointer(daPy_lk_c * this);
undefined daPy_lk_c__checkNextActionItemFly(daPy_lk_c * this);
undefined daPy_lk_c__checkNextMode(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__checkIceSlipFall(daPy_lk_c * this);
undefined daPy_lk_c__setFrontWallType(daPy_lk_c * this);
undefined daPy_lk_c__changeFrontWallTypeProc(daPy_lk_c * this);
undefined daPy_lk_c__changeSlideProc(daPy_lk_c * this);
undefined daPy_lk_c__changeWaitProc(daPy_lk_c * this);
undefined daPy_lk_c__changeLandProc(daPy_lk_c * this, float param_1);
undefined daPy_lk_c__setDamagePoint(daPy_lk_c * this, float param_1);
undefined daPy_lk_c__checkNormalDamage(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__setDashDamage(daPy_lk_c * this);
undefined daPy_lk_c__checkAtHitEnemy(daPy_lk_c * this, dCcD_GObjInf * param_1);
undefined daPy_lk_c__checkElecReturnDamage(daPy_lk_c * this, dCcD_GObjInf * param_1, cXyz * param_2);
undefined daPy_lk_c__checkWallAtributeDamage(daPy_lk_c * this, dBgS_AcchCir * param_1);
undefined daPy_lk_c__changeDamageProc(daPy_lk_c * this);
undefined daPy_lk_c__changeAutoJumpProc(daPy_lk_c * this);
undefined daPy_lk_c__changeDemoProc(daPy_lk_c * this);
undefined daPy_lk_c__changeDeadProc(daPy_lk_c * this);
undefined daPy_lk_c__getDamageVec(daPy_lk_c * this, dCcD_GObjInf * param_1);
undefined daPy_lk_c__setOldRootQuaternion(daPy_lk_c * this, short param_1, short param_2, short param_3);
undefined daPy_lk_c__checkRestHPAnime(daPy_lk_c * this);
undefined daPy_lk_c__checkHeavyStateOn(daPy_lk_c * this);
undefined daPy_lk_c__checkBottleItem(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__checkDrinkBottleItem(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__checkOpenBottleItem(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__checkBowItem(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__checkPhotoBoxItem(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__checkScopeEnd(daPy_lk_c * this);
undefined daPy_lk_c__setSubjectMode(daPy_lk_c * this);
undefined daPy_lk_c__checkMaskDraw(daPy_lk_c * this);
undefined daPy_lk_c__checkSubjectEnd(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__checkGuardAccept(daPy_lk_c * this);
undefined daPy_lk_c__cancelNoDamageMode(daPy_lk_c * this);
undefined daPy_lk_c__commonProcInit(daPy_lk_c * this, daPy_PROC param_1);
undefined daPy_lk_c__procScope_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procScope(daPy_lk_c * this);
undefined daPy_lk_c__procSubjectivity_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procSubjectivity(daPy_lk_c * this);
undefined daPy_lk_c__procCall_init(daPy_lk_c * this);
undefined daPy_lk_c__procCall(daPy_lk_c * this);
undefined daPy_lk_c__procControllWait_init(daPy_lk_c * this);
undefined daPy_lk_c__procControllWait(daPy_lk_c * this);
undefined daPy_lk_c__procWait_init(daPy_lk_c * this);
undefined daPy_lk_c__procWait(daPy_lk_c * this);
undefined daPy_lk_c__procFreeWait_init(daPy_lk_c * this);
undefined daPy_lk_c__procFreeWait(daPy_lk_c * this);
undefined daPy_lk_c__procMove_init(daPy_lk_c * this);
undefined daPy_lk_c__procMove(daPy_lk_c * this);
undefined daPy_lk_c__procAtnMove_init(daPy_lk_c * this);
undefined daPy_lk_c__procAtnMove(daPy_lk_c * this);
undefined daPy_lk_c__procAtnActorWait_init(daPy_lk_c * this);
undefined daPy_lk_c__procAtnActorWait(daPy_lk_c * this);
undefined daPy_lk_c__procAtnActorMove_init(daPy_lk_c * this);
undefined daPy_lk_c__procAtnActorMove(daPy_lk_c * this);
undefined daPy_lk_c__procSideStep_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procSideStep(daPy_lk_c * this);
undefined daPy_lk_c__procSideStepLand_init(daPy_lk_c * this);
undefined daPy_lk_c__procSideStepLand(daPy_lk_c * this);
undefined daPy_lk_c__procCrouchDefense_init(daPy_lk_c * this);
undefined daPy_lk_c__procCrouchDefense(daPy_lk_c * this);
undefined daPy_lk_c__procCrouchDefenseSlip_init(daPy_lk_c * this);
undefined daPy_lk_c__procCrouchDefenseSlip(daPy_lk_c * this);
undefined daPy_lk_c__procCrouch_init(daPy_lk_c * this);
undefined daPy_lk_c__procCrouch(daPy_lk_c * this);
undefined daPy_lk_c__procWaitTurn_init(daPy_lk_c * this);
undefined daPy_lk_c__procWaitTurn(daPy_lk_c * this);
undefined daPy_lk_c__procMoveTurn_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procMoveTurn(daPy_lk_c * this);
undefined daPy_lk_c__procSlip_init(daPy_lk_c * this);
undefined daPy_lk_c__procSlip(daPy_lk_c * this);
undefined daPy_lk_c__procSlideFront_init(daPy_lk_c * this, short param_1);
undefined daPy_lk_c__procSlideFront(daPy_lk_c * this);
undefined daPy_lk_c__procSlideBack_init(daPy_lk_c * this, short param_1);
undefined daPy_lk_c__procSlideBack(daPy_lk_c * this);
undefined daPy_lk_c__procSlideFrontLand_init(daPy_lk_c * this);
undefined daPy_lk_c__procSlideFrontLand(daPy_lk_c * this);
undefined daPy_lk_c__procSlideBackLand_init(daPy_lk_c * this);
undefined daPy_lk_c__procSlideBackLand(daPy_lk_c * this);
undefined daPy_lk_c__procFrontRoll_init(daPy_lk_c * this, float param_1);
undefined daPy_lk_c__procFrontRoll(daPy_lk_c * this);
undefined daPy_lk_c__procFrontRollCrash_init(daPy_lk_c * this);
undefined daPy_lk_c__procFrontRollCrash(daPy_lk_c * this);
undefined daPy_lk_c__procNockBackEnd_init(daPy_lk_c * this);
undefined daPy_lk_c__procNockBackEnd(daPy_lk_c * this);
undefined daPy_lk_c__procSideRoll_init(daPy_lk_c * this);
undefined daPy_lk_c__procSideRoll(daPy_lk_c * this);
undefined daPy_lk_c__procBackJump_init(daPy_lk_c * this);
undefined daPy_lk_c__procBackJump(daPy_lk_c * this);
undefined daPy_lk_c__procBackJumpLand_init(daPy_lk_c * this);
undefined daPy_lk_c__procBackJumpLand(daPy_lk_c * this);
undefined daPy_lk_c__checkAutoJumpFlying(daPy_lk_c * this);
undefined daPy_lk_c__procAutoJump_init(daPy_lk_c * this);
undefined daPy_lk_c__procAutoJump(daPy_lk_c * this);
undefined daPy_lk_c__procLand_init(daPy_lk_c * this, float param_1, int param_2);
undefined daPy_lk_c__procLand(daPy_lk_c * this);
undefined daPy_lk_c__procLandDamage_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procLandDamage(daPy_lk_c * this);
undefined daPy_lk_c__procFall_init(daPy_lk_c * this, int param_1, float param_2);
undefined daPy_lk_c__procFall(daPy_lk_c * this);
undefined daPy_lk_c__procSlowFall_init(daPy_lk_c * this);
undefined daPy_lk_c__procSlowFall(daPy_lk_c * this);
undefined daPy_lk_c__procSmallJump_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procSmallJump(daPy_lk_c * this);
undefined daPy_lk_c__procVerticalJump_init(daPy_lk_c * this);
undefined daPy_lk_c__procVerticalJump(daPy_lk_c * this);
undefined daPy_lk_c__procGuardCrash(daPy_lk_c * this);
undefined daPy_lk_c__procDamage_init(daPy_lk_c * this);
undefined daPy_lk_c__procDamage(daPy_lk_c * this);
undefined daPy_lk_c__procPolyDamage_init(daPy_lk_c * this);
undefined daPy_lk_c__procPolyDamage(daPy_lk_c * this);
undefined daPy_lk_c__procLargeDamage_init(daPy_lk_c * this, int param_1, int param_2, short param_3, short param_4);
undefined daPy_lk_c__procLargeDamage(daPy_lk_c * this);
undefined daPy_lk_c__procLargeDamageUp_init(daPy_lk_c * this, int param_1, int param_2, short param_3, short param_4);
undefined daPy_lk_c__procLargeDamageUp(daPy_lk_c * this);
undefined daPy_lk_c__procLargeDamageWall_init(daPy_lk_c * this, int param_1, int param_2, short param_3, short param_4);
undefined daPy_lk_c__procLargeDamageWall(daPy_lk_c * this);
undefined daPy_lk_c__procLavaDamage_init(daPy_lk_c * this);
undefined daPy_lk_c__procLavaDamage(daPy_lk_c * this);
undefined daPy_lk_c__procElecDamage_init(daPy_lk_c * this, cXyz * param_1);
undefined daPy_lk_c__procElecDamage(daPy_lk_c * this);
undefined daPy_lk_c__procGuardSlip_init(daPy_lk_c * this);
undefined daPy_lk_c__procGuardSlip(daPy_lk_c * this);
undefined daPy_lk_c__procIceSlipFall_init(daPy_lk_c * this);
undefined daPy_lk_c__procIceSlipFall(daPy_lk_c * this);
undefined daPy_lk_c__procIceSlipFallUp_init(daPy_lk_c * this, int param_1, short param_2, short param_3);
undefined daPy_lk_c__procIceSlipFallUp(daPy_lk_c * this);
undefined daPy_lk_c__procIceSlipAlmostFall_init(daPy_lk_c * this);
undefined daPy_lk_c__procIceSlipAlmostFall(daPy_lk_c * this);
undefined daPy_lk_c__procBootsEquip_init(daPy_lk_c * this, ushort param_1);
undefined daPy_lk_c__procBootsEquip(daPy_lk_c * this);
undefined daPy_lk_c__procNotUse_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procNotUse(daPy_lk_c * this);
undefined daPy_lk_c__getGroundAngle(daPy_lk_c * this, cBgS_PolyInfo * param_1, short param_2);
undefined daPy_lk_c__setLegAngle(daPy_lk_c * this, float param_1, int param_2, short * param_3, short * param_4);
undefined daPy_lk_c__footBgCheck(daPy_lk_c * this);
undefined daPy_lk_c__setWaterY(daPy_lk_c * this);
undefined daPy_lk_c__autoGroundHit(daPy_lk_c * this);
undefined daPy_lk_c__checkAttentionPosAngle(daPy_lk_c * this, fopAc_ac_c * param_1, cXyz * * param_2);
undefined daPy_lk_c__setNeckAngle(daPy_lk_c * this);
undefined daPy_lk_c__checkOriginalHatAnimation(daPy_lk_c * this);
undefined daPy_lk_c__setHatAngle(daPy_lk_c * this);
undefined daPy_lk_c__setMoveSlantAngle(daPy_lk_c * this);
undefined daPy_lk_c__setWaistAngle(daPy_lk_c * this);
undefined daPy_lk_c__setWorldMatrix(daPy_lk_c * this);
undefined daPy_lk_c__setAtParam(daPy_lk_c * this, ulong param_1, int param_2, dCcG_At_Spl param_3, uchar param_4, uchar param_5, daPy_lk_c__PlayerAttackState attackState, float param_7);
undefined daPy_lk_c__resetCurse(daPy_lk_c * this);
undefined daPy_lk_c__checkLightHit(daPy_lk_c * this);
undefined daPy_lk_c__setSwordAtCollision(daPy_lk_c * this);
undefined daPy_lk_c__getBlurTopRate(daPy_lk_c * this);
undefined daPy_lk_c__setCollision(daPy_lk_c * this);
undefined daPy_lk_c__setAttentionPos(daPy_lk_c * this);
undefined daPy_lk_c__setRoomInfo(daPy_lk_c * this);
undefined daPy_lk_c__setDemoData(daPy_lk_c * this);
undefined daPy_lk_c__setStickData(daPy_lk_c * this);
undefined daPy_lk_c__setBgCheckParam(daPy_lk_c * this);
undefined daPy_lk_c__setParamData(daPy_lk_c * this, int param_1, int param_2, int param_3, int param_4);
undefined daPy_lk_c__checkLavaFace(daPy_lk_c * this, cXyz * param_1, int param_2);
undefined daPy_lk_c__checkFallCode(daPy_lk_c * this);
undefined daPy_lk_c__startRestartRoom(daPy_lk_c * this, ulong param_1, int param_2, float param_3, int param_4);
undefined daPy_lk_c__checkSuccessGuard(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__setShapeAngleOnGround(daPy_lk_c * this);
undefined daPy_lk_c__setStepsOffset(daPy_lk_c * this);
undefined daPy_lk_c__setBeltConveyerPower(daPy_lk_c * this);
undefined daPy_lk_c__setWindAtPower(daPy_lk_c * this);
undefined daPy_lk_c__checkRoofRestart(daPy_lk_c * this);
undefined daPy_lk_c__execute(daPy_lk_c * this);
undefined d_a_player_main__daPy_Execute();
undefined d_a_player_main__daPy_IsDelete();
undefined daPy_lk_c__playerDelete(daPy_lk_c * this);
undefined d_a_player_main__daPy_Delete();
undefined daPy_lk_c__initTextureAnime(daPy_lk_c * this);
undefined daPy_lk_c__initTextureScroll(daPy_lk_c * this);
undefined J3DTexGenBlock__setTexMtx(J3DTexGenBlock * this, ulong param_1, J3DTexMtx * param_2);
undefined daPy_lk_c__createHeap(daPy_lk_c * this);
undefined daPy_lk_c__createAnimeHeap(daPy_lk_c * this, JKRSolidHeap * * param_1, daPy_HEAP_TYPE param_2);
void JUTNameTab__JUTNameTab_destructor(JUTNameTab * this);
J3DModelData * daPy_lk_c__initModel(daPy_lk_c * this, J3DModel * * modelPointer, int modelFileIndex, ulong param_3);
undefined daPy_lk_c__entryBtk(daPy_lk_c * this, J3DModelData * param_1, int param_2);
undefined daPy_lk_c__entryBrk(daPy_lk_c * this, J3DModelData * param_1, int brkFileIndex);
undefined daPy_lk_c__playerInit(daPy_lk_c * this);
undefined d_a_player_main__phase_1();
undefined d_a_player_main__phase_2();
void daPy_lk_c__daPy_lk_c(daPy_lk_c * this);
void daPy_footData_c__daPy_footData_c_destructor(daPy_footData_c * this);
void daPy_footData_c__daPy_footData_c(daPy_footData_c * this);
undefined daPy_lk_c__makeBgWait(daPy_lk_c * this);
undefined d_a_player_main__phase_3();
undefined d_a_player_main__daPy_Create();
undefined daPy_lk_c__setSeAnime(daPy_lk_c * this, daPy_anmHeap_c * param_1, J3DFrameCtrl * param_2);
undefined daPy_lk_c__initSeAnime(daPy_lk_c * this);
undefined daPy_lk_c__resetSeAnime(daPy_lk_c * this);
undefined daPy_lk_c__setMoveAnime(daPy_lk_c * this, float param_1, float param_2, float param_3, daPy_ANM param_4, daPy_ANM param_5, int param_6, float param_7);
undefined daPy_lk_c__setSingleMoveAnime(daPy_lk_c * this, daPy_ANM param_1, float param_2, float param_3, short param_4, float param_5);
undefined daPy_lk_c__setActAnimeUpper(daPy_lk_c * this, ushort param_1, daPy_UPPER param_2, float param_3, float param_4, short param_5, float param_6);
undefined daPy_lk_c__resetActAnimeUpper(daPy_lk_c * this, daPy_UPPER param_1, float param_2);
undefined daPy_lk_c__animeUpdate(daPy_lk_c * this);
undefined daPy_lk_c__simpleAnmPlay(daPy_lk_c * this, J3DAnmBase * param_1);
undefined daPy_lk_c__setHandModel(daPy_lk_c * this, daPy_ANM param_1);
undefined daPy_lk_c__getAnmData(daPy_lk_c * this, daPy_ANM param_1);
undefined daPy_lk_c__checkGrabWeapon(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__onDekuSpReturnFlg(daPy_lk_c * this, uchar param_1);
undefined daPy_lk_c__changeTextureAnime(daPy_lk_c * this, ushort param_1, ushort param_2, int param_3);
undefined daPy_lk_c__setThrowDamage(daPy_lk_c * this, cXyz * param_1, short param_2, float param_3, float param_4, int param_5);
undefined daPy_lk_c__setPlayerPosAndAngle(daPy_lk_c * this, cXyz * param_1, short param_2);
// undefined daPy_lk_c__setPlayerPosAndAngle(daPy_lk_c * this, cXyz * param_1, csXyz * param_2);
// undefined daPy_lk_c__setPlayerPosAndAngle(daPy_lk_c * this, float * param_1);
undefined daPy_lk_c__endDemoMode(daPy_lk_c * this);
undefined daPy_lk_c__getBokoFlamePos(daPy_lk_c * this, cXyz * param_1);
undefined daPy_swimTailEcallBack_c__setup(daPy_swimTailEcallBack_c * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
undefined daPy_swimTailEcallBack_c__getMaxWaterY(daPy_swimTailEcallBack_c * this, cXyz * param_1);
int daPy_swimTailEcallBack_c__remove(daPy_swimTailEcallBack_c * this, char * __filename);
undefined daPy_swimTailEcallBack_c__execute(daPy_swimTailEcallBack_c * this, JPABaseEmitter * param_1);
undefined daPy_swimTailEcallBack_c__draw(daPy_swimTailEcallBack_c * this, JPABaseEmitter * param_1);
undefined daPy_sightPacket_c__draw(daPy_sightPacket_c * this);
undefined daPy_sightPacket_c__setSight(daPy_sightPacket_c * this);
undefined daPy_swBlur_c__initSwBlur(daPy_swBlur_c * this, float * param_1, int param_2, float param_3, int param_4);
undefined daPy_swBlur_c__copySwBlur(daPy_swBlur_c * this, float * param_1, int param_2);
undefined daPy_swBlur_c__draw(daPy_swBlur_c * this);
undefined daPy_fanSwingEcallBack_c__execute(daPy_fanSwingEcallBack_c * this, JPABaseEmitter * param_1);
undefined daPy_waterDropPcallBack_c__execute(daPy_waterDropPcallBack_c * this, JPABaseEmitter * param_1, JPABaseParticle * param_2);
undefined daPy_followEcallBack_c__execute(daPy_followEcallBack_c * this, JPABaseEmitter * param_1);
undefined daPy_followEcallBack_c__setup(daPy_followEcallBack_c * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
undefined daPy_followEcallBack_c__end(daPy_followEcallBack_c * this);
undefined daPy_waterDropEcallBack_c__execute(daPy_waterDropEcallBack_c * this, JPABaseEmitter * param_1);
undefined daPy_waterDropEcallBack_c__setup(daPy_waterDropEcallBack_c * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
undefined daPy_waterDropEcallBack_c__end(daPy_waterDropEcallBack_c * this);
undefined daPy_mtxPosFollowEcallBack_c__makeEmitterColor(daPy_mtxPosFollowEcallBack_c * this, ushort param_1, float * param_2, cXyz * param_3, csXyz * param_4, _GXColor * param_5, _GXColor * param_6);
undefined daPy_mtxPosFollowEcallBack_c__execute(daPy_mtxPosFollowEcallBack_c * this, JPABaseEmitter * param_1);
undefined daPy_dmEcallBack_c__execute(daPy_dmEcallBack_c * this, JPABaseEmitter * param_1);
undefined daPy_lk_c__setAuraEffect(daPy_lk_c * this);
undefined daPy_lk_c__setWaterRipple(daPy_lk_c * this);
undefined daPy_lk_c__setFootEffectType(daPy_lk_c * this, int param_1, cXyz * param_2, int param_3, int param_4);
undefined daPy_lk_c__setFootMark(daPy_lk_c * this, cXyz * param_1);
undefined daPy_lk_c__setFootEffect(daPy_lk_c * this);
undefined daPy_lk_c__resetFootEffect(daPy_lk_c * this);
undefined daPy_lk_c__setSwimTail(daPy_lk_c * this);
undefined daPy_lk_c__setCutWaterSplash(daPy_lk_c * this);
undefined daPy_lk_c__setSwimWaterDrop(daPy_lk_c * this, daPy_waterDropEcallBack_c * param_1);
undefined daPy_lk_c__setWaterDrop(daPy_lk_c * this);
undefined daPy_lk_c__setDamageFlameEmitter(daPy_lk_c * this);
undefined daPy_lk_c__setDamageCurseEmitter(daPy_lk_c * this);
undefined daPy_lk_c__setDamageElecEmitter(daPy_lk_c * this);
undefined daPy_lk_c__setDamageEmitter(daPy_lk_c * this);
undefined daPy_lk_c__endFlameDamageEmitter(daPy_lk_c * this);
undefined daPy_lk_c__endDamageEmitter(daPy_lk_c * this);
undefined daPy_lk_c__setItemWaterEffect(daPy_lk_c * this, fopAc_ac_c * param_1, int param_2, int param_3);
undefined daPy_lk_c__getDemoLookActor(daPy_lk_c * this);
undefined daPy_lk_c__setTinkleCeiverModel(daPy_lk_c * this);
undefined daPy_lk_c__setTalismanModel(daPy_lk_c * this);
undefined daPy_lk_c__setLetterModel(daPy_lk_c * this);
undefined daPy_lk_c__checkCaughtShapeHide(daPy_lk_c * this);
undefined daPy_lk_c__setShapeAngleToTalkActor(daPy_lk_c * this);
undefined daPy_lk_c__checkEndMessage(daPy_lk_c * this, ulong param_1);
undefined daPy_lk_c__setTalkStartBack(daPy_lk_c * this);
undefined daPy_lk_c__dProcTool_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcTool(daPy_lk_c * this);
undefined daPy_lk_c__dProcTalk_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcTalk(daPy_lk_c * this);
undefined daPy_lk_c__dProcDamage_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcDamage(daPy_lk_c * this);
undefined daPy_lk_c__dProcHoldup_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcHoldup(daPy_lk_c * this);
undefined daPy_lk_c__dProcOpenTreasure_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcOpenTreasure(daPy_lk_c * this);
undefined daPy_lk_c__setGetItemSound(daPy_lk_c * this, ushort param_1, int param_2);
undefined daPy_lk_c__setGetDemo(daPy_lk_c * this);
undefined daPy_lk_c__dProcGetItem_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcGetItem(daPy_lk_c * this);
undefined daPy_lk_c__dProcUnequip_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcUnequip(daPy_lk_c * this);
undefined daPy_lk_c__dProcLavaDamage_init_sub(daPy_lk_c * this);
undefined daPy_lk_c__dProcLavaDamage_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcLavaDamage(daPy_lk_c * this);
undefined daPy_lk_c__dProcFreezeDamage_init_sub(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__dProcFreezeDamage_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcFreezeDamage(daPy_lk_c * this);
undefined daPy_lk_c__dProcDead_init_sub(daPy_lk_c * this);
undefined daPy_lk_c__dProcDead_init_sub2(daPy_lk_c * this);
undefined daPy_lk_c__checkGameOverStart(daPy_lk_c * this);
undefined daPy_lk_c__dProcDead_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcDead(daPy_lk_c * this);
undefined daPy_lk_c__dProcLookAround_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcLookAround(daPy_lk_c * this);
undefined daPy_lk_c__dProcSalute_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcSalute(daPy_lk_c * this);
undefined daPy_lk_c__dProcLookAround2_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcLookAround2(daPy_lk_c * this);
undefined daPy_lk_c__dProcTalismanPickup_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcTalismanPickup(daPy_lk_c * this);
undefined daPy_lk_c__dProcTalismanWait_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcTalismanWait(daPy_lk_c * this);
undefined daPy_lk_c__dProcSurprised_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcSurprised(daPy_lk_c * this);
undefined daPy_lk_c__dProcTurnBack_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcTurnBack(daPy_lk_c * this);
undefined daPy_lk_c__dProcLookUp_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcLookUp(daPy_lk_c * this);
undefined daPy_lk_c__dProcQuakeWait_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcQuakeWait(daPy_lk_c * this);
undefined daPy_lk_c__dProcDance_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcDance(daPy_lk_c * this);
undefined daPy_lk_c__dProcCaught_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcCaught(daPy_lk_c * this);
undefined daPy_lk_c__dProcLookWait_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcLookWait(daPy_lk_c * this);
undefined daPy_lk_c__dProcPushPullWait_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcPushPullWait(daPy_lk_c * this);
undefined daPy_lk_c__dProcPushMove_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcPushMove(daPy_lk_c * this);
undefined daPy_lk_c__dProcDoorOpen_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcDoorOpen(daPy_lk_c * this);
undefined daPy_lk_c__dProcNod_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcNod(daPy_lk_c * this);
undefined daPy_lk_c__dProcPresent_init_sub(daPy_lk_c * this);
undefined daPy_lk_c__dProcPresent_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcPresent(daPy_lk_c * this);
undefined daPy_lk_c__dProcWindChange_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcWindChange(daPy_lk_c * this);
undefined daPy_lk_c__dProcStandItemPut_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcStandItemPut(daPy_lk_c * this);
undefined daPy_lk_c__dProcVorcanoFail_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcVorcanoFail(daPy_lk_c * this);
undefined daPy_lk_c__dProcSlightSurprised_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcSlightSurprised(daPy_lk_c * this);
undefined daPy_lk_c__dProcSmile_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcSmile(daPy_lk_c * this);
undefined daPy_lk_c__dProcBossWarp_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcBossWarp(daPy_lk_c * this);
undefined daPy_lk_c__dProcAgbUse_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcAgbUse(daPy_lk_c * this);
undefined daPy_lk_c__dProcLookTurn_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcLookTurn(daPy_lk_c * this);
undefined daPy_lk_c__dProcLetterOpen_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcLetterOpen(daPy_lk_c * this);
undefined daPy_lk_c__dProcLetterRead_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcLetterRead(daPy_lk_c * this);
undefined daPy_lk_c__dProcRedeadStop_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcRedeadStop(daPy_lk_c * this);
undefined daPy_lk_c__dProcRedeadCatch_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcRedeadCatch(daPy_lk_c * this);
undefined daPy_lk_c__dProcGetDance_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcGetDance(daPy_lk_c * this);
undefined daPy_lk_c__dProcBottleOpenFairy_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcBottleOpenFairy(daPy_lk_c * this);
undefined daPy_lk_c__dProcWarpShort_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcWarpShort(daPy_lk_c * this);
undefined daPy_lk_c__dProcOpenSalvageTreasure_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcOpenSalvageTreasure(daPy_lk_c * this);
undefined daPy_lk_c__dProcSurprisedWait_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcSurprisedWait(daPy_lk_c * this);
undefined daPy_lk_c__dProcPowerUpWait_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcPowerUp_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcPowerUp(daPy_lk_c * this);
undefined daPy_lk_c__dProcShipSit_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcShipSit(daPy_lk_c * this);
undefined daPy_lk_c__dProcLastCombo_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcLastCombo(daPy_lk_c * this);
undefined daPy_lk_c__dProcHandUp_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcHandUp(daPy_lk_c * this);
undefined daPy_lk_c__dProcIceSlip_init(daPy_lk_c * this);
undefined daPy_lk_c__dProcIceSlip(daPy_lk_c * this);
undefined daPy_lk_c__getLadderMoveAnmSpeed(daPy_lk_c * this);
undefined daPy_lk_c__setLadderFootSe(daPy_lk_c * this);
undefined daPy_lk_c__changeLadderMoveProc(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__setMoveBGLadderCorrect(daPy_lk_c * this);
undefined daPy_lk_c__procLadderUpStart_init_sub(daPy_lk_c * this);
undefined daPy_lk_c__procLadderUpStart_init(daPy_lk_c * this);
undefined daPy_lk_c__procLadderUpStart(daPy_lk_c * this);
undefined daPy_lk_c__procLadderUpEnd_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procLadderUpEnd(daPy_lk_c * this);
undefined daPy_lk_c__procLadderDownStart_init_sub(daPy_lk_c * this);
undefined daPy_lk_c__procLadderDownStart_init(daPy_lk_c * this);
undefined daPy_lk_c__procLadderDownStart(daPy_lk_c * this);
undefined daPy_lk_c__procLadderDownEnd_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procLadderDownEnd(daPy_lk_c * this);
undefined daPy_lk_c__procLadderMove_init(daPy_lk_c * this, int param_1, int param_2, cXyz * param_3);
undefined daPy_lk_c__procLadderMove(daPy_lk_c * this);
undefined daPy_lk_c__getHangMoveAnmSpeed(daPy_lk_c * this);
undefined daPy_lk_c__getHangDirectionFromAngle(daPy_lk_c * this);
undefined daPy_lk_c__changeHangMoveProc(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__changeHangEndProc(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__setHangShapeOffset(daPy_lk_c * this);
undefined daPy_lk_c__procHangStart_init(daPy_lk_c * this);
undefined daPy_lk_c__procHangStart(daPy_lk_c * this);
undefined daPy_lk_c__procHangFallStart_init(daPy_lk_c * this, cM3dGPla * param_1);
undefined daPy_lk_c__procHangFallStart(daPy_lk_c * this);
undefined daPy_lk_c__procHangUp_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procHangUp(daPy_lk_c * this);
undefined daPy_lk_c__procHangWait_init(daPy_lk_c * this);
undefined daPy_lk_c__procHangWait(daPy_lk_c * this);
undefined daPy_lk_c__procHangMove_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procHangMove(daPy_lk_c * this);
undefined daPy_lk_c__procHangClimb_init(daPy_lk_c * this, float param_1);
undefined daPy_lk_c__procHangClimb(daPy_lk_c * this);
undefined daPy_lk_c__procHangWallCatch_init(daPy_lk_c * this);
undefined daPy_lk_c__procHangWallCatch(daPy_lk_c * this);
undefined daPy_lk_c__getClimbMoveAnmSpeed(daPy_lk_c * this);
undefined daPy_lk_c__setClimbShapeOffset(daPy_lk_c * this);
undefined daPy_lk_c__getClimbDirectionFromAngle(daPy_lk_c * this);
undefined daPy_lk_c__changeClimbMoveProc(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__setMoveBGCorrectClimb(daPy_lk_c * this);
undefined daPy_lk_c__checkBgCorrectClimbMove(daPy_lk_c * this, cXyz * param_1, cXyz * param_2);
undefined daPy_lk_c__checkBgClimbMove(daPy_lk_c * this);
undefined daPy_lk_c__procClimbUpStart_init_sub(daPy_lk_c * this);
undefined daPy_lk_c__procClimbUpStart_init(daPy_lk_c * this);
undefined daPy_lk_c__procClimbUpStart(daPy_lk_c * this);
undefined daPy_lk_c__procClimbDownStart_init(daPy_lk_c * this, short param_1);
undefined daPy_lk_c__procClimbDownStart(daPy_lk_c * this);
undefined daPy_lk_c__procClimbMoveUpDown_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procClimbMoveUpDown(daPy_lk_c * this);
undefined daPy_lk_c__procClimbMoveSide_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procClimbMoveSide(daPy_lk_c * this);
undefined daPy_lk_c__setBlendWHideMoveAnime(daPy_lk_c * this, float param_1);
undefined daPy_lk_c__getWHideModePolygon(daPy_lk_c * this, cXyz * param_1, cXyz * param_2, cXyz * param_3, int param_4);
undefined daPy_lk_c__getWHideBasePos(daPy_lk_c * this, cXyz * param_1);
undefined daPy_lk_c__getWHideNextPos(daPy_lk_c * this, cXyz * param_1, cXyz * param_2);
undefined daPy_lk_c__checkWHideBackWall(daPy_lk_c * this, cXyz * param_1);
undefined daPy_lk_c__checkWHideFrontFloor(daPy_lk_c * this, cXyz * param_1);
undefined daPy_lk_c__checkWHideModeChange(daPy_lk_c * this, cXyz * param_1);
undefined daPy_lk_c__changeWHideEndProc(daPy_lk_c * this, cXyz * param_1);
undefined daPy_lk_c__procWHideReady_init(daPy_lk_c * this, cM3dGPla * param_1, cXyz * param_2);
undefined daPy_lk_c__procWHideReady(daPy_lk_c * this);
undefined daPy_lk_c__procWHideWait_init(daPy_lk_c * this);
undefined daPy_lk_c__procWHideWait(daPy_lk_c * this);
undefined daPy_lk_c__procWHideMove_init(daPy_lk_c * this);
undefined daPy_lk_c__procWHideMove(daPy_lk_c * this);
undefined daPy_lk_c__procWHidePeep_init(daPy_lk_c * this);
undefined daPy_lk_c__procWHidePeep(daPy_lk_c * this);
undefined daPy_lk_c__getCrawlMoveAnmSpeed(daPy_lk_c * this);
undefined daPy_lk_c__getCrawlMoveSpeed(daPy_lk_c * this);
undefined daPy_lk_c__setCrawlMoveDirectionArrow(daPy_lk_c * this);
undefined daPy_lk_c__changeCrawlAutoMoveProc(daPy_lk_c * this, cXyz * param_1);
undefined daPy_lk_c__getCrawlMoveVec(daPy_lk_c * this, cXyz * param_1, cXyz * param_2, cXyz * param_3);
undefined daPy_lk_c__crawlBgCheck(daPy_lk_c * this, cXyz * param_1, cXyz * param_2);
undefined daPy_lk_c__checkCrawlSideWall(daPy_lk_c * this, cXyz * param_1, cXyz * param_2, cXyz * param_3, cXyz * param_4, short * param_5, short * param_6);
undefined daPy_lk_c__setDoStatusCrawl(daPy_lk_c * this);
undefined daPy_lk_c__procCrawlStart_init(daPy_lk_c * this);
undefined daPy_lk_c__procCrawlStart(daPy_lk_c * this);
undefined daPy_lk_c__checkNotCrawlStand(daPy_lk_c * this, cXyz * param_1);
// undefined daPy_lk_c__checkNotCrawlStand(daPy_lk_c * this, cXyz * param_1, cXyz * param_2);
undefined daPy_lk_c__procCrawlMove_init(daPy_lk_c * this, short param_1, short param_2);
undefined daPy_lk_c__procCrawlMove(daPy_lk_c * this);
undefined daPy_lk_c__procCrawlAutoMove_init(daPy_lk_c * this, int param_1, cXyz * param_2);
undefined daPy_lk_c__procCrawlAutoMove(daPy_lk_c * this);
undefined daPy_lk_c__procCrawlEnd_init(daPy_lk_c * this, int param_1, short param_2, short param_3);
undefined daPy_lk_c__procCrawlEnd(daPy_lk_c * this);
undefined daPy_lk_c__checkGrabSpecialHeavyState(daPy_lk_c * this);
undefined daPy_lk_c__getGrabMissActor(daPy_lk_c * this);
undefined daPy_lk_c__setWeaponBlur(daPy_lk_c * this);
undefined daPy_lk_c__checkGrabBarrelSearch(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__setGrabItemPos(daPy_lk_c * this);
undefined daPy_lk_c__freeGrabItem(daPy_lk_c * this);
undefined daPy_lk_c__checkNextActionGrab(daPy_lk_c * this);
undefined daPy_lk_c__initGrabNextMode(daPy_lk_c * this);
undefined daPy_lk_c__procGrabReady_init(daPy_lk_c * this);
undefined daPy_lk_c__procGrabReady(daPy_lk_c * this);
undefined daPy_lk_c__procGrabUp_init(daPy_lk_c * this);
undefined daPy_lk_c__procGrabUp(daPy_lk_c * this);
undefined daPy_lk_c__procGrabMiss_init(daPy_lk_c * this);
undefined daPy_lk_c__procGrabMiss(daPy_lk_c * this);
undefined daPy_lk_c__procGrabThrow_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procGrabThrow(daPy_lk_c * this);
undefined daPy_lk_c__procGrabPut_init(daPy_lk_c * this);
undefined daPy_lk_c__procGrabPut(daPy_lk_c * this);
undefined daPy_lk_c__procGrabWait_init(daPy_lk_c * this);
undefined daPy_lk_c__procGrabWait(daPy_lk_c * this);
undefined daPy_lk_c__procGrabHeavyWait_init(daPy_lk_c * this);
undefined daPy_lk_c__procGrabHeavyWait(daPy_lk_c * this);
undefined daPy_lk_c__procGrabRebound_init(daPy_lk_c * this);
undefined daPy_lk_c__procGrabRebound(daPy_lk_c * this);
undefined daPy_lk_c__setSpeedAndAngleSwim(daPy_lk_c * this);
undefined daPy_lk_c__checkNextModeSwim(daPy_lk_c * this);
undefined daPy_lk_c__changeSwimProc(daPy_lk_c * this);
undefined daPy_lk_c__changeSwimUpProc(daPy_lk_c * this);
undefined daPy_lk_c__swimOutAfter(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__checkSwimFallCheck(daPy_lk_c * this);
undefined daPy_lk_c__changeSwimOutProc(daPy_lk_c * this);
undefined daPy_lk_c__setSwimMoveAnime(daPy_lk_c * this, daPy_ANM param_1);
undefined daPy_lk_c__getSwimTimerRate(daPy_lk_c * this);
undefined daPy_lk_c__setSwimTimerStartStop(daPy_lk_c * this);
undefined daPy_lk_c__procSwimUp_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procSwimUp(daPy_lk_c * this);
undefined daPy_lk_c__procSwimWait_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procSwimWait(daPy_lk_c * this);
undefined daPy_lk_c__procSwimMove_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procSwimMove(daPy_lk_c * this);
undefined daPy_lk_c__setSpecialBattle(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__changeSpecialBattle(daPy_lk_c * this);
undefined daPy_lk_c__procBtJump_init(daPy_lk_c * this, fopEn_enemy_c * enemy);
undefined daPy_lk_c__procBtJump(daPy_lk_c * this);
undefined daPy_lk_c__procBtJumpCut_init(daPy_lk_c * this, cXyz * param_1);
undefined daPy_lk_c__procBtJumpCut(daPy_lk_c * this);
undefined daPy_lk_c__procBtSlide(daPy_lk_c * this);
undefined daPy_lk_c__procBtRoll_init(daPy_lk_c * this, fopEn_enemy_c * enemy);
undefined daPy_lk_c__procBtRoll(daPy_lk_c * this);
undefined daPy_lk_c__procBtRollCut_init(daPy_lk_c * this, cXyz * param_1);
undefined daPy_lk_c__procBtRollCut(daPy_lk_c * this);
undefined daPy_lk_c__procBtVerticalJump_init(daPy_lk_c * this, fopEn_enemy_c * enemy);
undefined daPy_lk_c__procBtVerticalJump(daPy_lk_c * this);
undefined daPy_lk_c__procBtVerticalJumpCut_init(daPy_lk_c * this);
undefined daPy_lk_c__procBtVerticalJumpCut(daPy_lk_c * this);
undefined daPy_lk_c__procBtVerticalJumpLand_init(daPy_lk_c * this);
undefined daPy_lk_c__procBtVerticalJumpLand(daPy_lk_c * this);
undefined daPy_lk_c__shipSpecialDemoStart(daPy_lk_c * this);
undefined daPy_lk_c__checkJumpRideShip(daPy_lk_c * this);
undefined daPy_lk_c__checkShipNotNormalMode(daPy_lk_c * this);
undefined daPy_lk_c__setShipRideArmAngle(daPy_lk_c * this, int param_1, J3DTransformInfo * param_2);
undefined daPy_lk_c__checkShipRideUseItem(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__initShipRideUseItem(daPy_lk_c * this, int param_1, int param_2);
undefined daPy_lk_c__setShipRidePosUseItem(daPy_lk_c * this);
undefined daPy_lk_c__setShipRidePos(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__setShipAttentionAnmSpeed(daPy_lk_c * this, float param_1);
undefined daPy_lk_c__setShipAttnetionBodyAngle(daPy_lk_c * this);
undefined daPy_lk_c__changeShipEndProc(daPy_lk_c * this);
undefined daPy_lk_c__initShipBaseAnime(daPy_lk_c * this);
undefined daPy_lk_c__initShipCraneAnime(daPy_lk_c * this);
undefined daPy_lk_c__procShipReady_init(daPy_lk_c * this);
undefined daPy_lk_c__procShipReady(daPy_lk_c * this);
undefined daPy_lk_c__procShipJumpRide_init(daPy_lk_c * this);
undefined daPy_lk_c__procShipJumpRide(daPy_lk_c * this);
undefined daPy_lk_c__procShipSteer_init(daPy_lk_c * this);
undefined daPy_lk_c__procShipSteer(daPy_lk_c * this);
undefined daPy_lk_c__procShipPaddle_init(daPy_lk_c * this);
undefined daPy_lk_c__procShipPaddle(daPy_lk_c * this);
undefined daPy_lk_c__procShipScope_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procShipScope(daPy_lk_c * this);
undefined daPy_lk_c__procShipBoomerang_init(daPy_lk_c * this);
undefined daPy_lk_c__procShipBoomerang(daPy_lk_c * this);
undefined daPy_lk_c__procShipHookshot_init(daPy_lk_c * this);
undefined daPy_lk_c__procShipHookshot(daPy_lk_c * this);
undefined daPy_lk_c__procShipBow_init(daPy_lk_c * this);
undefined daPy_lk_c__procShipBow(daPy_lk_c * this);
undefined daPy_lk_c__procShipCannon_init(daPy_lk_c * this);
undefined daPy_lk_c__procShipCannon(daPy_lk_c * this);
undefined daPy_lk_c__procShipCrane_init(daPy_lk_c * this);
undefined daPy_lk_c__procShipCrane(daPy_lk_c * this);
undefined daPy_lk_c__procShipGetOff_init(daPy_lk_c * this);
undefined daPy_lk_c__procShipGetOff(daPy_lk_c * this);
undefined daPy_lk_c__procShipRestart_init(daPy_lk_c * this);
undefined daPy_lk_c__procShipRestart(daPy_lk_c * this);
undefined daPy_lk_c__checkRopeAnime(daPy_lk_c * this);
undefined daPy_lk_c__freeRopeItem(daPy_lk_c * this);
undefined daPy_lk_c__checkRopeRoofHit(daPy_lk_c * this, short param_1);
undefined daPy_lk_c__changeRopeSwingProc(daPy_lk_c * this);
undefined daPy_lk_c__changeRopeEndProc(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__checkSpecialRope(daPy_lk_c * this);
undefined daPy_lk_c__changeRopeToHangProc(daPy_lk_c * this);
undefined daPy_lk_c__checkRopeSwingWall(daPy_lk_c * this, cXyz * param_1, cXyz * param_2, short * param_3, float * param_4);
undefined daPy_lk_c__setBlendRopeMoveAnime(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__throwRope(daPy_lk_c * this);
undefined daPy_lk_c__checkNextActionRopeReady(daPy_lk_c * this);
undefined daPy_lk_c__checkNextRopeMode(daPy_lk_c * this);
undefined daPy_lk_c__checkHangRopeActorNull(daPy_lk_c * this);
undefined daPy_lk_c__procRopeSubject_init(daPy_lk_c * this);
undefined daPy_lk_c__procRopeSubject(daPy_lk_c * this);
undefined daPy_lk_c__procRopeReady_init(daPy_lk_c * this);
undefined daPy_lk_c__procRopeReady(daPy_lk_c * this);
undefined daPy_lk_c__procRopeSwing_init(daPy_lk_c * this, fopAc_ac_c * param_1, short param_2);
undefined daPy_lk_c__procRopeSwing(daPy_lk_c * this);
undefined daPy_lk_c__procRopeHangWait_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procRopeHangWait(daPy_lk_c * this);
undefined daPy_lk_c__specialRopeHangUp(daPy_lk_c * this);
undefined daPy_lk_c__procRopeUp_init(daPy_lk_c * this);
undefined daPy_lk_c__procRopeUp(daPy_lk_c * this);
undefined daPy_lk_c__procRopeDown_init(daPy_lk_c * this);
undefined daPy_lk_c__procRopeDown(daPy_lk_c * this);
undefined daPy_lk_c__procRopeSwingStart_init(daPy_lk_c * this);
undefined daPy_lk_c__procRopeSwingStart(daPy_lk_c * this);
undefined daPy_lk_c__procRopeMove_init(daPy_lk_c * this);
undefined daPy_lk_c__procRopeMove(daPy_lk_c * this);
undefined daPy_lk_c__procRopeThrowCatch_init(daPy_lk_c * this);
undefined daPy_lk_c__procRopeThrowCatch(daPy_lk_c * this);
undefined daPy_lk_c__procRopeUpHang_init(daPy_lk_c * this);
undefined daPy_lk_c__procRopeUpHang(daPy_lk_c * this);
undefined daPy_lk_c__checkRopeReadyAnime(daPy_lk_c * this);
undefined daPy_lk_c__checkRopeTag(daPy_lk_c * this);
undefined daPy_lk_c__checkPlayerNoDraw(daPy_lk_c * this);
void daPy_swBlur_c__daPy_swBlur_c_destructor(daPy_swBlur_c * this);
void daPy_mtxPosFollowEcallBack_c__daPy_mtxPosFollowEcallBack_c(daPy_mtxPosFollowEcallBack_c * this);
void daPy_fanSwingEcallBack_c__daPy_fanSwingEcallBack_c_destructor(daPy_fanSwingEcallBack_c * this);
void daPy_dmEcallBack_c__daPy_dmEcallBack_c_destructor(daPy_dmEcallBack_c * this);
void daPy_dmEcallBack_c__daPy_dmEcallBack_c(daPy_dmEcallBack_c * this);
void daPy_mtxPosFollowEcallBack_c__daPy_mtxPosFollowEcallBack_c_destructor(daPy_mtxPosFollowEcallBack_c * this);
void daPy_waterDropEcallBack_c__daPy_waterDropEcallBack_c_destructor(daPy_waterDropEcallBack_c * this);
void daPy_followEcallBack_c__daPy_followEcallBack_c_destructor(daPy_followEcallBack_c * this);
void daPy_swimTailEcallBack_c__daPy_swimTailEcallBack_c_destructor(daPy_swimTailEcallBack_c * this);
void daPy_swimTailEcallBack_c__daPy_swimTailEcallBack_c(daPy_swimTailEcallBack_c * this);
void daPy_footEffect_c__daPy_footEffect_c_destructor(daPy_footEffect_c * this);
void daPy_footEffect_c__daPy_footEffect_c(daPy_footEffect_c * this);
void daPy_sightPacket_c__daPy_sightPacket_c_destructor(daPy_sightPacket_c * this);
void J3DFrameCtrl__J3DFrameCtrl(J3DFrameCtrl * this);
void mDoExt_AnmRatioPack__mDoExt_AnmRatioPack_destructor(mDoExt_AnmRatioPack * this);
void mDoExt_AnmRatioPack__mDoExt_AnmRatioPack(mDoExt_AnmRatioPack * this);
void dBgS_MirLightLinChk__dBgS_MirLightLinChk_destructor(dBgS_MirLightLinChk * this);
void dBgS_LinkRoofChk__dBgS_LinkRoofChk_destructor(dBgS_LinkRoofChk * this);
void dBgS_LinkGndChk__dBgS_LinkGndChk_destructor(dBgS_LinkGndChk * this);
undefined daPy_lk_c__getGroundY(daPy_lk_c * this);
undefined daPy_lk_c__getLeftHandMatrix(daPy_lk_c * this);
undefined daPy_lk_c__getRightHandMatrix(daPy_lk_c * this);
undefined daPy_lk_c__checkPlayerFly(daPy_lk_c * this);
undefined daPy_lk_c__checkFrontRoll(daPy_lk_c * this);
undefined daPy_lk_c__checkBottleSwing(daPy_lk_c * this);
undefined daPy_lk_c__checkCutCharge(daPy_lk_c * this);
undefined daPy_lk_c__checkTactWait(daPy_lk_c * this);
undefined daPy_lk_c__getBaseAnimeFrameRate(daPy_lk_c * this);
undefined daPy_lk_c__getBaseAnimeFrame(daPy_lk_c * this);
undefined daPy_lk_c__getItemID(daPy_lk_c * this);
undefined daPy_lk_c__getThrowBoomerangID(daPy_lk_c * this);
undefined daPy_lk_c__getGrabActorID(daPy_lk_c * this);
undefined daPy_lk_c__checkGrabBarrel(daPy_lk_c * this);
undefined daPy_lk_c__onFrollCrashFlg(daPy_lk_c * this, ulong param_1);
undefined daPy_lk_c__getOldSpeedY(daPy_lk_c * this);
undefined daPy_lk_c__checkComboCutTurn(daPy_lk_c * this);
undefined daPy_lk_c__cancelChangeTextureAnime(daPy_lk_c * this);
void daPy_matAnm_c__daPy_matAnm_c_destructor(daPy_matAnm_c * this);
void daPy_waterDropPcallBack_c__daPy_waterDropPcallBack_c_destructor(daPy_waterDropPcallBack_c * this);
undefined daPy_fanSwingEcallBack_c__setup(daPy_fanSwingEcallBack_c * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
undefined d_a_player_main____sinit_d_a_player_main_cpp();
// void dBgS_LinkGndChk__dBgS_LinkGndChk_destructor(dBgS_LinkGndChk * this);
// void dBgS_LinkGndChk__dBgS_LinkGndChk_destructor(dBgS_LinkGndChk * this);
// void dBgS_LinkGndChk__dBgS_LinkGndChk_destructor(dBgS_LinkGndChk * this);
// void dBgS_LinkRoofChk__dBgS_LinkRoofChk_destructor(dBgS_LinkRoofChk * this);
// void dBgS_LinkRoofChk__dBgS_LinkRoofChk_destructor(dBgS_LinkRoofChk * this);
// void dBgS_LinkRoofChk__dBgS_LinkRoofChk_destructor(dBgS_LinkRoofChk * this);
// void dBgS_MirLightLinChk__dBgS_MirLightLinChk_destructor(dBgS_MirLightLinChk * this);
// void dBgS_MirLightLinChk__dBgS_MirLightLinChk_destructor(dBgS_MirLightLinChk * this);
// void dBgS_MirLightLinChk__dBgS_MirLightLinChk_destructor(dBgS_MirLightLinChk * this);
undefined daPy_lk_c__checkBoomerangAnime(daPy_lk_c * this);
undefined daPy_lk_c__throwBoomerang(daPy_lk_c * this);
undefined daPy_lk_c__returnBoomerang(daPy_lk_c * this);
undefined daPy_lk_c__checkNextActionBoomerangReady(daPy_lk_c * this);
undefined daPy_lk_c__checkNextActionBoomerangFly(daPy_lk_c * this);
undefined daPy_lk_c__checkNextBoomerangMode(daPy_lk_c * this);
undefined daPy_lk_c__changeBoomerangCatchProc(daPy_lk_c * this);
undefined daPy_lk_c__procBoomerangSubject_init(daPy_lk_c * this);
undefined daPy_lk_c__procBoomerangSubject(daPy_lk_c * this);
undefined daPy_lk_c__procBoomerangMove_init(daPy_lk_c * this);
undefined daPy_lk_c__procBoomerangMove(daPy_lk_c * this);
undefined daPy_lk_c__procBoomerangCatch_init(daPy_lk_c * this);
undefined daPy_lk_c__procBoomerangCatch(daPy_lk_c * this);
undefined daPy_lk_c__bowJointCB(daPy_lk_c * this, int param_1);
undefined d_a_player_main__daPy_bowJointCB();
undefined daPy_lk_c__bowButton(daPy_lk_c * this);
undefined daPy_lk_c__checkBowReadyAnime(daPy_lk_c * this);
undefined daPy_lk_c__checkBowAnime(daPy_lk_c * this);
undefined daPy_lk_c__makeArrow(daPy_lk_c * this);
undefined daPy_lk_c__deleteArrow(daPy_lk_c * this);
undefined daPy_lk_c__setBowReadyAnime(daPy_lk_c * this);
undefined daPy_lk_c__setBowReloadAnime(daPy_lk_c * this);
undefined daPy_lk_c__checkNextActionBowReady(daPy_lk_c * this);
undefined daPy_lk_c__checkNextActionBowFly(daPy_lk_c * this);
undefined daPy_lk_c__checkNextBowMode(daPy_lk_c * this);
undefined daPy_lk_c__setBowModel(daPy_lk_c * this);
undefined daPy_lk_c__procBowSubject_init(daPy_lk_c * this);
undefined daPy_lk_c__procBowSubject(daPy_lk_c * this);
undefined daPy_lk_c__procBowMove_init(daPy_lk_c * this);
undefined daPy_lk_c__procBowMove(daPy_lk_c * this);
undefined daPy_lk_c__checkHookshotReturn(daPy_lk_c * this);
undefined daPy_lk_c__setHookshotCarryOffset(daPy_lk_c * this, uint param_1, cXyz * param_2);
undefined daPy_lk_c__setHookshotModel(daPy_lk_c * this);
undefined daPy_lk_c__setHookshotSight(daPy_lk_c * this);
undefined daPy_lk_c__freeHookshotItem(daPy_lk_c * this);
undefined daPy_lk_c__checkNextActionHookshotReady(daPy_lk_c * this);
undefined daPy_lk_c__checkNextHookshotMode(daPy_lk_c * this);
undefined daPy_lk_c__procHookshotSubject_init(daPy_lk_c * this);
undefined daPy_lk_c__procHookshotSubject(daPy_lk_c * this);
undefined daPy_lk_c__procHookshotMove_init(daPy_lk_c * this);
undefined daPy_lk_c__procHookshotMove(daPy_lk_c * this);
undefined daPy_lk_c__procHookshotFly_init(daPy_lk_c * this);
undefined daPy_lk_c__procHookshotFly(daPy_lk_c * this);
undefined daHookshot_c__getMoveVec(daHookshot_c * this);
undefined daPy_lk_c__fanWindEffectDraw(daPy_lk_c * this);
undefined daPy_lk_c__fanWindCrashEffectDraw(daPy_lk_c * this);
undefined daPy_lk_c__fanJointCB(daPy_lk_c * this, int param_1);
undefined d_a_player_main__daPy_fanJointCallback();
undefined daPy_lk_c__parachuteJointCB(daPy_lk_c * this, int param_1);
undefined d_a_player_main__daPy_parachuteJointCallback();
undefined daPy_lk_c__setShapeFanLeaf(daPy_lk_c * this);
undefined daPy_lk_c__checkFanGlideProc(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__setFanModel(daPy_lk_c * this);
undefined daPy_lk_c__setSmallFanModel(daPy_lk_c * this);
undefined daPy_lk_c__setParachuteFanModel(daPy_lk_c * this, float param_1);
undefined daPy_lk_c__procFanSwing_init(daPy_lk_c * this);
undefined daPy_lk_c__procFanSwing(daPy_lk_c * this);
undefined daPy_lk_c__procFanGlide_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procFanGlide(daPy_lk_c * this);
undefined daPy_lk_c__getDayNightParamData(daPy_lk_c * this);
undefined daPy_lk_c__setTactModel(daPy_lk_c * this);
undefined daPy_lk_c__checkNpcStatus(daPy_lk_c * this);
undefined daPy_lk_c__getTactPlayRightArmAnm(daPy_lk_c * this, long param_1);
undefined daPy_lk_c__getTactPlayLeftArmAnm(daPy_lk_c * this, long param_1);
undefined daPy_lk_c__checkEndTactMusic(daPy_lk_c * this);
undefined daPy_lk_c__getTactMetronomeRate(daPy_lk_c * this);
undefined daPy_lk_c__checkTactLastInput(daPy_lk_c * this);
undefined daPy_lk_c__setTactZev(daPy_lk_c * this, uint param_1, int param_2, char * param_3);
undefined daPy_lk_c__getTactTopPos(daPy_lk_c * this, cXyz * param_1);
undefined daPy_lk_c__getTactNormalWait(daPy_lk_c * this);
undefined daPy_lk_c__getTactMusic(daPy_lk_c * this);
undefined daPy_lk_c__getTactTimerCancel(daPy_lk_c * this);
undefined daPy_lk_c__checkTactPlayMelody(daPy_lk_c * this);
undefined daPy_lk_c__resetTactCount(daPy_lk_c * this);
undefined daPy_lk_c__procTactWait_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procTactWait(daPy_lk_c * this);
undefined daPy_lk_c__procTactPlay_init(daPy_lk_c * this, long param_1, int param_2, int param_3);
undefined daPy_lk_c__procTactPlay(daPy_lk_c * this);
undefined daPy_lk_c__procTactPlayEnd_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procTactPlayEnd(daPy_lk_c * this);
undefined daPy_lk_c__procTactPlayOriginal_init(daPy_lk_c * this);
undefined daPy_lk_c__procTactPlayOriginal(daPy_lk_c * this);
undefined daPy_lk_c__checkJumpFlower(daPy_lk_c * this);
undefined daPy_lk_c__procVomitReady_init(daPy_lk_c * this, short param_1, float param_2);
undefined daPy_lk_c__procVomitReady(daPy_lk_c * this);
undefined daPy_lk_c__procVomitWait_init(daPy_lk_c * this);
undefined daPy_lk_c__procVomitWait(daPy_lk_c * this);
undefined daPy_lk_c__procVomitJump_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procVomitJump(daPy_lk_c * this);
undefined daPy_lk_c__procVomitLand_init(daPy_lk_c * this);
undefined daPy_lk_c__procVomitLand(daPy_lk_c * this);
undefined daPy_lk_c__setHammerModel(daPy_lk_c * this);
undefined daPy_lk_c__setHammerQuake(daPy_lk_c * this, cBgS_PolyInfo * param_1, cXyz * param_2, int param_3);
undefined daPy_lk_c__setHammerWaterSplash(daPy_lk_c * this);
undefined daPy_lk_c__procHammerSideSwing_init(daPy_lk_c * this);
undefined daPy_lk_c__procHammerSideSwing(daPy_lk_c * this);
undefined daPy_lk_c__procHammerFrontSwingReady_init(daPy_lk_c * this);
undefined daPy_lk_c__procHammerFrontSwingReady(daPy_lk_c * this);
undefined daPy_lk_c__procHammerFrontSwing_init(daPy_lk_c * this);
undefined daPy_lk_c__procHammerFrontSwing(daPy_lk_c * this);
undefined daPy_lk_c__procHammerFrontSwingEnd_init(daPy_lk_c * this);
undefined daPy_lk_c__procHammerFrontSwingEnd(daPy_lk_c * this);
undefined daPy_lk_c__setPushPullKeepData(daPy_lk_c * this, PushPullLabel param_1);
undefined daPy_lk_c__procPushPullWait_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procPushPullWait(daPy_lk_c * this);
undefined daPy_lk_c__procPushMove_init(daPy_lk_c * this);
undefined daPy_lk_c__procPushMove(daPy_lk_c * this);
undefined daPy_lk_c__procPullMove_init(daPy_lk_c * this);
undefined daPy_lk_c__procPullMove(daPy_lk_c * this);
undefined daPy_lk_c__changeBottleDrinkFace(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__setBottleModel(daPy_lk_c * this, ushort heldItemType);
undefined daPy_lk_c__makeFairy(daPy_lk_c * this, cXyz * param_1, ulong param_2);
undefined daPy_lk_c__procBottleDrink_init(daPy_lk_c * this, ushort param_1);
undefined daPy_lk_c__procBottleDrink(daPy_lk_c * this);
undefined daPy_lk_c__procBottleOpen_init(daPy_lk_c * this, ushort param_1);
undefined daPy_lk_c__procBottleOpen(daPy_lk_c * this);
undefined daPy_lk_c__procBottleSwing_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procBottleSwing(daPy_lk_c * this);
undefined daPy_lk_c__procBottleGet_init(daPy_lk_c * this);
undefined daPy_lk_c__procBottleGet(daPy_lk_c * this);
undefined daPy_lk_c__setEnemyWeaponAtParam(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procWeaponNormalSwing_init(daPy_lk_c * this);
undefined daPy_lk_c__procWeaponNormalSwing(daPy_lk_c * this);
undefined daPy_lk_c__procWeaponSideSwing_init(daPy_lk_c * this);
undefined daPy_lk_c__procWeaponSideSwing(daPy_lk_c * this);
undefined daPy_lk_c__procWeaponFrontSwingReady_init(daPy_lk_c * this);
undefined daPy_lk_c__procWeaponFrontSwingReady(daPy_lk_c * this);
undefined daPy_lk_c__procWeaponFrontSwing_init(daPy_lk_c * this);
undefined daPy_lk_c__procWeaponFrontSwing(daPy_lk_c * this);
undefined daPy_lk_c__procWeaponFrontSwingEnd_init(daPy_lk_c * this);
undefined daPy_lk_c__procWeaponFrontSwingEnd(daPy_lk_c * this);
undefined daPy_lk_c__procWeaponThrow_init(daPy_lk_c * this);
undefined daPy_lk_c__procWeaponThrow(daPy_lk_c * this);
undefined daPy_lk_c__setHyoiModel(daPy_lk_c * this);
undefined daPy_lk_c__procFoodThrow_init(daPy_lk_c * this);
undefined daPy_lk_c__procFoodThrow(daPy_lk_c * this);
undefined daPy_lk_c__procFoodSet_init(daPy_lk_c * this);
undefined daPy_lk_c__procFoodSet(daPy_lk_c * this);
undefined daPy_lk_c__setSwordModel(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__setLightSaver(daPy_lk_c * this);
undefined daPy_lk_c__checkDemoShieldNoDraw(daPy_lk_c * this);
undefined daPy_lk_c__checkDemoSwordNoDraw(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__checkChanceMode(daPy_lk_c * this);
undefined daPy_lk_c__checkCutRollChange(daPy_lk_c * this);
undefined daPy_lk_c__getSwordBlurColor(daPy_lk_c * this);
undefined daPy_lk_c__setNormalCutAtParam(daPy_lk_c * this, daPy_lk_c__PlayerAttackState attackState);
undefined daPy_lk_c__setFinishCutAtParam(daPy_lk_c * this, daPy_lk_c__PlayerAttackState attackState);
undefined daPy_lk_c__setExtraCutAtParam(daPy_lk_c * this, daPy_lk_c__PlayerAttackState attackState);
undefined daPy_lk_c__setExtraFinishCutAtParam(daPy_lk_c * this, daPy_lk_c__PlayerAttackState attackState);
undefined daPy_lk_c__setJumpCutAtParam(daPy_lk_c * this);
undefined daPy_lk_c__getCutDirection(daPy_lk_c * this);
undefined daPy_lk_c__changeCutProc(daPy_lk_c * this);
undefined daPy_lk_c__changeCutReverseProc(daPy_lk_c * this, daPy_ANM param_1);
undefined daPy_lk_c__procCutA_init(daPy_lk_c * this, short param_1);
undefined daPy_lk_c__procCutA(daPy_lk_c * this);
undefined daPy_lk_c__procCutF_init(daPy_lk_c * this, short param_1);
undefined daPy_lk_c__procCutF(daPy_lk_c * this);
undefined daPy_lk_c__procCutR_init(daPy_lk_c * this, short param_1);
undefined daPy_lk_c__procCutR(daPy_lk_c * this);
undefined daPy_lk_c__procCutL_init(daPy_lk_c * this, short param_1);
undefined daPy_lk_c__procCutL(daPy_lk_c * this);
undefined daPy_lk_c__procCutEA_init(daPy_lk_c * this);
undefined daPy_lk_c__procCutEA(daPy_lk_c * this);
undefined daPy_lk_c__procCutEB_init(daPy_lk_c * this);
undefined daPy_lk_c__procCutEB(daPy_lk_c * this);
undefined daPy_lk_c__procCutExA_init(daPy_lk_c * this);
undefined daPy_lk_c__procCutExA(daPy_lk_c * this);
undefined daPy_lk_c__procCutExB_init(daPy_lk_c * this);
undefined daPy_lk_c__procCutExB(daPy_lk_c * this);
undefined daPy_lk_c__procCutTurn_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procCutTurn(daPy_lk_c * this);
undefined daPy_lk_c__procCutRoll_init(daPy_lk_c * this);
undefined daPy_lk_c__procCutRoll(daPy_lk_c * this);
undefined daPy_lk_c__procCutRollEnd_init(daPy_lk_c * this);
undefined daPy_lk_c__procCutRollEnd(daPy_lk_c * this);
undefined daPy_lk_c__procCutTurnCharge_init(daPy_lk_c * this);
undefined daPy_lk_c__procCutTurnCharge(daPy_lk_c * this);
undefined daPy_lk_c__procCutTurnMove_init(daPy_lk_c * this);
undefined daPy_lk_c__procCutTurnMove(daPy_lk_c * this);
undefined daPy_lk_c__procCutReverse_init(daPy_lk_c * this, daPy_ANM param_1);
undefined daPy_lk_c__procCutReverse(daPy_lk_c * this);
undefined daPy_lk_c__procJumpCut_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procJumpCut(daPy_lk_c * this);
undefined daPy_lk_c__procJumpCutLand_init(daPy_lk_c * this);
undefined daPy_lk_c__procJumpCutLand(daPy_lk_c * this);
undefined daPy_lk_c__procCutExMJ_init(daPy_lk_c * this, int param_1);
undefined daPy_lk_c__procCutExMJ(daPy_lk_c * this);
undefined daPy_lk_c__procCutKesa_init(daPy_lk_c * this);
undefined daPy_lk_c__procCutKesa(daPy_lk_c * this);
void daPy_HIO_c__daPy_HIO_c(daPy_HIO_c * this);
undefined daPy_py_c__getTactMusic(daPy_py_c * this);
undefined daPy_py_c__getTactTimerCancel(daPy_py_c * this);
undefined daPy_py_c__getGrabMissActor(daPy_py_c * this);
undefined daPy_py_c__checkFrontRoll(daPy_py_c * this);
undefined daPy_py_c__checkBottleSwing(daPy_py_c * this);
undefined daPy_py_c__checkCutCharge(daPy_py_c * this);
undefined daPy_py_c__checkTactWait(daPy_py_c * this);
undefined daPy_py_c__setTactZev(daPy_py_c * this, uint param_1, int param_2, char * param_3);
undefined daPy_py_c__onDekuSpReturnFlg(daPy_py_c * this, uchar param_1);
undefined daPy_py_c__checkComboCutTurn(daPy_py_c * this);
undefined daPy_py_c__getItemID(daPy_py_c * this);
undefined daPy_py_c__getThrowBoomerangID(daPy_py_c * this);
undefined daPy_py_c__checkGrabBarrel(daPy_py_c * this);
undefined daPy_py_c__checkRopeTag(daPy_py_c * this);
undefined daPy_py_c__voiceStart(daPy_py_c * this, ulong param_1);
undefined daPy_py_c__setOutPower(daPy_py_c * this, float param_1, short param_2, int param_3);
undefined daPy_py_c__getModelJointMtx(daPy_py_c * this, ushort param_1);
undefined daPy_py_c__getOldSpeedY(daPy_py_c * this);
undefined daPy_py_c__setHookshotCarryOffset(daPy_py_c * this, uint param_1, cXyz * param_2);
// undefined daPy_py_c__setPlayerPosAndAngle(daPy_py_c * this, float * param_1);
// undefined daPy_py_c__setPlayerPosAndAngle(daPy_py_c * this, cXyz * param_1, csXyz * param_2);
undefined daPy_py_c__setThrowDamage(daPy_py_c * this, cXyz * param_1, short param_2, float param_3, float param_4, int param_5);
undefined daPy_py_c__changeTextureAnime(daPy_py_c * this, ushort param_1, ushort param_2, int param_3);
undefined daPy_py_c__cancelChangeTextureAnime(daPy_py_c * this);
void J3DAnmTextureSRTKey__J3DAnmTextureSRTKey_destructor(J3DAnmTextureSRTKey * this);
void J3DAnmTexPattern__J3DAnmTexPattern_destructor(J3DAnmTexPattern * this);
undefined daPy_npc_c__check_initialRoom(daPy_npc_c * this);
undefined daPy_npc_c__check_moveStop(daPy_npc_c * this);
undefined daPy_npc_c__setRestart(daPy_npc_c * this, char param_1);
undefined daPy_npc_c__unconditionalSetRestart(daPy_npc_c * this, char param_1);
undefined daPy_npc_c__setOffsetHomePos(daPy_npc_c * this);
undefined daPy_npc_c__setPointRestart(daPy_npc_c * this, short param_1, char param_2);
undefined daPy_npc_c__checkRestart(daPy_npc_c * this, char param_1);
undefined daPy_npc_c__initialRestartOption(daPy_npc_c * this, char param_1, int param_2);
undefined daPy_npc_c__checkNowPosMove(daPy_npc_c * this, char * param_1);
undefined daPy_npc_c__drawDamageFog(daPy_npc_c * this);
undefined daPy_npc_c__chkMoveBlock(daPy_npc_c * this, cXyz * param_1);
undefined d_a_player_npc__daPy_npc_JudgeForPNameAndDistance(fopAc_ac_c * param_1, undefined4 param_2);
fopAc_ac_c * d_a_player_npc__daPy_npc_SearchAreaByName(daPy_npc_c * param_1, short procName, double dist, cXyz * param_4);
int daSea_WaterHeightInfo_Mng__Pos2Index(daSea_WaterHeightInfo_Mng * this, float param_1, float * param_2);
undefined daSea_WaterHeightInfo_Mng__GetHeight(daSea_WaterHeightInfo_Mng * this, float param_1, float param_2);
undefined d_a_sea__get_wave_max();
// undefined daSea_WaterHeightInfo_Mng__GetHeight(daSea_WaterHeightInfo_Mng * this, int param_1, int param_2);
void d_a_sea__calcMinMax(uint param_1, float * param_2, float * param_3);
void daSea_WaterHeightInfo_Mng__GetArea(daSea_WaterHeightInfo_Mng * this, int ix, int iz, float * pMinX, float * pMinZ, float * pMaxX, float * pMaxZ);
undefined daSea_WaterHeightInfo_Mng__SetInf(daSea_WaterHeightInfo_Mng * this);
void daSea_WaveInfo__daSea_WaveInfo(daSea_WaveInfo * this);
void daSea_WaveInfo__daSea_WaveInfo_destructor(daSea_WaveInfo * this);
undefined daSea_WaveInfo__AddCounter(daSea_WaveInfo * this);
undefined daSea_WaveInfo__GetRatio(daSea_WaveInfo * this, int param_1);
undefined daSea_WaveInfo__GetKm(daSea_WaveInfo * this, int param_1);
undefined daSea_WaveInfo__GetScale(daSea_WaveInfo * this, float param_1);
undefined daSea_packet_c__create(daSea_packet_c * this, cXyz * param_1);
undefined daSea_packet_c__CleanUp(daSea_packet_c * this);
void daSea_packet_c__daSea_packet_c(daSea_packet_c * this);
undefined daSea_packet_c__SetFlat(daSea_packet_c * this);
undefined daSea_packet_c__ClrFlat(daSea_packet_c * this);
undefined daSea_packet_c__CalcFlatInterTarget(daSea_packet_c * this, cXyz * param_1);
undefined daSea_packet_c__CalcFlatInter(daSea_packet_c * this);
undefined d_a_sea__daSea_Init();
undefined d_a_sea__daSea_ChkAreaBeforePos();
undefined d_a_sea__daSea_ChkArea();
undefined d_a_sea__daSea_calcWave();
undefined d_a_sea__daSea_GetPoly(undefined4 param_1, undefined4 param_2, cXyz * param_3, cXyz * param_4);
undefined daSea_packet_c__SetCullStopFlag(daSea_packet_c * this);
undefined daSea_packet_c__CheckRoomChange(daSea_packet_c * this);
undefined d_a_sea__daSea_execute();
undefined daSea_packet_c__execute(daSea_packet_c * this, cXyz * param_2);
undefined daSea_packet_c__draw(daSea_packet_c * this);
undefined d_a_sea__daSea_Draw();
undefined d_a_sea__daSea_Execute();
undefined d_a_sea__daSea_IsDelete();
undefined d_a_sea__daSea_Delete();
undefined d_a_sea__CheckCreateHeap(fopAc_ac_c * param_1);
undefined d_a_sea__daSea_Create();
void daSea_WaterHeightInfo_Mng__daSea_WaterHeightInfo_Mng_destructor(daSea_WaterHeightInfo_Mng * this);
void daSea_packet_c__daSea_packet_c_destructor(daSea_packet_c * this);
undefined d_a_sea____sinit_d_a_sea_cpp();
void cM2dGBox__cM2dGBox_destructor(cM2dGBox * this);
undefined daSpcItem01_c__set_mtx(daSpcItem01_c * this);
undefined daSpcItem01_c___delete(daSpcItem01_c * this);
undefined daSpcItem01_c___create(daSpcItem01_c * this);
undefined daSpcItem01_c__CreateInit(daSpcItem01_c * this);
undefined daSpcItem01_c___execute(daSpcItem01_c * this);
undefined daSpcItem01_c__set_effect(daSpcItem01_c * this);
undefined daSpcItem01_c__scale_anim(daSpcItem01_c * this);
undefined daSpcItem01_c__anim_play(daSpcItem01_c * this);
undefined daSpcItem01_c__move(daSpcItem01_c * this);
undefined daSpcItem01_c__rotate_item(daSpcItem01_c * this);
undefined daSpcItem01_c__setCol(daSpcItem01_c * this);
undefined daSpcItem01_c___draw(daSpcItem01_c * this);
undefined daSpcItem01_c__setTevStr(daSpcItem01_c * this);
undefined d_a_spc_item01__daSpcItem01_Draw();
undefined d_a_spc_item01__daSpcItem01_Execute();
undefined d_a_spc_item01__daSpcItem01_IsDelete();
undefined d_a_spc_item01__daSpcItem01_Delete();
undefined d_a_spc_item01__daSpcItem01_Create();
undefined d_a_vrbox__daVrbox_Draw(vrbox_class * param_1);
undefined d_a_vrbox__daVrbox_color_set(vrbox_class * param_1);
// undefined J3DTevBlock__setTevKColor(J3DTevBlock * this, ulong param_1, J3DGXColor * param_2);
undefined J3DColorBlock__setCullMode(J3DColorBlock * this, uchar param_1);
undefined d_a_vrbox__dungeon_rain_proc();
undefined d_a_vrbox__daVrbox_Execute();
undefined d_a_vrbox__daVrbox_IsDelete();
undefined d_a_vrbox__daVrbox_Delete();
undefined d_a_vrbox__daVrbox_solidHeapCB(vrbox_class * param_1);
undefined d_a_vrbox__daVrbox_Create(vrbox_class * param_1);
undefined d_a_vrbox2__texScrollCheck();
undefined d_a_vrbox2__daVrbox2_Draw(vrbox2_class * param_1);
undefined d_a_vrbox2__daVrbox2_color_set(vrbox2_class * param_1);
undefined d_a_vrbox2__daVrbox2_Execute();
undefined d_a_vrbox2__daVrbox2_IsDelete();
undefined d_a_vrbox2__daVrbox2_Delete();
undefined d_a_vrbox2__daVrbox2_solidHeapCB(vrbox2_class * param_1);
undefined d_a_vrbox2__daVrbox2_Create();
void dAs_HIO_c__dAs_HIO_c(dAs_HIO_c * this);
undefined dAuction_screen_c__screenSet(dAuction_screen_c * this);
undefined dAuction_screen_c__initPosSet(dAuction_screen_c * this, fopMsgM_pane_class * param_1, float param_2, float param_3);
undefined dAuction_screen_c__gaugeMove(dAuction_screen_c * this);
undefined dAuction_screen_c__nowRupeeSet(dAuction_screen_c * this);
undefined dAuction_screen_c__nextRupeeSet(dAuction_screen_c * this, short param_1);
undefined dAuction_screen_c__changeNumberTexture(dAuction_screen_c * this, J2DPane * param_1, int param_2);
undefined dAuction_screen_c__rupeeCountTrans(dAuction_screen_c * this);
undefined dAuction_screen_c__rupeeCountUp(dAuction_screen_c * this);
undefined dAuction_screen_c__rupeeCountDown(dAuction_screen_c * this);
undefined dAuction_screen_c__slotShowAnime(dAuction_screen_c * this);
undefined dAuction_screen_c__gaugeShowAnime(dAuction_screen_c * this);
undefined dAuction_screen_c__initialize(dAuction_screen_c * this);
undefined dAuction_screen_c___create(dAuction_screen_c * this);
undefined dAuction_screen_c___move(dAuction_screen_c * this);
undefined dAuction_screen_c___draw(dAuction_screen_c * this);
undefined dAuction_screen_c___open(dAuction_screen_c * this);
undefined dAuction_screen_c___close(dAuction_screen_c * this);
undefined dAs_c___create(dAs_c * this);
undefined dAs_c___execute(dAs_c * this);
undefined dAs_c___draw(dAs_c * this);
undefined dAs_c___delete(dAs_c * this);
undefined d_auction_screen__dAs_Draw();
undefined d_auction_screen__dAs_Execute();
undefined d_auction_screen__dAs_IsDelete();
undefined d_auction_screen__dAs_Delete();
undefined d_auction_screen__dAs_Create();
undefined d_auction_screen__dAuction_screen_create();
undefined d_auction_screen__dAuction_screen_delete();
undefined d_auction_screen__dAuction_screen_talkStart();
undefined d_auction_screen__dAuction_screen_talkEnd();
undefined d_auction_screen__dAuction_screen_slotShow();
undefined d_auction_screen__dAuction_screen_slotHide();
undefined d_auction_screen__dAuction_screen_gaugeShow();
undefined d_auction_screen__dAuction_screen_gaugeHide();
undefined d_auction_screen__dAuction_screen_gaugeUp();
undefined d_auction_screen__dAuction_screen_gaugeDown();
undefined d_auction_screen__dAs_timerCalc();
void dAuction_screen_c__dAuction_screen_c_destructor(dAuction_screen_c * this);
undefined dAuction_screen_c__draw(dAuction_screen_c * this);
void dAs_HIO_c__dAs_HIO_c_destructor(dAs_HIO_c * this);
undefined d_auction_screen____sinit_d_auction_screen_cpp();
undefined dPlace_name_c__setScreen(dPlace_name_c * this, char * param_1, JKRArchive * param_2);
undefined dPlace_name_c___openAnime(dPlace_name_c * this);
undefined dPlace_name_c___closeAnime(dPlace_name_c * this);
undefined dPlace_name_c__draw(dPlace_name_c * this);
undefined dPn_c___create(dPn_c * this);
undefined dPn_c___execute(dPn_c * this);
undefined dPn_c___draw(dPn_c * this);
undefined dPn_c___delete(dPn_c * this);
undefined d_place_name__dPn_Draw();
undefined d_place_name__dPn_Execute();
undefined d_place_name__dPn_IsDelete();
undefined d_place_name__dPn_Delete();
undefined d_place_name__dPn_Create();
void dPlace_name_c__dPlace_name_c_destructor(dPlace_name_c * this);
undefined _unnamed_d_camera_cpp___limitf(_unnamed_d_camera_cpp_ * this, float param_1, float param_2, float param_3);
void dCamera_c__dCamera_c(dCamera_c * this, camera_class * param_1);
void dCamera_c__dCamera_c_destructor(dCamera_c * this);
undefined dCamera_c__initialize(dCamera_c * this, camera_class * param_1, fopAc_ac_c * param_2, ulong param_3, ulong param_4);
undefined dCamera_c__Start(dCamera_c * this);
undefined dCamera_c__Stop(dCamera_c * this);
undefined dCamera_c__Stay(dCamera_c * this);
undefined dCamera_c__ChangeModeOK(dCamera_c * this, long param_1);
undefined dCamera_c__initPad(dCamera_c * this);
undefined dCamera_c__updatePad(dCamera_c * this);
undefined dCamera_c__initMonitor(dCamera_c * this);
undefined dCamera_c__updateMonitor(dCamera_c * this);
undefined dCamera_c__calcPeepAngle(dCamera_c * this);
void dBgS_CamLinChk_NorWtr__dBgS_CamLinChk_NorWtr_destructor(dBgS_CamLinChk_NorWtr * this);
void dBgS_CamLinChk__dBgS_CamLinChk_destructor(dBgS_CamLinChk * this);
undefined dCamera_c__Att(dCamera_c * this);
undefined dCamera_c__checkForceLockTarget(dCamera_c * this);
undefined dCamera_c__Run(dCamera_c * this);
undefined dCamera_c__NotRun(dCamera_c * this);
undefined dCamera_c__SetTrimSize(dCamera_c * this, long param_1);
undefined dCamera_c__SetTrimTypeForce(dCamera_c * this, long param_1);
undefined dCamera_c__CalcTrimSize(dCamera_c * this);
undefined dCamera_c__Draw(dCamera_c * this);
undefined dCamera_c__nextMode(dCamera_c * this, long param_1);
undefined dCamera_c__onModeChange(dCamera_c * this, long param_1, long param_2);
undefined dCamera_c__nextType(dCamera_c * this, long param_1);
undefined dCamera_c__onTypeChange(dCamera_c * this, long param_1, long param_2);
undefined dCamera_c__SetTypeForce(dCamera_c * this, char * param_1, fopAc_ac_c * param_2);
// undefined dCamera_c__SetTypeForce(dCamera_c * this, long param_1, fopAc_ac_c * param_2);
undefined dCamera_c__onStyleChange(dCamera_c * this, long param_1, long param_2);
undefined dCamera_c__GetCameraTypeFromMapToolID(dCamera_c * this, long param_1, long param_2);
undefined dCamera_c__GetCameraTypeFromCameraName(dCamera_c * this, char * param_1);
undefined dCamera_c__pushPos(dCamera_c * this);
undefined d_camera__limited_range_addition();
undefined dCamera_c__directionOf(dCamera_c * this, fopAc_ac_c * param_1);
cXyz * dCamera_c__positionOf(cXyz * __return_storage_ptr__, dCamera_c * this, fopAc_ac_c * param_1);
cXyz * dCamera_c__attentionPos(cXyz * __return_storage_ptr__, dCamera_c * this, fopAc_ac_c * param_1);
cXyz * dCamera_c__relationalPos(cXyz * __return_storage_ptr__, dCamera_c * this, fopAc_ac_c * param_1, cXyz * param_2);
// cXyz * dCamera_c__relationalPos(cXyz * __return_storage_ptr__, dCamera_c * this, fopAc_ac_c * param_1, cXyz * param_2, cSAngle param_3);
// undefined dCamera_c__relationalPos(dCamera_c * this, fopAc_ac_c * param_1, fopAc_ac_c * param_2, cXyz * param_3, float param_4);
undefined dCamera_c__setDMCAngle(dCamera_c * this);
undefined dCamera_c__getDMCAngle(dCamera_c * this, cSAngle param_1);
undefined dCamera_c__pointInSight(dCamera_c * this, cXyz * param_1);
undefined dCamera_c__radiusActorInSight(dCamera_c * this, fopAc_ac_c * param_1, fopAc_ac_c * param_2);
// undefined dCamera_c__radiusActorInSight(dCamera_c * this, fopAc_ac_c * param_1, fopAc_ac_c * param_2, cXyz * param_3, cXyz * param_4, float param_5, short param_6);
undefined dCamera_c__groundHeight(dCamera_c * this, cXyz * param_1);
void dBgS_CamGndChk_Wtr__dBgS_CamGndChk_Wtr_destructor(dBgS_CamGndChk_Wtr * this);
undefined dCamera_c__lineBGCheck(dCamera_c * this, cXyz * param_1, cXyz * param_2, dBgS_LinChk * param_3, ulong param_4);
// undefined dCamera_c__lineBGCheck(dCamera_c * this, cXyz * param_1, cXyz * param_2, cXyz * param_3, ulong param_4);
// undefined dCamera_c__lineBGCheck(dCamera_c * this, cXyz * param_1, cXyz * param_2, ulong param_3);
undefined dCamera_c__lineBGCheckBack(dCamera_c * this, cXyz * param_1, cXyz * param_2, ulong param_3);
undefined dCamera_c__lineBGCheckBoth(dCamera_c * this, cXyz * param_1, cXyz * param_2, dBgS_LinChk * param_3, ulong param_4);
undefined dCamera_c__lineCollisionCheckBush(dCamera_c * this, cXyz * param_1, cXyz * param_2);
undefined d_camera__sph_chk_callback();
undefined dCamera_c__compWallMargin(dCamera_c * this, cXyz * param_1, float param_2);
void dBgS_CamSphChk__dBgS_CamSphChk_destructor(dBgS_CamSphChk * this);
void dBgS_SphChk__dBgS_SphChk_destructor(dBgS_SphChk * this);
undefined dCamera_c__defaultTriming(dCamera_c * this);
undefined dCamera_c__setView(dCamera_c * this, float param_1, float param_2, float param_3, float param_4);
undefined dCamera_c__forwardCheckAngle(dCamera_c * this);
undefined dCamera_c__bumpCheck(dCamera_c * this, ulong param_1);
void dBgS_CamLinChk_NorWtr__dBgS_CamLinChk_NorWtr(dBgS_CamLinChk_NorWtr * this);
undefined dCamera_c__getWaterSurfaceHeight(dCamera_c * this, cXyz * param_1);
undefined dCamera_c__checkSpecialArea(dCamera_c * this);
undefined dCamera_c__checkGroundInfo(dCamera_c * this);
undefined dCamera_c__followCamera2(dCamera_c * this, long param_1);
undefined dCamera_c__followCamera(dCamera_c * this, long param_1);
undefined _unnamed_d_camera_cpp___isPlayerFlying(_unnamed_d_camera_cpp_ * this, ulong param_1);
undefined cAngle__d2s(cAngle * this, float param_1);
cXyz * dCamera_c__eyePos(cXyz * __return_storage_ptr__, dCamera_c * this, fopAc_ac_c * param_1);
undefined cBgS__GetTriPla(cBgS * this, cBgS_PolyInfo * param_1);
undefined dCamera_c__heightOf(dCamera_c * this, fopAc_ac_c * param_1);
// void cXyz__cXyz(cXyz * this, float param_1, float param_2, float param_3);
undefined _unnamed_d_camera_cpp___check_owner_action1(_unnamed_d_camera_cpp_ * this, ulong param_1, ulong param_2);
undefined _unnamed_d_camera_cpp___check_owner_action(_unnamed_d_camera_cpp_ * this, ulong param_1, ulong param_2);
undefined dCamera_c__lockonCamera(dCamera_c * this, long param_1);
undefined dCamera_c__getMsgCmdSpeaker(dCamera_c * this);
undefined dCamera_c__getMsgCmdCut(dCamera_c * this);
undefined dCamera_c__talktoCamera(dCamera_c * this, long param_1);
undefined _unnamed_d_camera_cpp___hideActor(_unnamed_d_camera_cpp_ * this, fopAc_ac_c * param_1);
undefined _unnamed_d_camera_cpp___lineCollisionCheck(_unnamed_d_camera_cpp_ * this, cXyz * param_1, cXyz * param_2, fopAc_ac_c * param_3, fopAc_ac_c * param_4);
undefined dCamera_c__CalcSubjectAngle(dCamera_c * this, short * param_1, short * param_2);
undefined dCamera_c__subjectCamera(dCamera_c * this, long param_1);
undefined dCamera_c__towerCamera(dCamera_c * this, long param_1);
undefined dCamera_c__crawlCamera(dCamera_c * this, long param_1);
undefined dCamera_c__hookshotCamera(dCamera_c * this, long param_1);
undefined dCamera_c__tornadoCamera(dCamera_c * this, long param_1);
undefined dCamera_c__rideCamera(dCamera_c * this, long param_1);
undefined dCamera_c__hungCamera(dCamera_c * this, long param_1);
undefined dCamera_c__vomitCamera(dCamera_c * this, long param_1);
undefined dCamera_c__shieldCamera(dCamera_c * this, long param_1);
undefined dCamera_c__manualCamera(dCamera_c * this, long param_1);
undefined dCamera_c__nonOwnerCamera(dCamera_c * this, long param_1);
undefined dCamera_c__fixedFrameCamera(dCamera_c * this, long param_1);
undefined dCamera_c__fixedPositionCamera(dCamera_c * this, long param_1);
undefined dCamera_c__eventCamera(dCamera_c * this, long param_1);
undefined dCamera_c__demoCamera(dCamera_c * this, long param_1);
undefined dCamera_c__letCamera(dCamera_c * this, long param_1);
undefined dCamera_c__Set(dCamera_c * this, cXyz * param_1, cXyz * param_2);
// undefined dCamera_c__Set(dCamera_c * this, cXyz * param_1, cXyz * param_2, float param_3, short param_4);
// undefined dCamera_c__Set(dCamera_c * this, cXyz * param_1, cXyz * param_2, short param_3, float param_4);
undefined dCamera_c__Reset(dCamera_c * this, cXyz * param_1, cXyz * param_2, float param_3, short param_4);
// undefined dCamera_c__Reset(dCamera_c * this, cXyz * param_1, cXyz * param_2);
// undefined dCamera_c__Reset(dCamera_c * this);
undefined dCamera_c__ResetView(dCamera_c * this);
undefined dCamera_c__Chtyp(dCamera_c * this, long param_1);
undefined dCamera_c__U2(dCamera_c * this);
undefined dCamera_c__shakeCamera(dCamera_c * this);
undefined dCamera_c__StartShake(dCamera_c * this, long param_1, uchar * param_2, long param_3, cXyz * param_4);
undefined dCamera_c__StopShake(dCamera_c * this);
undefined dCamera_c__ResetBlure(dCamera_c * this, int param_1);
undefined dCamera_c__SetBlureAlpha(dCamera_c * this, float param_1);
undefined dCamera_c__SetBlureScale(dCamera_c * this, float param_1, float param_2, float param_3);
// undefined dCamera_c__SetBlureScale(dCamera_c * this, float param_1);
undefined dCamera_c__SetBlurePosition(dCamera_c * this, float param_1, float param_2, float param_3);
undefined dCamera_c__SetBlurePositionType(dCamera_c * this, int param_1);
undefined dCamera_c__SetBlureTimer(dCamera_c * this, long param_1);
undefined dCamera_c__SubjectLockOn(dCamera_c * this, fopAc_ac_c * param_1);
undefined dCamera_c__SubjectLockOff(dCamera_c * this);
undefined dCamera_c__GetForceLockOnActor(dCamera_c * this);
undefined dCamera_c__ForceLockOn(dCamera_c * this, uint param_1);
undefined dCamera_c__ForceLockOff(dCamera_c * this, uint param_1);
undefined dCamera_c__SetExtendedPosition(dCamera_c * this, cXyz * param_1);
undefined dCamera_c__ScopeViewMsgModeOff(dCamera_c * this);
undefined d_camera__dCam_isManual();
undefined d_camera__dCam_getAngleY(camera_class * param_1);
undefined d_camera__dCam_getAngleX();
undefined d_camera__dCam_getControledAngleY(camera_class * param_1);
camera_class * d_camera__dCam_getCamera(void);
undefined d_camera__dCam_getBody();
undefined d_camera__preparation();
undefined d_camera__view_setup(camera_class * param_1);
undefined d_camera__store();
undefined d_camera__camera_execute();
undefined d_camera__camera_draw();
undefined d_camera__init_phase1(camera_class * param_1);
undefined d_camera__init_phase2();
undefined d_camera__camera_create();
undefined d_camera__camera_delete();
undefined d_camera__is_camera_delete();
undefined dCamForcusLine__Init(dCamForcusLine * this);
undefined dCamForcusLine__Draw(dCamForcusLine * this);
undefined dCamForcusLine__Off(dCamForcusLine * this);
void d2DBSplinePath__d2DBSplinePath_destructor(d2DBSplinePath * this);
void dCamera_c__BG__BG_destructor(BG * this);
void dCamera_c__BG__BG(BG * this);
void dBgS_CamGndChk__dBgS_CamGndChk_destructor(dBgS_CamGndChk * this);
void dCamera_c___class$4017d_camera_cpp___class$4017d_camera_cpp(_class$4017d_camera_cpp * this);
void dCamera_c___class$4017d_camera_cpp___class$4017d_camera_cpp_destructor(_class$4017d_camera_cpp * this);
undefined daPy_py_c__getRopePos(daPy_py_c * this);
undefined dCamera_c__setFlag(dCamera_c * this, ulong param_1);
undefined dCamera_c__chkFlag(dCamera_c * this, ulong param_1);
undefined dCamera_c__Bank(dCamera_c * this);
undefined dCamera_c__Up(dCamera_c * this);
void dCamera_c__Center(cXyz * param_1, dCamera_c * param_2);
undefined dCamParam_c__Flag(dCamParam_c * this, long param_1, ushort param_2);
undefined cSAngle__operator_set(cSAngle * this, cSAngle * param_1);
undefined dCamParam_c__Val(dCamParam_c * this, long param_1, int param_2);
undefined d_camera__dComIfGp_evmng_cameraPlay();
undefined d_camera____sinit_d_camera_cpp();
// void dBgS_CamGndChk__dBgS_CamGndChk_destructor(dBgS_CamGndChk * this);
// void dBgS_CamGndChk__dBgS_CamGndChk_destructor(dBgS_CamGndChk * this);
// void dBgS_CamGndChk__dBgS_CamGndChk_destructor(dBgS_CamGndChk * this);
// void dBgS_CamLinChk__dBgS_CamLinChk_destructor(dBgS_CamLinChk * this);
// void dBgS_CamLinChk__dBgS_CamLinChk_destructor(dBgS_CamLinChk * this);
// void dBgS_CamLinChk__dBgS_CamLinChk_destructor(dBgS_CamLinChk * this);
// void dBgS_CamLinChk_NorWtr__dBgS_CamLinChk_NorWtr_destructor(dBgS_CamLinChk_NorWtr * this);
// void dBgS_CamLinChk_NorWtr__dBgS_CamLinChk_NorWtr_destructor(dBgS_CamLinChk_NorWtr * this);
// void dBgS_CamLinChk_NorWtr__dBgS_CamLinChk_NorWtr_destructor(dBgS_CamLinChk_NorWtr * this);
// void dBgS_CamGndChk_Wtr__dBgS_CamGndChk_Wtr_destructor(dBgS_CamGndChk_Wtr * this);
// void dBgS_CamGndChk_Wtr__dBgS_CamGndChk_Wtr_destructor(dBgS_CamGndChk_Wtr * this);
// void dBgS_CamGndChk_Wtr__dBgS_CamGndChk_Wtr_destructor(dBgS_CamGndChk_Wtr * this);
// void dBgS_SphChk__dBgS_SphChk_destructor(dBgS_SphChk * this);
// void dBgS_SphChk__dBgS_SphChk_destructor(dBgS_SphChk * this);
// void dBgS_SphChk__dBgS_SphChk_destructor(dBgS_SphChk * this);
// void dBgS_SphChk__dBgS_SphChk_destructor(dBgS_SphChk * this);
// void dBgS_CamSphChk__dBgS_CamSphChk_destructor(dBgS_CamSphChk * this);
// void dBgS_CamSphChk__dBgS_CamSphChk_destructor(dBgS_CamSphChk * this);
// void dBgS_CamSphChk__dBgS_CamSphChk_destructor(dBgS_CamSphChk * this);
// void dBgS_CamSphChk__dBgS_CamSphChk_destructor(dBgS_CamSphChk * this);
undefined d_envse__dEnvSe_Draw();
undefined d_envse__dEnvSe_getNearPathPos(cXyz * param_1, cXyz * param_2, dPath * param_3);
undefined dEnvSe_c__execute(dEnvSe_c * this);
undefined d_envse__dEnvSe_Execute();
undefined d_envse__dEnvSe_IsDelete();
undefined d_envse__dEnvSe_Delete();
undefined d_envse__dEnvSe_Create();
void dFe_HIO_c__dFe_HIO_c(dFe_HIO_c * this);
undefined dFile_error_c___create(dFile_error_c * this);
undefined dFile_error_c__initial(dFile_error_c * this);
undefined dFile_error_c___delete(dFile_error_c * this);
void MyScreen__MyScreen_destructor(MyScreen * this);
undefined dFile_error_c__setErrMessage(dFile_error_c * this, ulong param_1, int param_2);
undefined dFile_error_c__closeMessage(dFile_error_c * this);
undefined dFile_error_c__resizeMsgBoard(dFile_error_c * this, int param_1);
undefined dFile_error_c__setMessage(dFile_error_c * this, char * param_1);
undefined dFile_error_c__getLineCount(dFile_error_c * this, char * param_1);
undefined dFile_error_c___move(dFile_error_c * this);
undefined dFile_error_c__ProcWait(dFile_error_c * this);
undefined dFile_error_c__ShowMsgBoard(dFile_error_c * this);
undefined dFile_error_c__ynCursorInit(dFile_error_c * this);
undefined dFile_error_c__HideMsgBoard(dFile_error_c * this);
undefined dFile_error_c__msgDispWait(dFile_error_c * this);
undefined dFile_error_c__yesNoSelectWait(dFile_error_c * this);
undefined dFile_error_c__ynCursorMove(dFile_error_c * this);
undefined dFile_error_c__ynCursorAnime(dFile_error_c * this);
undefined dFile_error_c__screenSet(dFile_error_c * this);
undefined dFile_error_c__paneTransInit(dFile_error_c * this);
undefined dFile_error_c__displayInit(dFile_error_c * this);
undefined dFile_error_c__PaneTranceBase(dFile_error_c * this, short param_1, uchar param_2, float param_3, float param_4, float param_5, float param_6, uchar param_7, int param_8);
undefined dFile_error_c___draw(dFile_error_c * this);
undefined dFile_error_c__draw2(dFile_error_c * this);
undefined dDlst_FileErr_c__draw(dDlst_FileErr_c * this);
void dDlst_FileErr_c__dDlst_FileErr_c_destructor(dDlst_FileErr_c * this);
undefined MyScreen__createPane(MyScreen * this, J2DScrnBlockHeader * param_1, JSURandomInputStream * param_2, J2DPane * param_3);
undefined J2DScreen__getTypeID(J2DScreen * this);
undefined J2DScreen__calcMtx(J2DScreen * this);
undefined J2DPane__drawSelf(J2DPane * this, float param_1, float param_2);
void dFe_HIO_c__dFe_HIO_c_destructor(dFe_HIO_c * this);
undefined d_file_error____sinit_d_file_error_cpp();
void dFs_HIO_c__dFs_HIO_c(dFs_HIO_c * this);
undefined dFile_select_c___create(dFile_select_c * this);
undefined dFile_select_c__initial(dFile_select_c * this);
undefined dFile_select_c___delete(dFile_select_c * this);
undefined dFile_select_c___move(dFile_select_c * this);
undefined dFile_select_c___open(dFile_select_c * this);
undefined dFile_select_c___close(dFile_select_c * this);
undefined dFile_select_c__closeEnd(dFile_select_c * this);
undefined dFile_select_c__closeCardErr(dFile_select_c * this);
undefined dFile_select_c__closeBack(dFile_select_c * this);
undefined dFile_select_c__closeErrErase(dFile_select_c * this);
undefined dFile_select_c__closeErrCopy(dFile_select_c * this);
undefined dFile_select_c__dataSelect(dFile_select_c * this);
undefined dFile_select_c__menuColorChange(dFile_select_c * this);
undefined dFile_select_c__SelectTitAnime(dFile_select_c * this);
undefined dFile_select_c__recCursorMove(dFile_select_c * this);
undefined dFile_select_c__recCursorAnime(dFile_select_c * this);
undefined dFile_select_c__recCursorAlphaInit(dFile_select_c * this);
undefined dFile_select_c__recDataPaneMove(dFile_select_c * this);
undefined dFile_select_c__dataSelMoveSet(dFile_select_c * this);
undefined dFile_select_c__makeRecInfo(dFile_select_c * this, uchar param_1);
undefined dFile_select_c__dataSelectPaneMove(dFile_select_c * this);
undefined dFile_select_c__MessagePaneMoveSet(dFile_select_c * this, float param_1, float param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dFile_select_c__menuSelect(dFile_select_c * this);
undefined dFile_select_c__menuCursorAlphaInit(dFile_select_c * this);
undefined dFile_select_c__menuCursorMove(dFile_select_c * this);
undefined dFile_select_c__menuCursorAnime(dFile_select_c * this);
undefined dFile_select_c__ToCopyPaneMove(dFile_select_c * this);
undefined dFile_select_c__ToErasePaneMove(dFile_select_c * this);
undefined dFile_select_c__ToBackPaneMove(dFile_select_c * this);
undefined dFile_select_c__copyDataToSelect(dFile_select_c * this);
undefined dFile_select_c__copyDataSelAnime(dFile_select_c * this);
undefined dFile_select_c__cptCursorMove(dFile_select_c * this);
undefined dFile_select_c__copyToSelBack(dFile_select_c * this);
undefined dFile_select_c__copyToSelPaneMove(dFile_select_c * this);
undefined dFile_select_c__copyPaneMoveOk(dFile_select_c * this);
undefined dFile_select_c__copyPaneMoveOk2(dFile_select_c * this);
undefined dFile_select_c__saveCopyBWColor(dFile_select_c * this);
undefined dFile_select_c__DataSelectPaneCopyMove(dFile_select_c * this, short param_1, short param_2);
undefined dFile_select_c__DataSelectPaneCopyBackMove(dFile_select_c * this, short param_1, short param_2);
undefined dFile_select_c__DataSelectPaneCopyMove2(dFile_select_c * this, short param_1, short param_2);
undefined dFile_select_c__DataSelectPaneCopyColorMove(dFile_select_c * this, short param_1, uchar param_2, int param_3);
undefined JUtility__TColor__TColor(TColor * this);
undefined dFile_select_c__DataSelectPaneBackFromCopyMove(dFile_select_c * this, uchar param_1, uchar param_2);
undefined dFile_select_c__YesNoSelect(dFile_select_c * this);
undefined dFile_select_c__yesNoCursorMove(dFile_select_c * this);
undefined dFile_select_c__CmdExecPaneMove0(dFile_select_c * this);
undefined dFile_select_c__CmdExecPaneMove2(dFile_select_c * this);
undefined dFile_select_c__CommandExec(dFile_select_c * this);
undefined dFile_select_c__DataEraseWait(dFile_select_c * this);
undefined dFile_select_c__DataCopyWait(dFile_select_c * this);
undefined dFile_select_c__ErasePaneMoveOk(dFile_select_c * this);
undefined dFile_select_c__ErasePaneMoveOk2(dFile_select_c * this);
undefined dFile_select_c__ErrorMsgPaneMove(dFile_select_c * this);
undefined dFile_select_c__ErrorMsgPaneMove2(dFile_select_c * this);
undefined dFile_select_c__backDatSelPaneMove(dFile_select_c * this);
undefined dFile_select_c__backDatSelWait(dFile_select_c * this);
undefined dFile_select_c__backDatSelWait2(dFile_select_c * this);
undefined dFile_select_c__DataSelectPaneBackMove(dFile_select_c * this, short param_1, short param_2, short param_3);
undefined dFile_select_c__nextModeWait(dFile_select_c * this);
undefined dFile_select_c__screenSet(dFile_select_c * this);
undefined dFile_select_c__paneTransInit(dFile_select_c * this);
undefined dFile_select_c__menuPaneMoveSet(dFile_select_c * this);
undefined dFile_select_c__yesNoPaneMoveSet(dFile_select_c * this);
undefined dFile_select_c__MessagePaneMove(dFile_select_c * this, float param_1, float param_2, float param_3, float param_4, short param_5, uchar param_6, int param_7);
undefined dFile_select_c__recInfoPaneMove(dFile_select_c * this, float param_1, float param_2, float param_3, float param_4, short param_5, uchar param_6, int param_7);
undefined dFile_select_c__menuPaneMove(dFile_select_c * this, float param_1, float param_2, short param_3, uchar param_4, int param_5);
undefined dFile_select_c__yesNoPaneMove(dFile_select_c * this, float param_1, float param_2, short param_3, uchar param_4, int param_5);
undefined dFile_select_c__PaneTranceTitle(dFile_select_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dFile_select_c__PaneAlphaTitleTxt(dFile_select_c * this, short param_1, uchar param_2);
undefined dFile_select_c__PaneTranceRecTlt1(dFile_select_c * this, short param_1, uchar param_2, float param_3, float param_4, float param_5, float param_6, uchar param_7, int param_8);
undefined dFile_select_c__PaneTranceRecTlt2(dFile_select_c * this, short param_1, uchar param_2, float param_3, float param_4, float param_5, float param_6, uchar param_7, int param_8);
undefined dFile_select_c__PaneTranceRecTlt3(dFile_select_c * this, short param_1, uchar param_2, float param_3, float param_4, float param_5, float param_6, uchar param_7, int param_8);
undefined dFile_select_c__PaneTranceRecInfo1(dFile_select_c * this, short param_1, uchar param_2, float param_3, float param_4, float param_5, float param_6, uchar param_7, int param_8);
undefined dFile_select_c__PaneTranceRecInfo2(dFile_select_c * this, short param_1, uchar param_2, float param_3, float param_4, float param_5, float param_6, uchar param_7, int param_8);
undefined dFile_select_c__PaneTranceRecInfo3(dFile_select_c * this, short param_1, uchar param_2, float param_3, float param_4, float param_5, float param_6, uchar param_7, int param_8);
undefined dFile_select_c__PaneTranceRecBase(dFile_select_c * this, short param_1, uchar param_2, float param_3, float param_4, float param_5, float param_6, uchar param_7, int param_8);
undefined dFile_select_c__PaneTranceMessageBase(dFile_select_c * this, short param_1, uchar param_2, float param_3, float param_4, float param_5, float param_6, uchar param_7, int param_8);
undefined dFile_select_c__PaneTranceYes(dFile_select_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dFile_select_c__PaneTranceNo(dFile_select_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dFile_select_c__PaneTranceStart(dFile_select_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dFile_select_c__PaneTranceCopy(dFile_select_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dFile_select_c__PaneTranceErase(dFile_select_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dFile_select_c__PaneTranceBack(dFile_select_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dFile_select_c__displayInit(dFile_select_c * this);
undefined dFile_select_c__setSaveData(dFile_select_c * this);
undefined dFile_select_c__changeExtraColor(dFile_select_c * this, int param_1);
undefined dFile_select_c__changeBrokenColor(dFile_select_c * this, int param_1);
undefined dFile_select_c___draw(dFile_select_c * this);
undefined dDlst_FileSel_c__draw(dDlst_FileSel_c * this);
undefined dFile_select_c__dataSelectEx(dFile_select_c * this);
undefined dFile_select_c__ExSavePaneMove(dFile_select_c * this);
undefined dFile_select_c__YesNoSelectEx(dFile_select_c * this);
undefined dFile_select_c__ExSavePaneMove0(dFile_select_c * this);
undefined dFile_select_c__ExCardCheck(dFile_select_c * this);
undefined dFile_select_c__ExBackDatSelPaneMove(dFile_select_c * this);
undefined dFile_select_c__ExSavePaneMove1(dFile_select_c * this);
undefined dFile_select_c__ExDataSave(dFile_select_c * this);
undefined dFile_select_c__ExDataSaveWait(dFile_select_c * this);
undefined dFile_select_c__ExDataSavePaneMoveOk(dFile_select_c * this);
undefined dFile_select_c__ExDataSavePaneMoveOk2(dFile_select_c * this);
undefined dFile_select_c__ExErrorMsgPaneMove(dFile_select_c * this);
undefined dFile_select_c__ExErrorMsgPaneMove2(dFile_select_c * this);
void dDlst_FileSel_c__dDlst_FileSel_c_destructor(dDlst_FileSel_c * this);
void dFs_HIO_c__dFs_HIO_c_destructor(dFs_HIO_c * this);
undefined d_file_select____sinit_d_file_select_cpp();
undefined dDlst_Gameover_CAPTURE_c__draw(dDlst_Gameover_CAPTURE_c * this);
undefined dGameover_c___create(dGameover_c * this);
undefined dGameover_c___execute(dGameover_c * this);
undefined dGameover_c___draw(dGameover_c * this);
undefined dGameover_c___delete(dGameover_c * this);
undefined dGameover_c__deleteCheck(dGameover_c * this);
undefined dDlst_GameOverScrnDraw_c__setScreen(dDlst_GameOverScrnDraw_c * this, char * param_1, JKRArchive * param_2);
undefined dDlst_GameOverScrnDraw_c__valueInit(dDlst_GameOverScrnDraw_c * this);
undefined dDlst_GameOverScrnDraw_c__animeOpen(dDlst_GameOverScrnDraw_c * this);
undefined dDlst_GameOverScrnDraw_c__animeClose(dDlst_GameOverScrnDraw_c * this);
undefined dDlst_GameOverScrnDraw_c__setEmitter0(dDlst_GameOverScrnDraw_c * this, cXyz * param_1);
undefined dDlst_GameOverScrnDraw_c__setEmitter1(dDlst_GameOverScrnDraw_c * this, cXyz * param_1);
undefined dDlst_GameOverScrnDraw_c__anime1(dDlst_GameOverScrnDraw_c * this, int param_1);
undefined dDlst_GameOverScrnDraw_c__anime2(dDlst_GameOverScrnDraw_c * this, int param_1);
undefined dDlst_GameOverScrnDraw_c__setRotate(dDlst_GameOverScrnDraw_c * this, fopMsgM_pane_class * param_1, float param_2);
undefined dDlst_GameOverScrnDraw_c__draw(dDlst_GameOverScrnDraw_c * this);
undefined d_gameover__dGameover_Draw();
undefined d_gameover__dGameover_Execute();
undefined d_gameover__dGameover_IsDelete();
undefined d_gameover__dGameover_Delete();
undefined d_gameover__dGameover_Create();
void dDlst_MenuSave_c__dDlst_MenuSave_c_destructor(dDlst_MenuSave_c * this);
void dMenu_save_c__dMenu_save_c_destructor(dMenu_save_c * this);
void dDlst_Gameover_CAPTURE_c__dDlst_Gameover_CAPTURE_c_destructor(dDlst_Gameover_CAPTURE_c * this);
void dDlst_GameOverScrnDraw_c__dDlst_GameOverScrnDraw_c_destructor(dDlst_GameOverScrnDraw_c * this);
int toon_proc_check(void);
undefined u8_data_ratio_set();
int s16_data_ratio_set(short param_1, short param_2, float param_3);
int kankyo_color_ratio_set(byte b0A, byte b0B, float blendAB, byte b1A, uchar b1B, float blend01, short add, float mul);
undefined fl_data_ratio_set(float param_1, float param_2, float param_3);
undefined float_kankyo_color_ratio_set();
undefined get_parcent();
int dKy_light_influence_id(cXyz * param_1, undefined4 param_2);
int dKy_eflight_influence_id(cXyz * param_1, int param_2);
undefined dKy_eflight_influence_pos();
undefined dKy_light_influence_col();
undefined dKy_light_influence_power();
undefined dKy_light_influence_yuragi();
float dKy_light_influence_distance(cXyz * param_1, undefined4 param_2);
undefined dKy_eflight_influence_col();
undefined dKy_eflight_influence_power();
undefined dKy_eflight_influence_yuragi();
undefined dKy_eflight_influence_distance();
undefined plight_init();
undefined plight_set();
undefined envcolor_init();
void dScnKy_env_light_c__dScnKy_env_light_c(dScnKy_env_light_c * this);
void WIND_INF_ENTITY__WIND_INF_ENTITY_destructor(WIND_INF_ENTITY * this);
void WIND_INF_ENTITY__WIND_INF_ENTITY(WIND_INF_ENTITY * this);
void LIGHT_INFLUENCE__LIGHT_INFLUENCE(LIGHT_INFLUENCE * this);
undefined dScnKy_env_light_c__setDaytime(dScnKy_env_light_c * this);
uint dStage_roomControl_c__GetTimePass(void);
undefined dScnKy_env_light_c__SetSchbit(dScnKy_env_light_c * this);
undefined dScnKy_env_light_c__setSunpos(dScnKy_env_light_c * this);
undefined dScnKy_env_light_c__getDaytime(dScnKy_env_light_c * this);
undefined dKy_getdaytime_hour();
undefined dKy_getdaytime_minute();
undefined dKy_daynight_check();
void dScnKy_env_light_c__setLight_palno_get(dScnKy_env_light_c * this, byte * pEnvrSel0, byte * pEnvrSel1, byte * pPselIdx0, byte * pPselIdx1, byte * pPalIdx0A, byte * pPalIdx0B, byte * pPalIdx1A, byte * pPalIdx1B, float * pBlendPalAB, int * pPselPalIdx0, int * pPselPalIdx1, float * pBlendPal01, byte * pInitTimer);
undefined dScnKy_env_light_c__setLight(dScnKy_env_light_c * this);
void dScnKy_env_light_c__setLight_bg(dScnKy_env_light_c * this, dKy_tevstr_c * pTevStr, _GXColorS10 * pBG0_C0, _GXColorS10 * pBG0_K0, _GXColorS10 * pBG1_C0, _GXColorS10 * pBG1_K0, _GXColorS10 * pBG2_C0, _GXColorS10 * pBG2_K0, _GXColorS10 * pBG3_C0, _GXColorS10 * pBG3_K0, _GXColorS10 * pFog, float * pFogStartZ, float * pFogEndZ);
undefined dScnKy_env_light_c__setLight_actor(dScnKy_env_light_c * this, dKy_tevstr_c * pTevStr, _GXColorS10 * pFogColor, float * pFogStartZ, float * pFogEndZ);
undefined dScnKy_env_light_c__settingTevStruct_colget_actor(dScnKy_env_light_c * this, cXyz * param_1, dKy_tevstr_c * param_2, _GXColorS10 * param_3, _GXColorS10 * param_4, _GXColorS10 * param_5, float * param_6, float * param_7);
undefined dScnKy_env_light_c__settingTevStruct_colget_player(dScnKy_env_light_c * this, dKy_tevstr_c * param_1);
void dScnKy_env_light_c__settingTevStruct_plightcol_plus(dScnKy_env_light_c * this, cXyz * param_1, dKy_tevstr_c * param_2, _GXColorS10 * param_3, _GXColorS10 * param_4, byte param_5);
undefined dScnKy_env_light_c__settingTevStruct_eflightcol_plus(dScnKy_env_light_c * this, cXyz * param_1, dKy_tevstr_c * param_2);
undefined dScnKy_env_light_c__settingTevStruct(dScnKy_env_light_c * this, settingTevStruct__LightType lightType, cXyz * param_3, dKy_tevstr_c * pTevStr);
void setLightTevColorType_sub(J3DMaterial * param_1, dKy_tevstr_c * param_2);
undefined J3DColorBlock__setLight(J3DColorBlock * this, ulong param_1, J3DLightObj * param_2);
undefined dScnKy_env_light_c__setLightTevColorType(dScnKy_env_light_c * this, J3DModel * param_1, dKy_tevstr_c * param_2);
undefined dScnKy_env_light_c__CalcTevColor(dScnKy_env_light_c * this);
undefined dScnKy_env_light_c__Sndpos(dScnKy_env_light_c * this);
undefined dScnKy_env_light_c__Eflight_flush_proc(dScnKy_env_light_c * this);
undefined dScnKy_env_light_c__SetBaseLight(dScnKy_env_light_c * this);
undefined dScnKy_env_light_c__exeKankyo(dScnKy_env_light_c * this);
undefined dKy_event_init();
void dice_wether_init(byte param_1, float param_2, float param_3);
void dice_wether_execute(byte param_1, float param_2, float curTime);
undefined dice_rain_minus();
undefined phantomship_wether();
undefined dKy_event_proc();
undefined dScnKy_env_light_c__drawKankyo(dScnKy_env_light_c * this);
undefined dKy_Draw();
undefined dKy_Execute();
undefined dKy_IsDelete();
undefined dKy_Delete();
undefined dKy_Create();
undefined dKy_setLight_init();
undefined dKy_setLight();
undefined dKy_setLight_again();
undefined dKy_Get_DifCol();
undefined dKy_light_influence_pos(cXyz * param_1, undefined4 param_2);
undefined dKy_plight_near_pos(cXyz * param_1);
undefined dKy_plight_set(LIGHT_INFLUENCE * param_1);
undefined dKy_yuragi_ratio_set();
void dKy_plight_priority_set(LIGHT_INFLUENCE * param_1);
undefined dKy_plight_cut(LIGHT_INFLUENCE * param_1);
void dKy_efplight_set(LIGHT_INFLUENCE * param_1);
undefined dKy_efplight_cut(LIGHT_INFLUENCE * param_1);
undefined dKy_actor_addcol_amb_set();
undefined dKy_actor_addcol_dif_set();
undefined dKy_bg_addcol_amb_set();
undefined dKy_bg_addcol_dif_set();
undefined dKy_bg1_addcol_amb_set();
undefined dKy_bg1_addcol_dif_set();
undefined dKy_bg2_addcol_amb_set();
undefined dKy_bg2_addcol_dif_set();
undefined dKy_bg3_addcol_amb_set();
undefined dKy_bg3_addcol_dif_set();
undefined dKy_addcol_fog_set();
void dKy_actor_addcol_set(short param_1, short param_2, short param_3, float param_4);
void dKy_vrbox_addcol_sky0_set(short param_1, short param_2, short param_3, double param_4);
void dKy_vrbox_addcol_kasumi_set(short param_1, short param_2, short param_3, double param_4);
void dKy_vrbox_addcol_set(short param_1, short param_2, short param_3, float param_4);
undefined dKy_fog_startendz_set(float param_1, float param_2, float param_3);
undefined dKy_Itemgetcol_chg_on();
undefined dKy_Itemgetcol_chg_off();
undefined dKy_Itemgetcol_chg_move();
undefined dKy_arrowcol_chg_on();
undefined dKy_arrowcol_chg_move();
undefined dKy_checkEventNightStop();
undefined dKy_Sound_init();
undefined dKy_Sound_set();
undefined dKy_Sound_get();
undefined dKy_SordFlush_set(cXyz * param_1, undefined4 param_2);
undefined dKy_FirstlightVec_get();
undefined GxFogSet_Sub();
undefined GxFog_set();
undefined GxFog_sea_set();
undefined dKy_GxFog_set();
undefined dKy_GxFog_sea_set();
undefined dKy_GxFog_tevstr_set();
undefined dKy_GfFog_tevstr_set(dKy_tevstr_c * param_1);
undefined GxXFog_set();
void dKy_change_colset(byte param_1, byte param_2, float param_3);
undefined dKy_change_colpat();
void dKy_custom_colset(byte param_1, byte param_2, float param_3);
void dKy_custom_timeset(float param_1);
void dKy_setLight_mine(dKy_tevstr_c * param_1);
void dKy_tevstr_init(dKy_tevstr_c * param_1, char roomNo, uchar param_3);
undefined dKy_rain_check();
undefined dKy_usonami_set();
undefined dKy_get_schbit();
undefined dKy_get_schbit_timer();
void dKy_get_seacolor(_GXColor * param_1, _GXColor * param_2);
undefined dKy_set_allcol_ratio();
undefined dKy_set_actcol_ratio();
undefined dKy_set_bgcol_ratio();
undefined dKy_set_fogcol_ratio();
undefined dKy_set_vrboxcol_ratio();
undefined dKy_set_vrboxsoracol_ratio(float param_1);
void dKy_set_vrboxkumocol_ratio(float param_1);
undefined dKy_itudemo_se();
undefined dKy_contrast_flg_set();
undefined dKy_contrast_flg_get();
undefined dKy_get_dayofweek();
undefined dKy_set_nexttime();
undefined dKy_DayProc();
undefined dKy_instant_timechg();
undefined dKy_instant_rainchg();
undefined dKy_moon_type_chk();
bool dKy_telescope_lookin_chk(cXyz * param_1, float param_2, float param_3);
undefined dKy_moon_look_chk();
undefined dKy_orion_look_chk();
undefined dKy_hokuto_look_chk();
undefined dKy_get_moon_pos(cXyz * param_1);
undefined dKy_get_hokuto_pos();
undefined dKy_get_orion_pos(cXyz * param_1);
undefined dKy_pship_existense_set();
undefined dKy_pship_existense_cut();
undefined dKy_pship_existense_chk();
undefined dKy_daynighttact_stop_chk();
undefined dKyr_player_overhead_bg_chk();
void dScnKy_env_light_c__dScnKy_env_light_c_destructor(dScnKy_env_light_c * this);
undefined __sinit_d_kankyo_cpp();
undefined dKankyo_DayProc();
undefined d_kyeff__dKyeff_Draw();
undefined d_kyeff__get_parcent();
undefined d_kyeff__s16_data_ratio_set();
undefined d_kyeff__menu_vrbox_set();
undefined dKyeff_c__execute(dKyeff_c * this);
undefined d_kyeff__dKyeff_Execute();
undefined d_kyeff__dKyeff_IsDelete();
undefined d_kyeff__dKyeff_Delete();
undefined d_kyeff__dKyeff_Create();
undefined d_kyeff2__dKyeff2_Draw();
undefined dKyeff2_c__execute(dKyeff2_c * this);
undefined d_kyeff2__dKyeff2_Execute();
undefined d_kyeff2__dKyeff2_IsDelete();
undefined d_kyeff2__dKyeff2_Delete();
undefined d_kyeff2__dKyeff2_Create();
undefined dThunder_c__createHeap(dThunder_c * this);
undefined dThunder_c__adjustHeap(dThunder_c * this);
undefined4 d_ky_thunder__dThunder_Draw(dThunder_c * param_1);
undefined d_ky_thunder__dThunder_Execute(dThunder_c * param_1);
undefined d_ky_thunder__dThunder_IsDelete();
undefined d_ky_thunder__dThunder_Delete();
undefined d_ky_thunder__dThunder_Create();
undefined dThunder_c__create(dThunder_c * this);
undefined d_letter__dLetter_isNoSend();
undefined d_letter__dLetter_send();
undefined d_letter__dLetter_isSend();
undefined d_letter__dLetter_stock();
undefined d_letter__dLetter_isStock();
undefined d_letter__dLetter_read();
undefined d_letter__dLetter_isRead();
undefined d_letter__dLetter_delivery();
undefined d_letter__dLetter_autoStock();
undefined d_letter__dLetter_isDelivery();
undefined d_level_se__dLevelSe_Execute();
undefined d_level_se__dLevelSe_IsDelete();
undefined d_level_se__dLevelSe_Delete();
undefined d_level_se__dLevelSe_Create();
void daCLOTH_HIO_c__daCLOTH_HIO_c(daCLOTH_HIO_c * this);
void daCLOTH_ChildHIO_c__daCLOTH_ChildHIO_c_destructor(daCLOTH_ChildHIO_c * this);
void daCLOTH_ChildHIO_c__daCLOTH_ChildHIO_c(daCLOTH_ChildHIO_c * this);
undefined dMCloth_c__lightSet1(dMCloth_c * this, cXyz * param_1);
undefined dMCloth_c__cloth_init(dMCloth_c * this);
int dMCloth_c__init(dMCloth_c * this, EVP_PKEY_CTX * ctx);
void dMCloth_c__dMCloth_c(dMCloth_c * this);
void dMCloth_c__dMCloth_c_destructor(dMCloth_c * this);
undefined dMCloth_c__setBackNrm(dMCloth_c * this);
undefined dMCloth_c__setNrmVtx(dMCloth_c * this, cXyz * param_1, int param_2, int param_3);
undefined dMCloth_c__plot(dMCloth_c * this, float param_1, float param_2, float param_3, float param_4);
undefined dMCloth_c__plot_shadow(dMCloth_c * this, float param_1, float param_2, float param_3, float param_4);
undefined dMCloth_c__alpha_out(dMCloth_c * this);
undefined dMCloth_c__TevSettingMenu(dMCloth_c * this);
undefined dMCloth_c__TevSettingFileSelect(dMCloth_c * this);
undefined dMCloth_c__TevSetting(dMCloth_c * this);
undefined dMCloth_c__ShadowTevSettingMenu(dMCloth_c * this);
undefined dMCloth_c__ShadowTevSettingFileSelect(dMCloth_c * this);
undefined dMCloth_c__ShadowTevSetting(dMCloth_c * this);
void dMCloth_c__draw(dMCloth_c * this, float param_1, _GXColor * param_2, _GXColor * param_3, uchar param_4);
undefined dMCloth_c__cloth_move_sin(dMCloth_c * this);
undefined dMCloth_c__cloth_move_simple(dMCloth_c * this);
undefined dMCloth_c__cloth_move(dMCloth_c * this);
undefined d_menu_cloth__dMenu_ClothCreate();
undefined d_menu_cloth__dMenu_ClothDelete();
undefined d_menu_cloth__dMenu_ClothExecute();
undefined d_menu_cloth__dMenu_ClothDraw();
undefined d_menu_cloth__dMenu_ClothIsDelete();
void daCLOTH_HIO_c__daCLOTH_HIO_c_destructor(daCLOTH_HIO_c * this);
undefined d_menu_cloth____sinit_d_menu_cloth_cpp();
void dMc_HIO_c__dMc_HIO_c(dMc_HIO_c * this);
undefined dMenu_Collect_c__screenSet(dMenu_Collect_c * this);
undefined dMenu_Collect_c__initialize(dMenu_Collect_c * this);
undefined dMenu_Collect_c__cursorAnime(dMenu_Collect_c * this);
undefined dMenu_Collect_c__stickDirection(dMenu_Collect_c * this, uchar param_1);
undefined dMenu_Collect_c__cursorMainMove(dMenu_Collect_c * this);
undefined dMenu_Collect_c__noteCheck(dMenu_Collect_c * this);
undefined dMenu_Collect_c__noteInit(dMenu_Collect_c * this);
undefined dMenu_Collect_c__noteAppear(dMenu_Collect_c * this);
undefined dMenu_Collect_c__noteOpen(dMenu_Collect_c * this);
undefined dMenu_Collect_c__noteClose(dMenu_Collect_c * this);
undefined dMenu_Collect_c__mainTrans(dMenu_Collect_c * this, float param_1, float param_2);
undefined dMenu_Collect_c__subTrans(dMenu_Collect_c * this, float param_1, float param_2);
undefined dMenu_Collect_c__titleTrans(dMenu_Collect_c * this, float param_1, float param_2);
undefined dMenu_Collect_c__noteRotate(dMenu_Collect_c * this, float param_1, float param_2);
undefined dMenu_Collect_c__nameTrans(dMenu_Collect_c * this, float param_1, float param_2);
undefined dMenu_Collect_c__mainOpenProc(dMenu_Collect_c * this, short param_1, short param_2, short param_3);
undefined dMenu_Collect_c__subOpenProc(dMenu_Collect_c * this, short param_1, short param_2, short param_3);
undefined dMenu_Collect_c__titleOpenProc(dMenu_Collect_c * this, short param_1, short param_2);
undefined dMenu_Collect_c__noteOpenProc(dMenu_Collect_c * this, short param_1, short param_2);
undefined dMenu_Collect_c__nameOpenProc(dMenu_Collect_c * this, short param_1, short param_2);
undefined dMenu_Collect_c__itemBitCheck(dMenu_Collect_c * this);
undefined dMenu_Collect_c__itemScale(dMenu_Collect_c * this);
undefined dMenu_Collect_c__collectPriority(dMenu_Collect_c * this);
undefined dMenu_Collect_c__weponPriority(dMenu_Collect_c * this);
undefined dMenu_Collect_c__tactGuideShow(dMenu_Collect_c * this, uchar param_1, bool param_2);
undefined dMenu_Collect_c__tactDemoMode(dMenu_Collect_c * this, uchar param_1);
undefined dMenu_Collect_c__tactPlayMode(dMenu_Collect_c * this, uchar param_1);
undefined dMenu_Collect_c__tactTrans(dMenu_Collect_c * this, uchar param_1, float param_2, float param_3);
undefined dMenu_Collect_c__tactBaseShow(dMenu_Collect_c * this);
undefined dMenu_Collect_c__cornerMove(dMenu_Collect_c * this);
undefined dMenu_Collect_c__triforceAnime(dMenu_Collect_c * this, uchar param_1);
undefined dMenu_Collect_c__tactGuideHide(dMenu_Collect_c * this);
undefined dMenu_Collect_c__itemnameMove(dMenu_Collect_c * this);
undefined dMenu_Collect_c__itemnameSet(dMenu_Collect_c * this);
undefined dMenu_Collect_c__itemnoteSet(dMenu_Collect_c * this);
undefined dMenu_Collect_c__itemSet(dMenu_Collect_c * this);
undefined dMenu_Collect_c__outFontInit(dMenu_Collect_c * this);
undefined dMenu_Collect_c__outFontMove(dMenu_Collect_c * this);
undefined dMenu_Collect_c__outFontDraw(dMenu_Collect_c * this);
undefined dMenu_Collect_c__collectItemGetCheck(dMenu_Collect_c * this, uchar param_1);
undefined dMenu_Collect_c___create(dMenu_Collect_c * this);
undefined dMenu_Collect_c___create3(dMenu_Collect_c * this);
undefined dMenu_Collect_c___delete(dMenu_Collect_c * this);
undefined dMenu_Collect_c___move(dMenu_Collect_c * this);
undefined dMenu_Collect_c___move3(dMenu_Collect_c * this);
undefined dMenu_Collect_c___draw(dMenu_Collect_c * this);
undefined dMenu_Collect_c___open(dMenu_Collect_c * this);
undefined dMenu_Collect_c___open3(dMenu_Collect_c * this);
undefined dMenu_Collect_c___close(dMenu_Collect_c * this);
undefined dMenu_Collect_c___close3(dMenu_Collect_c * this);
undefined dMenu_Collect_c__animeStep1(dMenu_Collect_c * this, short param_1, short param_2);
undefined dMenu_Collect_c__animeStep2(dMenu_Collect_c * this, short param_1, short param_2);
undefined dMenu_Collect_c__animeStep3(dMenu_Collect_c * this, short param_1, short param_2);
undefined dMenu_Collect_c__animeStep4(dMenu_Collect_c * this, short param_1, short param_2);
undefined dMenu_Collect_c___open2(dMenu_Collect_c * this);
undefined dMenu_Collect_c___close2(dMenu_Collect_c * this);
void dMenu_Option_c__dMenu_Option_c_destructor(dMenu_Option_c * this);
void dMenu_Collect_c__dMenu_Collect_c_destructor(dMenu_Collect_c * this);
undefined dMenu_Collect_c__draw(dMenu_Collect_c * this);
void dMenu_base_c__dMenu_base_c_destructor(dMenu_base_c * this);
undefined dMenu_base_c___create(dMenu_base_c * this);
undefined dMenu_base_c___delete(dMenu_base_c * this);
undefined dMenu_base_c___move(dMenu_base_c * this);
undefined dMenu_base_c___draw(dMenu_base_c * this);
undefined dMenu_base_c__draw(dMenu_base_c * this);
void dMc_HIO_c__dMc_HIO_c_destructor(dMc_HIO_c * this);
undefined d_menu_collect____sinit_d_menu_collect_cpp();
void dMd_HIO_c__dMd_HIO_c(dMd_HIO_c * this);
undefined dMenu_Dmap_c__changeFloorTexture(dMenu_Dmap_c * this, J2DPane * param_1, int param_2);
undefined dMenu_Dmap_c__screenSet(dMenu_Dmap_c * this);
undefined d_menu_dmap__dMap_isBossDoor();
undefined dMenu_Dmap_c__initialize(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__treasureSet(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__treasureDraw(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__paneMove(dMenu_Dmap_c * this, float param_1);
undefined dMenu_Dmap_c__paneAlpha(dMenu_Dmap_c * this, float param_1);
undefined dMenu_Dmap_c__decAlpha(dMenu_Dmap_c * this, float param_1);
undefined dMenu_Dmap_c__cursorMove(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__cursorAnime(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__noteInit(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__noteCheck(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__noteAppear(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__noteOpen(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__noteClose(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__noteOpenProc(dMenu_Dmap_c * this, short param_1);
undefined dMenu_Dmap_c__itemScale(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__floorInit(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__mapMove(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__mapOffsetY(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__itemnameMove(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__dnameSet(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__itemnameSet(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__itemnoteSet(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__outFontInit(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__linkAnime(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__bossAnime(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__bossEyeAnime(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c___create(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c___delete(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c___move(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c___draw(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c___open(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c___close(dMenu_Dmap_c * this);
void dMenu_Dmap_c__dMenu_Dmap_c_destructor(dMenu_Dmap_c * this);
undefined dMenu_Dmap_c__draw(dMenu_Dmap_c * this);
void dMd_HIO_c__dMd_HIO_c_destructor(dMd_HIO_c * this);
undefined d_menu_dmap____sinit_d_menu_dmap_cpp();
void dMf_HIO_c__dMf_HIO_c(dMf_HIO_c * this);
undefined dMenu_Fmap_c___create(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__phantomShipCheck(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__screenSet(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__initialize(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__displayinit(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__backClothDispInit(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__calcGetMapCount(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__dispEndSalvageMark(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__checkMarkCheck1(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__checkMarkCheck2(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__checkMarkCheck3(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__isFmapClose(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__setPaneOnOff(dMenu_Fmap_c * this, J2DScreen * param_1, ulong param_2, bool param_3);
undefined dMenu_Fmap_c__childPaneMoveSp(dMenu_Fmap_c * this, fopMsgM_pane_class * param_1, fopMsgM_pane_class * param_2, float param_3, float param_4, float param_5);
undefined dMenu_Fmap_c__selGridMaskAlphaCtrl(dMenu_Fmap_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap_c__fmapMaskAlphaCtrl(dMenu_Fmap_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap_c__selCursorInit(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__selCursorHide(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__selCursorMove(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__islandNameChange(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__changeIslandName(dMenu_Fmap_c * this, uchar param_1);
undefined dMenu_Fmap_c__AreaTxtChg(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__AreaTxtChgFast(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__salvageGetItemChg(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__salvageGetItemChange(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__SalvItmDispChgFast(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__changeSalvageGetItem(dMenu_Fmap_c * this, uchar param_1);
undefined dMenu_Fmap_c__selCursorAnime(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__zoomCursorInit(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__zoomCursorAnime(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__playerPointGridAnimeInit(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__playerPointGridAnime(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__setDspWindAngle(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__windArrowColorAnime(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__checkMarkAnimeInit(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__checkMarkAnime(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__readFmapTexture(dMenu_Fmap_c * this, char * param_1);
undefined dMenu_Fmap_c__aramCmapDatRead(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__initCmapDatPnt(dMenu_Fmap_c * this, aramCmapDatPat_t * param_1);
undefined dMenu_Fmap_c__getGridNumToCmapDatPnt(dMenu_Fmap_c * this, int param_1);
undefined dMenu_Fmap_c__setDispIslandPos(dMenu_Fmap_c * this, char param_1, char param_2);
undefined dMenu_Fmap_c__setIslandPos(dMenu_Fmap_c * this, fopMsgM_pane_class * param_1, float param_2, float param_3);
undefined dMenu_Fmap_c__changeFmapTexture(dMenu_Fmap_c * this, char param_1, char param_2);
undefined dMenu_Fmap_c__setDspNormalMapLink(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__setDspLargeMapLink(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__checkDspLargeMapLink(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__checkDspLargeMapShip(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__dispEndSalvageLargeMark(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__setDspHugeMapLink(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__dispEndSalvageHugeMark(dMenu_Fmap_c * this, float param_1, float param_2);
undefined dMenu_Fmap_c__checkDspHugeMapLink(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__checkDspHugeMapShip(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c___open(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c___close(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c___close_normalMode(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c___move(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c___draw(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c___delete(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__FmapProcMain(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__SelectGrid(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__zoom1000x1000Init(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__zoomMapAlphaSet(dMenu_Fmap_c * this, char param_1, char param_2, fopMsgM_pane_class * param_3, uchar param_4);
undefined dMenu_Fmap_c__ZoomGridLv1In(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__ZoomGridLv1Proc(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__zoom200x200Init(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__ZoomGridLv1Out(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__ZoomGridLv2In(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__ZoomGridLv2Proc(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__ZoomGridLv2Out(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__move_normal(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__FmapProc(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__HikakuProc(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__fmap2Open(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__fmap2Move(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__fmap2Close(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__paneTransBase(dMenu_Fmap_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dMenu_Fmap_c__paneTranceZoomMap(dMenu_Fmap_c * this, short param_1, uchar param_2, float param_3, float param_4, float param_5, float param_6, float param_7, float param_8, uchar param_9, int param_10);
undefined dMenu_Fmap_c__paneTranceZoomMapAlpah(dMenu_Fmap_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap_c__paneTranceZoom2Map(dMenu_Fmap_c * this, short param_1, uchar param_2, float param_3, float param_4, float param_5, float param_6, float param_7, float param_8, uchar param_9, int param_10);
undefined dMenu_Fmap_c__paneAlphaFmapCursor(dMenu_Fmap_c * this, fopMsgM_pane_class * param_1, short param_2, uchar param_3, uchar param_4, int param_5);
undefined dMenu_Fmap_c__PaneAlphaSelvageItem(dMenu_Fmap_c * this, short param_1, uchar param_2);
undefined dMenu_Fmap_c__gShipMarkAnimeInit(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__gShipMarkAnime(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c___open_warpMode(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__init_warpMode(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__selCursorMoveWarp(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c___close_warpMode(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__moveMain_warpMode(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__wrapMove(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__wrapSelWinFadeIn1(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__wrapSelect(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__wrapSelWinFadeOut(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__wrapSelWarp(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__warpAreaAnime0(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__paneTranceWarpMsg(dMenu_Fmap_c * this, fopMsgM_pane_class * param_1, short param_2, uchar param_3, float param_4, float param_5, uchar param_6, int param_7);
undefined dMenu_Fmap_c__paneAlphaWarpMsgBack(dMenu_Fmap_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap_c__warpSelCursorMove(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__warpSelCursorAnimeInit(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__warpSelCursorAnime(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__getWarpAreaGridX(dMenu_Fmap_c * this, int param_1);
undefined dMenu_Fmap_c__getWarpAreaGridY(dMenu_Fmap_c * this, int param_1);
undefined dMenu_Fmap_c__getWarpAreaNo(dMenu_Fmap_c * this, cursorTable_t * param_1);
undefined dMenu_Fmap_c__getWarpAreaNoUp(dMenu_Fmap_c * this, cursorTable_t * param_1);
undefined dMenu_Fmap_c__getWarpAreaNoDown(dMenu_Fmap_c * this, cursorTable_t * param_1);
undefined dMenu_Fmap_c__getWarpAreaNoLeft(dMenu_Fmap_c * this, cursorTable_t * param_1);
undefined dMenu_Fmap_c__getWarpAreaNoRight(dMenu_Fmap_c * this, cursorTable_t * param_1);
undefined dMenu_Fmap_c__getWarpAreaTablePtr(dMenu_Fmap_c * this, char param_1, char param_2);
undefined dMenu_Fmap_c__areaTextChangeAnimeInit(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__areaTextChangeAnime(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__PaneAlphaAreaTxt(dMenu_Fmap_c * this, short param_1, uchar param_2, int param_3);
undefined dMenu_Fmap_c__setDspWarpBackCornerColor(dMenu_Fmap_c * this, float param_1);
undefined dMenu_Fmap_c__setWrapBackEmitter(dMenu_Fmap_c * this, cXyz * param_1);
undefined dMenu_Fmap_c__setWrapSpotEmitter(dMenu_Fmap_c * this, int param_1, cXyz * param_2);
undefined dMenu_Fmap_c___open_fishManMode(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c___close_fishManMode(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__init_fishManMode(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__movefishManMode(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__fmDispArea(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__fmZoomGridLv1In(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__fmZoomGridLv2In(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__islandNameSet(dMenu_Fmap_c * this, uchar param_1);
undefined dMenu_Fmap_c__fmMapWrite(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__fmMapWait(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__paneAlphaZoom2Map(dMenu_Fmap_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap_c__fmZoomGridLv2Out(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__fmZoomGridLv1Out(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__fmEndWait(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c___open_wallPaper(dMenu_Fmap_c * this);
undefined dMenu_Fmap_c__getButtonIconMode(dMenu_Fmap_c * this);
undefined dDlst_FMAP_c__draw(dDlst_FMAP_c * this);
void dDlst_FMAP_c__dDlst_FMAP_c_destructor(dDlst_FMAP_c * this);
void dMf_HIO_c__dMf_HIO_c_destructor(dMf_HIO_c * this);
undefined d_menu_fmap____sinit_d_menu_fmap_cpp();
void dMf2_HIO_c__dMf2_HIO_c(dMf2_HIO_c * this);
undefined dMenu_Fmap2_c___create(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__screenSet(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__initialize(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__displayInit(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__fmapPaneInit(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__cmapPaneInit(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__collectMapCheck(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c___move(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__FmapProcMain(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__FmapChange(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__CmapProcMain(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__spMapLoadForDVD(dMenu_Fmap2_c * this, uchar param_1);
undefined dMenu_Fmap2_c__cmapOpenCheck(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__CmapScroll(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__isSpMap(dMenu_Fmap2_c * this, int param_1);
undefined dMenu_Fmap2_c__CmapOpen(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__CmapSpLoadWait(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__screenSetGs(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__gsMoonAnimeInit(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__gsMoonAnime(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__gsShipAnime(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__gsIconAnimeInit(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__gsIconAnime(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__screenSetTn(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__screenSetTr(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__trTrifAnimeInit(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__trTrifAnime(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__screenSetIk(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__screenSetHeartP(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__screenSetTerry(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__screenSetSubMa(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__screenSetMoon(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__screenSetDfaliy(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__screenSetYagura(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__screenSetHeartM(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__screenSetSubdan(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__setPlayerPos(dMenu_Fmap2_c * this, fopMsgM_pane_class * param_1, fopMsgM_pane_class * param_2, fopMsgM_pane_class * param_3);
undefined dMenu_Fmap2_c__CmapOpenSp(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__CmapProc2(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__CmapClose(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__cmapMove(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__changeSelCmap(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__changeSelCmap2(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__cmapAlphaSet(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__changeZoomCmap(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__ChangeProcMode(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c___open(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c___close(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c___draw(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c___delete(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__fCursorInit(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__fCursorMove(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__fCursorAnime(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__cCursorAnimeInit(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__cCursorAnime(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__cCursorHide(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__cSelCursorInit(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__cSelCursorAnimeInit(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__cSelCursorAnime(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__cSelCursorHide(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__playerPointGridAnimeInit(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__playerPointGridAnime(dMenu_Fmap2_c * this, fopMsgM_pane_class * param_1);
undefined dMenu_Fmap2_c__changeFmapTexture(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__changeIslandName(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__fmapPlayerPosDisp(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__fmapPlayerPosDispCheck(dMenu_Fmap2_c * this, float * param_1, float * param_2);
undefined dMenu_Fmap2_c__changeCmapName(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__cmapPlayerPosDisp(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__cmapSalvagePosDisp(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__cmapPlayerPosDispCheck(dMenu_Fmap2_c * this, float * param_1, float * param_2);
undefined dMenu_Fmap2_c__paneTransBase(dMenu_Fmap2_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, uchar param_6, int param_7);
undefined dMenu_Fmap2_c__paneAlphaFmapBase(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap2_c__paneAlphaCmapBase(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap2_c__paneAlphaZoomCmapBase(dMenu_Fmap2_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, uchar param_6, int param_7);
undefined dMenu_Fmap2_c__paneAlphaCmapName(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3);
undefined dMenu_Fmap2_c__paneAlphaMessage2(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap2_c__paneTranceMessage(dMenu_Fmap2_c * this, short param_1, uchar param_2, float param_3, float param_4, float param_5, float param_6, uchar param_7, uchar param_8, int param_9);
undefined dMenu_Fmap2_c__paneScaleXYChild(dMenu_Fmap2_c * this, fopMsgM_pane_class * param_1, float param_2);
undefined dMenu_Fmap2_c__paneTransSelCmapCle(dMenu_Fmap2_c * this, short param_1, uchar param_2, float param_3, float param_4, float param_5, float param_6, uchar param_7, uchar param_8, int param_9);
undefined dMenu_Fmap2_c__paneTransSelCmapOpn(dMenu_Fmap2_c * this, short param_1, uchar param_2, float param_3, float param_4, float param_5, float param_6, uchar param_7, uchar param_8, int param_9);
undefined dMenu_Fmap2_c__paneAlphaGostShipMap(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap2_c__paneAlphaTingleMap(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap2_c__paneAlphaTreasureMap(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap2_c__paneAlphaSubdanMap(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap2_c__paneAlphaHeartMMap(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap2_c__paneAlphaYaguraMap(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap2_c__paneAlphaDfaliyMap(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap2_c__paneAlphaHeartPMap(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap2_c__paneAlphaTerryMap(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap2_c__paneAlphaSubMaMap(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap2_c__paneAlphaMoonMap(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap2_c__paneAlphaDoctaMap(dMenu_Fmap2_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_Fmap2_c__setPaneOnOff(dMenu_Fmap2_c * this, J2DScreen * param_1, ulong param_2, bool param_3);
undefined dMenu_Fmap2_c__getCollectMapTexChange(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__finCollectMapTexChange(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__calcGetCollectMap(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__calcGetCollectMap2(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__calcFinCollectMap(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__getNowCmapFirstNum(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__getNowCmapNextNum(dMenu_Fmap2_c * this, char param_1, int param_2);
undefined dMenu_Fmap2_c__getCmapDatPnt4(dMenu_Fmap2_c * this, int param_1);
undefined dMenu_Fmap2_c__readPaneCmapTexture(dMenu_Fmap2_c * this, ResTIMG * param_1, int param_2);
undefined dMenu_Fmap2_c__readFmapTexture(dMenu_Fmap2_c * this, char * param_1);
undefined dMenu_Fmap2_c__getButtonIconMode(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__isLockBbutton(dMenu_Fmap2_c * this);
undefined dMenu_Fmap2_c__isGetCollectMap(dMenu_Fmap2_c * this, char param_1);
undefined dMenu_Fmap2_c__isOpenCollectMap(dMenu_Fmap2_c * this, char param_1);
undefined dMenu_Fmap2_c__isOpenCollectMapTriforce(dMenu_Fmap2_c * this, char param_1);
undefined dMenu_Fmap2_c__getCollectMapKind(dMenu_Fmap2_c * this, char param_1);
undefined dMenu_Fmap2_c__isCompleteCollectMap(dMenu_Fmap2_c * this, char param_1);
undefined dDlst_FMAP2_c__draw(dDlst_FMAP2_c * this);
undefined dDlst_FMAP2GS_c__draw(dDlst_FMAP2GS_c * this);
void dDlst_FMAP2GS_c__dDlst_FMAP2GS_c_destructor(dDlst_FMAP2GS_c * this);
void dDlst_FMAP2_c__dDlst_FMAP2_c_destructor(dDlst_FMAP2_c * this);
void dMf2_HIO_c__dMf2_HIO_c_destructor(dMf2_HIO_c * this);
undefined d_menu_fmap2____sinit_d_menu_fmap2_cpp();
void dMi_HIO_c__dMi_HIO_c(dMi_HIO_c * this);
undefined dMenu_Item_c__initialize(dMenu_Item_c * this);
undefined dMenu_Item_c__screenSet(dMenu_Item_c * this);
undefined dMenu_Item_c__cursorAnime(dMenu_Item_c * this);
undefined dMenu_Item_c__cursorMainMove(dMenu_Item_c * this);
undefined dMenu_Item_c__cursorSubMove(dMenu_Item_c * this);
undefined dMenu_Item_c__checkMove(dMenu_Item_c * this);
undefined dMenu_Item_c__itemplaceCheck(dMenu_Item_c * this, int param_1);
undefined dMenu_Item_c__itemDecide(dMenu_Item_c * this);
undefined dMenu_Item_c__itemMove(dMenu_Item_c * this);
undefined dMenu_Item_c__itemScale(dMenu_Item_c * this);
undefined dMenu_Item_c__subWindowInit(dMenu_Item_c * this);
undefined dMenu_Item_c__subWindowDelete(dMenu_Item_c * this);
undefined dMenu_Item_c__subItemDecide(dMenu_Item_c * this);
undefined dMenu_Item_c__itemnameMove(dMenu_Item_c * this);
undefined dMenu_Item_c__itemnameSet(dMenu_Item_c * this);
undefined dMenu_Item_c__itemnoteSet(dMenu_Item_c * this);
undefined dMenu_Item_c__outFontInit(dMenu_Item_c * this);
undefined dMenu_Item_c__outFontMove(dMenu_Item_c * this);
undefined dMenu_Item_c__outFontDraw(dMenu_Item_c * this);
undefined dMenu_Item_c__noteCheck(dMenu_Item_c * this);
undefined dMenu_Item_c__noteInit(dMenu_Item_c * this);
undefined dMenu_Item_c__noteAppear(dMenu_Item_c * this);
undefined dMenu_Item_c__noteOpen(dMenu_Item_c * this);
undefined dMenu_Item_c__noteClose(dMenu_Item_c * this);
undefined dMenu_Item_c__mainTrans(dMenu_Item_c * this, float param_1, float param_2);
undefined dMenu_Item_c__titleTrans(dMenu_Item_c * this, float param_1, float param_2);
undefined dMenu_Item_c__noteRotate(dMenu_Item_c * this, float param_1, float param_2);
undefined dMenu_Item_c__nameTrans(dMenu_Item_c * this, float param_1, float param_2);
undefined dMenu_Item_c__mainOpenProc(dMenu_Item_c * this, short param_1, short param_2, short param_3);
undefined dMenu_Item_c__titleOpenProc(dMenu_Item_c * this, short param_1, short param_2);
undefined dMenu_Item_c__noteOpenProc(dMenu_Item_c * this, short param_1, short param_2);
undefined dMenu_Item_c__nameOpenProc(dMenu_Item_c * this, short param_1, short param_2);
undefined dMenu_Item_c__numberSet(dMenu_Item_c * this, J2DPane * param_1, uchar param_2);
undefined dMenu_Item_c__numberColor(dMenu_Item_c * this, J2DPane * param_1, uchar param_2);
undefined dMenu_Item_c__itemNumberSet(dMenu_Item_c * this);
undefined dMenu_Item_c__itemCheck(dMenu_Item_c * this, int param_1);
undefined dMenu_Item_c__itemBitCheck(dMenu_Item_c * this, bool param_1);
undefined dMenu_Item_c__arrowLightAnime(dMenu_Item_c * this);
undefined dMenu_Item_c__bottleFwaterCheck(dMenu_Item_c * this);
undefined dMenu_Item_c__recollectBossCheck(dMenu_Item_c * this);
undefined dMenu_Item_c__cornerMove(dMenu_Item_c * this);
undefined dMenu_Item_c__equipBeastItem(dMenu_Item_c * this, int param_1);
undefined dMenu_Item_c___create(dMenu_Item_c * this);
undefined dMenu_Item_c___delete(dMenu_Item_c * this);
undefined dMenu_Item_c___move(dMenu_Item_c * this);
undefined dMenu_Item_c___draw(dMenu_Item_c * this);
undefined dMenu_Item_c___open(dMenu_Item_c * this);
undefined dMenu_Item_c___close(dMenu_Item_c * this);
undefined dMenu_Item_c___open2(dMenu_Item_c * this);
undefined dMenu_Item_c___close2(dMenu_Item_c * this);
void dMenu_Item_c__dMenu_Item_c_destructor(dMenu_Item_c * this);
undefined dMenu_Item_c__draw(dMenu_Item_c * this);
void dMi_HIO_c__dMi_HIO_c_destructor(dMi_HIO_c * this);
undefined d_menu_item____sinit_d_menu_item_cpp();
void dMo_HIO_c__dMo_HIO_c(dMo_HIO_c * this);
undefined dMenu_Option_c__screenSet(dMenu_Option_c * this);
undefined dMenu_Option_c__mainInit(dMenu_Option_c * this);
undefined dMenu_Option_c__noteInit(dMenu_Option_c * this);
undefined dMenu_Option_c__titleInit(dMenu_Option_c * this);
undefined dMenu_Option_c__mainMove(dMenu_Option_c * this);
undefined dMenu_Option_c__noteMove(dMenu_Option_c * this);
undefined dMenu_Option_c__titleMove(dMenu_Option_c * this);
undefined dMenu_Option_c__cursorMove(dMenu_Option_c * this);
undefined dMenu_Option_c__cursorScale(dMenu_Option_c * this);
undefined dMenu_Option_c__typeMove(dMenu_Option_c * this);
undefined dMenu_Option_c__yazAnime(dMenu_Option_c * this);
undefined dMenu_Option_c__ccAnime(dMenu_Option_c * this);
undefined dMenu_Option_c__stickMove(dMenu_Option_c * this, uchar param_1);
undefined dMenu_Option_c__noteSet(dMenu_Option_c * this);
undefined dMenu_Option_c__outFontInit(dMenu_Option_c * this);
undefined dMenu_Option_c__outFontMove(dMenu_Option_c * this);
undefined dMenu_Option_c__outFontDraw(dMenu_Option_c * this);
undefined dMenu_Option_c__stringlength(dMenu_Option_c * this, fopMsgM_pane_class * param_1, char * param_2);
undefined dMenu_Option_c__changeScaleCenter(dMenu_Option_c * this, fopMsgM_pane_class * param_1, char * param_2);
undefined dMenu_Option_c__setSoundMode(dMenu_Option_c * this, ulong param_1);
undefined dMenu_Option_c__changeScaleRight(dMenu_Option_c * this, fopMsgM_pane_class * param_1, char * param_2);
undefined dMenu_Option_c__initialize(dMenu_Option_c * this);
undefined dMenu_Option_c___create(dMenu_Option_c * this);
undefined dMenu_Option_c___delete(dMenu_Option_c * this);
undefined dMenu_Option_c___move(dMenu_Option_c * this);
undefined dMenu_Option_c___draw(dMenu_Option_c * this);
undefined dMenu_Option_c___open(dMenu_Option_c * this);
undefined dMenu_Option_c___close(dMenu_Option_c * this);
void dMo_HIO_c__dMo_HIO_c_destructor(dMo_HIO_c * this);
undefined d_menu_option____sinit_d_menu_option_cpp();
void dMs_HIO_c__dMs_HIO_c(dMs_HIO_c * this);
undefined dMenu_save_c___create(dMenu_save_c * this);
undefined dMenu_save_c__initialize(dMenu_save_c * this);
undefined dMenu_save_c___open(dMenu_save_c * this);
undefined dMenu_save_c__openNormal(dMenu_save_c * this);
undefined dMenu_save_c___close(dMenu_save_c * this);
undefined dMenu_save_c__closeNormal(dMenu_save_c * this);
undefined dMenu_save_c__openForCollect(dMenu_save_c * this);
undefined dMenu_save_c__openForItem(dMenu_save_c * this);
undefined dMenu_save_c__closeForCollect(dMenu_save_c * this);
undefined dMenu_save_c__closeForItem(dMenu_save_c * this);
undefined dMenu_save_c__openForGameover(dMenu_save_c * this);
undefined dMenu_save_c__closeForGameover(dMenu_save_c * this);
undefined dMenu_save_c__closeForGameover_1(dMenu_save_c * this);
undefined dMenu_save_c__closeForGameover_2(dMenu_save_c * this);
undefined dMenu_save_c__openForEnding(dMenu_save_c * this);
undefined dMenu_save_c__openForEnding2(dMenu_save_c * this);
undefined dMenu_save_c__closeForEnding(dMenu_save_c * this);
undefined dMenu_save_c___delete(dMenu_save_c * this);
undefined dMenu_save_c___move(dMenu_save_c * this);
undefined dMenu_save_c__noSave(dMenu_save_c * this);
undefined dMenu_save_c__noSave2(dMenu_save_c * this);
undefined dMenu_save_c__saveQuestion(dMenu_save_c * this);
undefined dMenu_save_c__memCardCheck(dMenu_save_c * this);
undefined dMenu_save_c__openSaveMenu(dMenu_save_c * this);
undefined dMenu_save_c__closeSaveMenu(dMenu_save_c * this);
undefined dMenu_save_c__memCardErrMsgWaitKey(dMenu_save_c * this);
undefined dMenu_save_c__memCardErrMsgWaitKey2(dMenu_save_c * this);
undefined dMenu_save_c__memCardErrMsgWaitKey3(dMenu_save_c * this);
undefined dMenu_save_c__memCardErrGoIPLSel(dMenu_save_c * this);
undefined dMenu_save_c__memCardErrGoIPLSel2(dMenu_save_c * this);
undefined dMenu_save_c__memCardErrMsgWaitFormatSel(dMenu_save_c * this);
undefined dMenu_save_c__memCardErrMsgWaitFormatSel2(dMenu_save_c * this);
undefined dMenu_save_c__memCardFormat(dMenu_save_c * this);
undefined dMenu_save_c__memCardFormatCheck(dMenu_save_c * this);
undefined dMenu_save_c__memCardMakeGameFileSel(dMenu_save_c * this);
undefined dMenu_save_c__memCardMakeGameFile(dMenu_save_c * this);
undefined dMenu_save_c__memCardMakeGameFileCheck(dMenu_save_c * this);
undefined dMenu_save_c__memCardDataLoadWait(dMenu_save_c * this);
undefined dMenu_save_c__memCardDataLoadWait2(dMenu_save_c * this);
undefined dMenu_save_c__memCardDataSave(dMenu_save_c * this);
undefined dMenu_save_c__memCardDataSaveUpMenu(dMenu_save_c * this);
undefined dMenu_save_c__memCardDataSaveSel(dMenu_save_c * this);
undefined dMenu_save_c__memCardDataSaveDownMenu(dMenu_save_c * this);
undefined dMenu_save_c__dataWrite(dMenu_save_c * this);
undefined dMenu_save_c__memCardDataSaveWait(dMenu_save_c * this);
undefined dMenu_save_c__msgWait(dMenu_save_c * this);
undefined dMenu_save_c__msgWait2(dMenu_save_c * this);
undefined dMenu_save_c__saveEndWait(dMenu_save_c * this);
undefined dMenu_save_c__canNotSave(dMenu_save_c * this);
undefined dMenu_save_c__canNotSave2(dMenu_save_c * this);
undefined dMenu_save_c__gameContinue(dMenu_save_c * this);
undefined dMenu_save_c__gameContinue2(dMenu_save_c * this);
undefined dMenu_save_c__gameContinue3(dMenu_save_c * this);
undefined dMenu_save_c__gameContinue4(dMenu_save_c * this);
undefined dMenu_save_c__endingNoSave(dMenu_save_c * this);
undefined dMenu_save_c__endingNoSave2(dMenu_save_c * this);
undefined dMenu_save_c__endingNoSave3(dMenu_save_c * this);
undefined dMenu_save_c__endingDataCheck(dMenu_save_c * this);
undefined dMenu_save_c__saveWait(dMenu_save_c * this);
undefined dMenu_save_c__YesNoSelect(dMenu_save_c * this, int param_1);
undefined dMenu_save_c__YesNoSelect2(dMenu_save_c * this, int param_1);
undefined dMenu_save_c__CursorAlphaInit(dMenu_save_c * this);
undefined dMenu_save_c__CursorMove(dMenu_save_c * this);
undefined dMenu_save_c__CursorAnime(dMenu_save_c * this);
undefined dMenu_save_c__openSave(dMenu_save_c * this);
undefined dMenu_save_c__closeSave(dMenu_save_c * this);
undefined dMenu_save_c__screenSet(dMenu_save_c * this);
undefined dMenu_save_c__paneTransInit(dMenu_save_c * this);
undefined dMenu_save_c__displayInit(dMenu_save_c * this);
undefined dMenu_save_c__initializeEx(dMenu_save_c * this);
undefined dMenu_save_c__menuUp(dMenu_save_c * this);
undefined dMenu_save_c__menuDown(dMenu_save_c * this);
undefined dMenu_save_c__PaneAlphaMsgTxt(dMenu_save_c * this, short param_1, uchar param_2);
undefined dMenu_save_c__PaneTranceBase(dMenu_save_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dMenu_save_c__PaneScaleAlphaWipe(dMenu_save_c * this, short param_1, uchar param_2, float param_3, uchar param_4, int param_5);
undefined dMenu_save_c__PaneAlphaMask(dMenu_save_c * this, short param_1, uchar param_2, uchar param_3, int param_4);
undefined dMenu_save_c__PaneTranceTitle(dMenu_save_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dMenu_save_c__PaneRotate(dMenu_save_c * this, short param_1, uchar param_2, fopMsgM_pane_class * param_3, float param_4, float param_5, float param_6, uchar param_7);
undefined dMenu_save_c__PaneTranceMenu(dMenu_save_c * this, short param_1, uchar param_2, fopMsgM_pane_class * param_3, float param_4, float param_5, uchar param_6, int param_7);
undefined dMenu_save_c___draw(dMenu_save_c * this);
undefined dMenu_save_c___draw2(dMenu_save_c * this);
undefined dDlst_MenuSave_c__draw(dDlst_MenuSave_c * this);
void dFile_error_c__dFile_error_c_destructor(dFile_error_c * this);
void dMs_HIO_c__dMs_HIO_c_destructor(dMs_HIO_c * this);
undefined d_menu_save____sinit_d_menu_save_cpp();
void dMw_HIO_c__dMw_HIO_c(dMw_HIO_c * this);
void dMw_DHIO_c__dMw_DHIO_c(dMw_DHIO_c * this);
undefined d_menu_window__dMs_item_create();
undefined d_menu_window__dMs_item_delete();
undefined d_menu_window__dMs_collect_create();
undefined d_menu_window__dMs_collect_create2();
undefined d_menu_window__dMs_collect_delete();
undefined d_menu_window__dMs_fmap_create();
undefined d_menu_window__dMs_fmap_delete();
undefined d_menu_window__dMs_dmap_create();
undefined d_menu_window__dMs_dmap_delete();
undefined d_menu_window__dMs_name_create();
undefined d_menu_window__dMs_name_delete();
undefined d_menu_window__dMs_save_delete();
undefined d_menu_window__dMs_cloth_create();
undefined d_menu_window__dMs_cloth_delete();
undefined d_menu_window__dMs_clothOnly_create();
undefined d_menu_window__dMs_clothOnly_delete();
undefined d_menu_window__dMs_onButtonBit();
undefined d_menu_window__dMs_offButtonBit();
undefined d_menu_window__dMs_isButtonBit();
undefined d_menu_window__dMs_isPush_L_Button();
undefined d_menu_window__dMs_isPush_R_Button();
undefined d_menu_window__dMs_childHeap_freeAll();
undefined d_menu_window__dMs_telescopeMove();
undefined d_menu_window__dMs_placenameMove();
undefined d_menu_window__dMs_Draw();
undefined d_menu_window__dMs_Execute();
undefined d_menu_window__dMs_IsDelete();
undefined d_menu_window__dMs_Delete();
undefined d_menu_window__dMs_Create();
undefined dDlst_MENU_CAPTURE_c__draw(dDlst_MENU_CAPTURE_c * this);
undefined dDlst_MENU_CLOTH_c__draw(dDlst_MENU_CLOTH_c * this);
void dDlst_MENU_CAPTURE_c__dDlst_MENU_CAPTURE_c_destructor(dDlst_MENU_CAPTURE_c * this);
void dDlst_MENU_CLOTH_c__dDlst_MENU_CLOTH_c_destructor(dDlst_MENU_CLOTH_c * this);
void dMenu_Fmap2_c__dMenu_Fmap2_c_destructor(dMenu_Fmap2_c * this);
void dMenu_Fmap_c__dMenu_Fmap_c_destructor(dMenu_Fmap_c * this);
void dDlst_NameIN_c__dDlst_NameIN_c_destructor(dDlst_NameIN_c * this);
void dName_c__dName_c_destructor(dName_c * this);
void dMw_DHIO_c__dMw_DHIO_c_destructor(dMw_DHIO_c * this);
void dMw_HIO_c__dMw_HIO_c_destructor(dMw_HIO_c * this);
undefined d_menu_window____sinit_d_menu_window_cpp();
void dMenu_FmapSv_c__dMenu_FmapSv_c_destructor(dMenu_FmapSv_c * this);
undefined dMesg_outFont_c___create(dMesg_outFont_c * this);
undefined dMesg_outFont_c___delete(dMesg_outFont_c * this);
undefined dMesg_outFont_c___initialize(dMesg_outFont_c * this);
undefined dMesg_outFont_c___set(dMesg_outFont_c * this, short param_1, short param_2, short param_3, ulong param_4, uchar param_5);
undefined dMesg_outFont_c___draw(dMesg_outFont_c * this);
undefined dMesg_outFont_c___setAlpha(dMesg_outFont_c * this, uchar param_1);
void dMesg_tControl__dMesg_tControl(dMesg_tControl * this);
undefined dMesg_tControl__do_word(dMesg_tControl * this, ulong param_1);
void dMesg_tSequenceProcessor__dMesg_tSequenceProcessor(dMesg_tSequenceProcessor * this, TControl * param_1);
undefined dMesg_tSequenceProcessor__initialize(dMesg_tSequenceProcessor * this, int param_1);
void dMesg_tMeasureProcessor__dMesg_tMeasureProcessor_destructor(dMesg_tMeasureProcessor * this);
undefined dMesg_tSequenceProcessor__do_begin(dMesg_tSequenceProcessor * this, void * param_1, char * param_2);
undefined dMesg_tSequenceProcessor__do_end(dMesg_tSequenceProcessor * this);
undefined dMesg_tSequenceProcessor__do_isReady(dMesg_tSequenceProcessor * this);
undefined dMesg_tSequenceProcessor__do_jump_isReady(dMesg_tSequenceProcessor * this);
undefined dMesg_tSequenceProcessor__do_jump(dMesg_tSequenceProcessor * this, void * param_1, char * param_2);
undefined dMesg_tSequenceProcessor__do_branch_query(dMesg_tSequenceProcessor * this, ushort param_1);
undefined dMesg_tSequenceProcessor__do_branch_queryResult(dMesg_tSequenceProcessor * this);
undefined dMesg_tSequenceProcessor__do_branch(dMesg_tSequenceProcessor * this, void * param_1, char * param_2);
undefined dMesg_tSequenceProcessor__do_character(dMesg_tSequenceProcessor * this, int param_1);
undefined dMesg_tSequenceProcessor__do_tag(dMesg_tSequenceProcessor * this, ulong param_1, void * param_2, ulong param_3);
undefined dMesg_tSequenceProcessor__setCharacter(dMesg_tSequenceProcessor * this);
undefined dMesg_tSequenceProcessor__ruby_character(dMesg_tSequenceProcessor * this, char * param_1, int param_2);
undefined dMesg_tSequenceProcessor__do_systemTagCode(dMesg_tSequenceProcessor * this, ushort param_1, void * param_2, ulong param_3);
void dMesg_tMeasureProcessor__dMesg_tMeasureProcessor(dMesg_tMeasureProcessor * this, TControl * param_1, int param_2);
undefined dMesg_tMeasureProcessor__do_character(dMesg_tMeasureProcessor * this, int param_1);
undefined dMesg_tMeasureProcessor__do_end(dMesg_tMeasureProcessor * this);
undefined dMesg_tMeasureProcessor__do_tag(dMesg_tMeasureProcessor * this, ulong param_1, void * param_2, ulong param_3);
undefined dMesg_tMeasureProcessor__do_systemTagCode(dMesg_tMeasureProcessor * this, ushort param_1, void * param_2, ulong param_3);
void dMesg_tRenderingProcessor__dMesg_tRenderingProcessor(dMesg_tRenderingProcessor * this, TControl * param_1);
undefined dMesg_tRenderingProcessor__do_begin(dMesg_tRenderingProcessor * this, void * param_1, char * param_2);
undefined dMesg_tRenderingProcessor__do_end(dMesg_tRenderingProcessor * this);
undefined dMesg_tRenderingProcessor__do_character(dMesg_tRenderingProcessor * this, int param_1);
undefined dMesg_tRenderingProcessor__do_tag(dMesg_tRenderingProcessor * this, ulong param_1, void * param_2, ulong param_3);
undefined dMesg_tRenderingProcessor__do_systemTagCode(dMesg_tRenderingProcessor * this, ushort param_1, void * param_2, ulong param_3);
undefined dMesg_screenData_c__setCommonData(dMesg_screenData_c * this);
undefined dMesg_screenData_c__initString(dMesg_screenData_c * this, char * param_1, int param_2);
undefined dMesg_screenData_c__setString(dMesg_screenData_c * this, char * param_1, int param_2);
undefined dMesg_screenData_c__shiftSet(dMesg_screenData_c * this, int param_1, int param_2);
undefined dMesg_screenData_c__arwAnimeInit(dMesg_screenData_c * this);
undefined dMesg_screenData_c__arwAnime(dMesg_screenData_c * this);
undefined dMesg_screenData_c__dotAnimeInit(dMesg_screenData_c * this);
undefined dMesg_screenData_c__dotAnime(dMesg_screenData_c * this);
undefined dMesg_screenDataTalk_c__createScreen(dMesg_screenDataTalk_c * this);
undefined dMesg_screenDataTalk_c__changeFont(dMesg_screenDataTalk_c * this, JUTFont * param_1);
undefined dMesg_screenDataTalk_c__openAnime(dMesg_screenDataTalk_c * this);
undefined dMesg_screenDataTalk_c__closeAnime(dMesg_screenDataTalk_c * this);
undefined dMesg_screenDataTalk_c__setTextPosition(dMesg_screenDataTalk_c * this, uchar param_1);
undefined dMesg_screenDataTalk_c__draw(dMesg_screenDataTalk_c * this);
undefined dMesg_screenDataItem_c__createScreen(dMesg_screenDataItem_c * this);
undefined dMesg_screenDataItem_c__changeFont(dMesg_screenDataItem_c * this, JUTFont * param_1);
undefined dMesg_screenDataItem_c__deleteScreen(dMesg_screenDataItem_c * this);
undefined dMesg_screenDataItem_c__openAnime(dMesg_screenDataItem_c * this);
undefined dMesg_screenDataItem_c__closeAnime(dMesg_screenDataItem_c * this);
undefined dMesg_screenDataItem_c__move(dMesg_screenDataItem_c * this);
undefined dMesg_screenDataItem_c__draw(dMesg_screenDataItem_c * this);
undefined dMesg_screenDataItem_c__ringMove(dMesg_screenDataItem_c * this);
undefined dMesg_screenDataItem_c__lightMove(dMesg_screenDataItem_c * this);
undefined dMesg_screenDataItem_c__cornerMove(dMesg_screenDataItem_c * this);
undefined d_mesg__dMesg_initialize();
undefined d_mesg__dMesg_finalize();
void dMesg_tRenderingProcessor__dMesg_tRenderingProcessor_destructor(dMesg_tRenderingProcessor * this);
void dMesg_tSequenceProcessor__dMesg_tSequenceProcessor_destructor(dMesg_tSequenceProcessor * this);
void JMessage__TResourceContainer__TResourceContainer_destructor(TResourceContainer * this);
undefined d_mesg__dMesg_parse();
undefined d_mesg__dMesg_reset();
undefined d_mesg__dMesg_update();
undefined d_mesg__dMesg_render();
undefined d_mesg__dMesg_fontsizeCenter();
undefined d_mesg__dMesg_hyrule_language_check();
// undefined d_mesg__dMesg_fontsizeCenter();
undefined d_mesg__dMesg_waitProc();
undefined dMesg_screenData_c__changeFont(dMesg_screenData_c * this, JUTFont * param_1);
undefined dMesg_screenData_c__setTextPosition(dMesg_screenData_c * this, uchar param_1);
undefined dMesg_screenData_c__createScreen(dMesg_screenData_c * this);
void dMesg_screenData_c__dMesg_screenData_c_destructor(dMesg_screenData_c * this);
undefined d_mesg__dMesg_openProc();
undefined d_mesg__dMesg_outnowProc();
undefined d_mesg__dMesg_outwaitProc();
undefined d_mesg__dMesg_stopProc();
undefined d_mesg__dMesg_closewaitProc();
undefined d_mesg__dMesg_closeProc();
undefined d_mesg__dMsg_Draw();
undefined d_mesg__dMsg_Execute();
undefined dMesg_screenData_c__move(dMesg_screenData_c * this);
undefined d_mesg__dMsg_IsDelete();
undefined d_mesg__dMsg_Delete();
undefined d_mesg__dMsg_Create();
void dMesg_outFont_c__dMesg_outFont_c_destructor(dMesg_outFont_c * this);
undefined dMesg_screenData_c__draw(dMesg_screenData_c * this);
void dMesg_screenDataItem_c__dMesg_screenDataItem_c_destructor(dMesg_screenDataItem_c * this);
void dMesg_screenDataTalk_c__dMesg_screenDataTalk_c_destructor(dMesg_screenDataTalk_c * this);
undefined d_message__dMsg2_value_init();
undefined d_message__dMsg2_setString();
undefined d_message__dMsg2_messagePaneShow();
undefined d_message__dMsg2_messagePaneHide();
undefined d_message__dMsg2_outFontHide();
undefined d_message__dMsg2_arrowUpShow();
undefined d_message__dMsg2_arrowUpHide();
undefined d_message__dMsg2_arrowDownShow();
undefined d_message__dMsg2_arrowDownHide();
undefined d_message__dMsg2_dotShow();
undefined d_message__dMsg2_dotHide();
undefined d_message__dMsg2_multiTexInit();
undefined d_message__dMsg2_fontdataInit();
undefined d_message__dMsg2_screenDataSet();
undefined d_message__dMsg2_screenDataInit();
undefined d_message__dMsg2_ScreenDataValueInit();
undefined d_message__dMsg2_stickInfoInit();
undefined d_message__dMsg2_stickInfoCheck();
undefined d_message__dMsg2_multiTexDraw();
undefined d_message__dMsg2_messageOut();
undefined d_message__dMsg2_yose_select();
undefined d_message__dMsg2_textPosition();
undefined d_message__dMsg2_rubySet();
undefined d_message__dMsg2_arrowMove();
undefined d_message__dMsg2_aimAlphaSqare();
undefined d_message__dMsg2_aimAlphaSqrt();
undefined d_message__dMsg2_kankyoBrightness();
undefined d_message__dMsg2_aimBrightness();
undefined d_message__dMsg2_setCharAlpha();
undefined d_message__dMsg2_messageShow();
undefined d_message__dMsg2_messageDataInit();
undefined d_message__dMsg2_stopProc();
undefined d_message__dMsg2_closewaitProc();
undefined d_message__dMsg2_openProc();
undefined d_message__dMsg2_closeProc();
undefined d_message__dMsg2_outwaitProc();
undefined dDlst_2DMSG2_c__draw(dDlst_2DMSG2_c * this);
undefined dDlst_2DMSG2_c__outFontDraw(dDlst_2DMSG2_c * this);
undefined dDlst_2DCopy_c__draw(dDlst_2DCopy_c * this);
undefined d_message__dMsg2_Draw();
undefined d_message__dMsg2_Execute();
undefined d_message__dMsg2_IsDelete();
undefined d_message__dMsg2_Delete();
undefined d_message__dMsg2_Create();
void dDlst_2DCopy_c__dDlst_2DCopy_c_destructor(dDlst_2DCopy_c * this);
void dDlst_2DMSG2_c__dDlst_2DMSG2_c_destructor(dDlst_2DMSG2_c * this);
undefined d_message____sinit_d_message_cpp();
undefined dmsg3_3d_c__setDummyTexture(dmsg3_3d_c * this);
undefined d_message_paper__loadModelData();
undefined d_message_paper__loadAnmTransformData();
void dmsg3_3d_c__dmsg3_3d_c(dmsg3_3d_c * this);
void dmsg3_3d_c__dmsg3_3d_c_destructor(dmsg3_3d_c * this);
undefined dmsg3_3d_c__set_mtx(dmsg3_3d_c * this);
undefined dmsg3_3d_c__exec(dmsg3_3d_c * this);
undefined dmsg3_3d_c__draw(dmsg3_3d_c * this);
undefined d_message_paper__dMsg3_value_init();
undefined d_message_paper__dMsg3_setString();
undefined d_message_paper__dMsg3_messagePaneShow();
undefined d_message_paper__dMsg3_messagePaneHide();
undefined d_message_paper__dMsg3_outFontHide();
undefined d_message_paper__dMsg3_arrowUpShow();
undefined d_message_paper__dMsg3_arrowUpHide();
undefined d_message_paper__dMsg3_arrowDownShow();
undefined d_message_paper__dMsg3_arrowDownHide();
undefined d_message_paper__dMsg3_dotShow();
undefined d_message_paper__dMsg3_dotHide();
undefined d_message_paper__dMsg3_multiTexInit();
undefined d_message_paper__dMsg3_fontdataInit();
undefined d_message_paper__dMsg3_screenDataSet();
undefined d_message_paper__dMsg3_screenDataInit();
undefined d_message_paper__dMsg3_ScreenDataValueInit();
undefined d_message_paper__dMsg3_stickInfoInit();
undefined d_message_paper__dMsg3_stickInfoCheck();
undefined d_message_paper__dMsg3_messageOut();
undefined d_message_paper__dMsg3_yose_select();
undefined d_message_paper__dMsg3_textPosition();
undefined d_message_paper__dMsg3_rubySet();
undefined d_message_paper__dMsg3_arrowMove();
undefined d_message_paper__dMsg3_aimAlphaSqare();
undefined d_message_paper__dMsg3_aimAlphaSqrt();
undefined d_message_paper__dMsg3_kankyoBrightness();
undefined d_message_paper__dMsg3_aimBrightness();
undefined d_message_paper__dMsg3_setCharAlpha();
undefined d_message_paper__dMsg3_messageShow();
undefined d_message_paper__dMsg3_messageDataInit();
undefined d_message_paper__dMsg3_stopProc();
undefined d_message_paper__dMsg3_closewaitProc();
undefined d_message_paper__dMsg3_openProc();
undefined d_message_paper__dMsg3_closeProc();
undefined d_message_paper__dMsg3_outwaitProc();
undefined dDlst_2DMSG3_c__draw(dDlst_2DMSG3_c * this);
undefined dDlst_2DMSG3_c__outFontDraw(dDlst_2DMSG3_c * this);
undefined d_message_paper__dMsg3_Draw();
undefined d_message_paper__dMsg3_Execute();
undefined d_message_paper__dMsg3_IsDelete();
undefined d_message_paper__dMsg3_Delete();
undefined d_message_paper__dMsg3_Create();
void dDlst_2DMSG3_c__dDlst_2DMSG3_c_destructor(dDlst_2DMSG3_c * this);
undefined d_message_paper____sinit_d_message_paper_cpp();
void dMeter_HIO_c__dMeter_HIO_c(dMeter_HIO_c * this);
void dMeter_menuHIO_c__dMeter_menuHIO_c(dMeter_menuHIO_c * this);
void dMeter_msg_HIO_c__dMeter_msg_HIO_c(dMeter_msg_HIO_c * this);
void dMeter_message_HIO_c__dMeter_message_HIO_c(dMeter_message_HIO_c * this);
undefined d_meter__dMeter_mtrShow();
undefined d_meter__dMeter_mtrHide();
undefined d_meter__dMenu_setMenuStatus();
undefined d_meter__dMenu_setMenuStatusOld();
undefined d_meter__dMenu_getMenuStatus();
undefined d_meter__dMenu_getCollectMode();
undefined d_meter__dMenu_setCollectMode();
undefined d_meter__dMenu_getItemMode();
undefined d_meter__dMenu_setItemMode();
undefined d_meter__dMeter_subWinFlag();
undefined d_meter__dMeter_subWinFlagOn();
undefined d_meter__dMeter_subWinFlagOff();
undefined d_meter__dMeter_isAuctionFlag();
undefined d_meter__dMeter_onAuctionFlag();
undefined d_meter__dMeter_offAuctionFlag();
undefined d_meter__dMeter_itemMoveSet();
undefined d_meter__dMeter_itemMoveFlagCheck();
undefined d_meter__dMenu_flag();
undefined d_meter__dMenu_flagSet();
undefined d_meter__dMenu_timer();
undefined d_meter__dMenu_getPushMenuButton();
undefined d_meter__dMenu_setPushMenuButton();
undefined d_meter__dMeter_PaneHide();
undefined d_meter__dMeter_isBit8();
undefined d_meter__dMeter_onBit8();
undefined d_meter__dMeter_offBit8();
undefined d_meter__dMeter_PaneShow();
undefined d_meter__dMeter_alphaControl();
undefined d_meter__dMeter_statusCheck();
undefined d_meter__dMeter_alphaClose();
undefined d_meter__dMeter_alphaOpen();
undefined d_meter__dMeter_rupy_num();
undefined d_meter__dMeter_actionTex();
undefined d_meter__dMeter_weponTex();
undefined d_meter__dMeter_heartTex();
undefined d_meter__dMeter_recollect_boss_data();
undefined dDlst_2DMETER1_c__draw(dDlst_2DMETER1_c * this);
undefined dDlst_2DMETER2_c__draw(dDlst_2DMETER2_c * this);
undefined d_meter__dMeter_heart_data_set();
undefined d_meter__dMeter_paneBottomScaleY();
undefined d_meter__dMeter_parentPaneTrans();
undefined d_meter__dMeter_childPaneTrans();
undefined d_meter__dMeter_childPaneTransOnly();
undefined d_meter__dMeter_childPaneTransChildTrans();
undefined d_meter__dMeter_childPaneTransChildTransOnly();
undefined d_meter__dMeter_setHeartScaleXY();
undefined d_meter__dMeter_setHeartScaleXY2();
undefined d_meter__dMeter_setNowHeartScaleXY();
undefined d_meter__dMeter_setNowHeartScaleXY2();
undefined d_meter__dMeter_heartChangeTexture();
undefined d_meter__dMeter_heartScaleInit();
undefined d_meter__dMeter_maxLifeChange();
undefined d_meter__dMeter_lifeChange();
undefined d_meter__dMeter_heartLightMove();
undefined d_meter__dMeter_heartAlpha();
undefined d_meter__dMeter_heartInit();
undefined d_meter__dMeter_LifeMove();
undefined d_meter__dMeter_BattleLifeMove();
undefined d_meter__dMeter_heartColor();
undefined d_meter__dMeter_heartMove();
undefined d_meter__dMeter_heartDraw();
undefined d_meter__dMeter_weponInit();
undefined d_meter__dMeter_weponMove();
undefined d_meter__dMeter_weponDraw();
undefined d_meter__dMeter_weponChange();
undefined d_meter__dMeter_weponAnime();
undefined d_meter__dMeter_weponTrans();
undefined d_meter__dMeter_weponAlpha();
undefined d_meter__dMeter_actionInit();
undefined d_meter__dMeter_actionMove();
undefined d_meter__dMeter_actionDraw();
undefined d_meter__dMeter_actionForce();
undefined d_meter__dMeter_actionChange();
undefined d_meter__dMeter_actionTrans();
undefined d_meter__dMeter_actionAlpha();
undefined d_meter__dMeter_numberSet();
undefined d_meter__dMeter_numberColor();
undefined d_meter__dMeter_xyInit();
undefined d_meter__dMeter_xyMove();
undefined d_meter__dMeter_xyDraw();
undefined d_meter__dMeter_xyEquipItem();
undefined d_meter__dMeter_xyItemNumberSet();
undefined d_meter__dMeter_xyBowLightAnime();
undefined d_meter__dMeter_xyItemCountUp();
undefined d_meter__dMeter_xyItemChange();
undefined d_meter__dMeter_xyRotateZ();
undefined d_meter__dMeter_xyAlpha();
undefined d_meter__dMeter_xyTrans();
undefined d_meter__dMeter_rInit();
undefined d_meter__dMeter_rMove();
undefined d_meter__dMeter_rDraw();
undefined d_meter__dMeter_rAlpha();
undefined d_meter__dMeter_rTrans();
undefined d_meter__dMeter_enemyInit();
undefined d_meter__dMeter_enemyMove();
undefined d_meter__dMeter_zakoEnemyMove();
undefined d_meter__dMeter_bossEnemyMove();
undefined d_meter__dMeter_zakoEnemyHide();
undefined d_meter__dMeter_bossEnemyHide();
undefined d_meter__dMeter_bossAnime();
undefined d_meter__dMeter_bossEyeAnime();
undefined d_meter__dMeter_magicInit();
undefined d_meter__dMeter_magicMove();
undefined d_meter__dMeter_magicGaugeMove();
undefined d_meter__dMeter_flyGaugeMove();
undefined d_meter__dMeter_magicChange();
undefined d_meter__dMeter_magicTransNowInit();
undefined d_meter__dMeter_magicInitTrans();
undefined d_meter__dMeter_magicTransScale();
undefined d_meter__dMeter_magicColor();
undefined d_meter__dMeter_magicAlpha();
undefined d_meter__dMeter_gaugeAlpha();
undefined d_meter__dMeter_menuInit();
undefined d_meter__dMeter_menuMove();
undefined d_meter__dMeter_menuLRMove();
undefined d_meter__dMeter_menuPlusMove();
undefined d_meter__dMeter_magicLength();
undefined d_meter__dMeter_windInit();
undefined d_meter__dMeter_metronomeInit();
undefined d_meter__dMeter_windMove();
undefined d_meter__dMeter_metronomeMove();
undefined d_meter__dMeter_rupyAlpha();
undefined d_meter__dMeter_rupyInit();
undefined d_meter__dMeter_rupyMove();
undefined d_meter__dMeter_walletChange();
undefined d_meter__dMeter_keyLight();
undefined d_meter__dMeter_keyRndLightFrame();
undefined d_meter__dMeter_keyAlpha();
undefined d_meter__dMeter_keyInit();
undefined d_meter__dMeter_keyMove();
undefined d_meter__dMeter_compassRotate();
undefined d_meter__dMeter_compassGetOnProc();
undefined d_meter__dMeter_compassGetOffProc();
undefined d_meter__dMeter_compassDirOpen();
undefined d_meter__dMeter_compassWindOpen();
undefined d_meter__dMeter_compassWindClose();
undefined d_meter__dMeter_compassDirClose();
undefined d_meter__dMeter_compassAnimeMove();
undefined d_meter__dMeter_compassValueInit();
undefined d_meter__dMeter_compassAlpha();
undefined d_meter__dMeter_compassInit();
undefined d_meter__dMeter_compassMove();
undefined d_meter__dMeter_clockShow();
undefined d_meter__dMeter_clockHide();
undefined d_meter__dMeter_clockInit();
undefined d_meter__dMeter_clockMove();
undefined d_meter__dMeter_clockStarLight();
undefined d_meter__dMeter_starLightFrame();
undefined d_meter__dMeter_clockMultiInit();
undefined d_meter__dMeter_clockMultiMove();
undefined d_meter__dMeter_mapInit();
undefined d_meter__dMeter_mapMove();
undefined d_meter__dMeter_arwInit();
undefined d_meter__dMeter_arwMove();
undefined d_meter__dMeter_moveItemInit();
undefined d_meter__dMeter_moveItemMove();
undefined d_meter__dMeter_moveItemDraw();
undefined d_meter__dMeter_swimTransY();
undefined d_meter__dMeter_swimPaneShow();
undefined d_meter__dMeter_swimPaneHide();
undefined d_meter__dMeter_swimPaneTransY();
undefined d_meter__dMeter_swimPaneAlpha();
undefined d_meter__dMeter_swimInit();
undefined d_meter__dMeter_swimMove();
undefined d_meter__dMeter_swimDraw();
undefined d_meter__dMeter_swimOpenProc();
undefined d_meter__dMeter_swimMoveProc();
undefined d_meter__dMeter_swimMainRotate();
undefined d_meter__dMeter_swimMainBlink();
undefined d_meter__dMeter_swimMainDown();
undefined d_meter__dMeter_swimTekariScroll();
undefined d_meter__dMeter_swimLightMove();
undefined d_meter__dMeter_swimLightBirth();
undefined d_meter__dMeter_swimLightAnime();
undefined d_meter__dMeter_placeNameMove();
undefined d_meter__dMeter_arrowInit();
undefined d_meter__dMeter_arrowCheckStatus();
undefined d_meter__dMeter_arrowTransScale();
undefined d_meter__dMeter_arrowAnime();
undefined d_meter__dMeter_arrowErase();
undefined d_meter__dMeter_arrowMove();
undefined d_meter__dMeter_arrowDraw();
undefined d_meter__dMeter_screenDataSet();
undefined d_meter__dMeter_screenDataTimeSet();
undefined d_meter__dMeter_screenDataArrowSet();
undefined d_meter__dMeter_Draw();
undefined d_meter__dMeter_Execute();
undefined d_meter__dMeter_IsDelete();
undefined d_meter__dMeter_Delete();
undefined d_meter__dMeter_Create();
void dDlst_2DMETER2_c__dDlst_2DMETER2_c_destructor(dDlst_2DMETER2_c * this);
void dDlst_2DMETER1_c__dDlst_2DMETER1_c_destructor(dDlst_2DMETER1_c * this);
void dMeter_message_HIO_c__dMeter_message_HIO_c_destructor(dMeter_message_HIO_c * this);
void dMeter_msg_HIO_c__dMeter_msg_HIO_c_destructor(dMeter_msg_HIO_c * this);
void dMeter_menuHIO_c__dMeter_menuHIO_c_destructor(dMeter_menuHIO_c * this);
void dMeter_HIO_c__dMeter_HIO_c_destructor(dMeter_HIO_c * this);
void dMeter_map_HIO_c__dMeter_map_HIO_c(dMeter_map_HIO_c * this);
undefined mapCtrlDisp_c__initMapCtrlDisp(mapCtrlDisp_c * this);
undefined mapCtrlDisp_c__moveMapCtrlDisp(mapCtrlDisp_c * this);
void dMeter_map_HIO_c__dMeter_map_HIO_c_destructor(dMeter_map_HIO_c * this);
undefined d_meter____sinit_d_meter_cpp();
undefined d_meter____arraydtor$4710();
void dDlst_2Dm_c__dDlst_2Dm_c(dDlst_2Dm_c * this);
void dMeter_info_c__dMeter_info_c_destructor(dMeter_info_c * this);
void dMetronome_c__dMetronome_c_destructor(dMetronome_c * this);
undefined dMetronome_c__draw(dMetronome_c * this);
undefined dMinigame_Starter_c___create(dMinigame_Starter_c * this);
undefined dMinigame_Starter_c___execute(dMinigame_Starter_c * this);
undefined dMinigame_Starter_c___draw(dMinigame_Starter_c * this);
undefined dMinigame_Starter_c___delete(dMinigame_Starter_c * this);
undefined dMinigame_Starter_c__startCheck(dMinigame_Starter_c * this);
undefined dMinigame_Starter_c__deleteCheck(dMinigame_Starter_c * this);
undefined dDlst_StarterScrnDraw_c__setScreen(dDlst_StarterScrnDraw_c * this, char * param_1, JKRArchive * param_2);
undefined dDlst_StarterScrnDraw_c__anime1(dDlst_StarterScrnDraw_c * this, int param_1);
undefined dDlst_StarterScrnDraw_c__anime2(dDlst_StarterScrnDraw_c * this);
undefined dDlst_StarterScrnDraw_c__scaleAnime(dDlst_StarterScrnDraw_c * this, float param_1);
undefined dDlst_StarterScrnDraw_c__setRotate(dDlst_StarterScrnDraw_c * this, fopMsgM_pane_class * param_1, float param_2);
undefined dDlst_StarterScrnDraw_c__draw(dDlst_StarterScrnDraw_c * this);
undefined d_minigame_starter__dMinigame_Starter_Draw();
undefined d_minigame_starter__dMinigame_Starter_Execute();
undefined d_minigame_starter__dMinigame_Starter_IsDelete();
undefined d_minigame_starter__dMinigame_Starter_Delete();
undefined d_minigame_starter__dMinigame_Starter_Create();
void dDlst_StarterScrnDraw_c__dDlst_StarterScrnDraw_c_destructor(dDlst_StarterScrnDraw_c * this);
undefined dMinigame_Terminater_c___create(dMinigame_Terminater_c * this);
undefined dMinigame_Terminater_c___execute(dMinigame_Terminater_c * this);
undefined dMinigame_Terminater_c___draw(dMinigame_Terminater_c * this);
undefined dMinigame_Terminater_c___delete(dMinigame_Terminater_c * this);
undefined dDlst_TerminaterScrnDraw_c__setScreen(dDlst_TerminaterScrnDraw_c * this, char * param_1, JKRArchive * param_2);
undefined dDlst_TerminaterScrnDraw_c__setScrnFailed(dDlst_TerminaterScrnDraw_c * this);
undefined dDlst_TerminaterScrnDraw_c__setScrnSuccess(dDlst_TerminaterScrnDraw_c * this, int param_1, int param_2);
undefined dDlst_TerminaterScrnDraw_c__changeNumberTexture(dDlst_TerminaterScrnDraw_c * this, J2DPane * param_1, int param_2);
undefined dDlst_TerminaterScrnDraw_c__getNumber(dDlst_TerminaterScrnDraw_c * this, int param_1);
undefined dDlst_TerminaterScrnDraw_c__setAlphaFailed(dDlst_TerminaterScrnDraw_c * this);
undefined dDlst_TerminaterScrnDraw_c__setAlphaSuccess(dDlst_TerminaterScrnDraw_c * this);
undefined dDlst_TerminaterScrnDraw_c__getRotate(dDlst_TerminaterScrnDraw_c * this, fopMsgM_pane_class * param_1);
undefined dDlst_TerminaterScrnDraw_c__setRotate(dDlst_TerminaterScrnDraw_c * this, fopMsgM_pane_class * param_1, float param_2);
undefined dDlst_TerminaterScrnDraw_c__setScale(dDlst_TerminaterScrnDraw_c * this, fopMsgM_pane_class * param_1, float param_2);
undefined dDlst_TerminaterScrnDraw_c__animeF1(dDlst_TerminaterScrnDraw_c * this, int param_1);
undefined dDlst_TerminaterScrnDraw_c__animeF2(dDlst_TerminaterScrnDraw_c * this, int param_1);
undefined dDlst_TerminaterScrnDraw_c__animeF3(dDlst_TerminaterScrnDraw_c * this, int param_1);
undefined dDlst_TerminaterScrnDraw_c__animeS1(dDlst_TerminaterScrnDraw_c * this);
undefined dDlst_TerminaterScrnDraw_c__animeS2(dDlst_TerminaterScrnDraw_c * this, fopMsgM_pane_class * param_1);
undefined dDlst_TerminaterScrnDraw_c__animeS3(dDlst_TerminaterScrnDraw_c * this);
undefined dDlst_TerminaterScrnDraw_c__animeFailed1(dDlst_TerminaterScrnDraw_c * this);
undefined dDlst_TerminaterScrnDraw_c__animeFailed2(dDlst_TerminaterScrnDraw_c * this);
undefined dDlst_TerminaterScrnDraw_c__animeSuccess(dDlst_TerminaterScrnDraw_c * this);
undefined dDlst_TerminaterScrnDraw_c__animePerfect(dDlst_TerminaterScrnDraw_c * this);
undefined dDlst_TerminaterScrnDraw_c__draw(dDlst_TerminaterScrnDraw_c * this);
undefined d_minigame_terminater__dMinigame_Terminater_Draw();
undefined d_minigame_terminater__dMinigame_Terminater_Execute();
undefined d_minigame_terminater__dMinigame_Terminater_IsDelete();
undefined d_minigame_terminater__dMinigame_Terminater_Delete();
undefined d_minigame_terminater__dMinigame_Terminater_Create();
void dDlst_TerminaterScrnDraw_c__dDlst_TerminaterScrnDraw_c_destructor(dDlst_TerminaterScrnDraw_c * this);
undefined d_msg__dMsg_getAgbWorkArea();
undefined dDlst_2DMSG_c__draw(dDlst_2DMSG_c * this);
undefined dDlst_2DMSG_c__outFontDraw(dDlst_2DMSG_c * this);
undefined dDlst_2Dtact_c__draw(dDlst_2Dtact_c * this);
undefined d_msg__dMsg_msg_pane_parts_set();
undefined d_msg__dMsg_arw_pane_parts_set();
undefined d_msg__dMsg_screenDataSetTalk();
undefined d_msg__dMsg_screenDataSetItem();
undefined d_msg__dMsg_screenDataSetDemo();
undefined d_msg__dMsg_screenDataSetTact();
undefined d_msg__dMsg_screenDataSet();
undefined d_msg__dMsg_messagePaneShow();
undefined d_msg__dMsg_messagePaneHide();
undefined d_msg__dMsg_outFontHide();
undefined d_msg__dMsg_ScreenDataValueInitTalk();
undefined d_msg__dMsg_ScreenDataValueInitItem();
undefined d_msg__dMsg_ScreenDataValueInitTact();
undefined d_msg__dMsg_ScreenDataValueInitDemo();
undefined d_msg__dMsg_value_init();
undefined d_msg__dMsg_setString();
undefined d_msg__dMsg_yose_select();
undefined d_msg__dMsg_frame_openTalk();
undefined d_msg__dMsg_frame_openItem();
undefined d_msg__dMsg_frame_close();
undefined d_msg__dMsg_textPosition();
undefined d_msg__dMsg_rubySet();
undefined d_msg__dMsg_mesgOutPos();
undefined d_msg__dMsg_arrowInit();
undefined d_msg__dMsg_arrowMove();
undefined d_msg__dMsg_dotMove();
undefined d_msg__dMsg_ringMove();
undefined d_msg__dMsg_lightMove();
undefined d_msg__dMsg_cornerMove();
undefined d_msg__dMsg_tactGuideShow();
undefined d_msg__dMsg_numberInput();
undefined d_msg__dMsg_tactInput();
undefined d_msg__dMsg_tactInput2();
undefined d_msg__dMsg_subTextScale();
undefined d_msg__dMsg_subTextSizeSet();
undefined d_msg__dMsg_subTextOpen();
undefined d_msg__dMsg_subTextClose();
undefined d_msg__dMsg_setCloseSound();
undefined d_msg__dMsg_setCancelMode();
undefined d_msg__dMsg_messageShow();
undefined d_msg__dMsg_stopProc();
undefined d_msg__dMsg_selectProc();
undefined d_msg__dMsg_inputProc();
undefined d_msg__dMsg_demoProc();
undefined d_msg__dMsg_continueProc();
undefined d_msg__dMsg_closewaitProc();
undefined d_msg__dMsg_finishProc();
undefined d_msg__dMsg_openTalkProc();
undefined d_msg__dMsg_openItemProc();
undefined d_msg__dMsg_openTactProc();
undefined d_msg__dMsg_openDemoProc();
undefined d_msg__dMsg_closeProc();
undefined d_msg__dMsg_closeProc2();
undefined d_msg__dMsg_initProc();
undefined d_msg__dMsg_tactProc();
undefined d_msg__dMsg_outnowProc();
undefined d_msg__dMsg_Draw();
undefined d_msg__dMsg_Execute();
undefined d_msg__dMsg_IsDelete();
undefined d_msg__dMsg_Delete();
undefined d_msg__dMsg_Create();
void dDlst_2Dtact_c__dDlst_2Dtact_c_destructor(dDlst_2Dtact_c * this);
void dDlst_2DMSG_c__dDlst_2DMSG_c_destructor(dDlst_2DMSG_c * this);
undefined d_msg____sinit_d_msg_cpp();
void dNm_HIO_c__dNm_HIO_c(dNm_HIO_c * this);
undefined dName_c___create(dName_c * this);
undefined dName_c__initial(dName_c * this);
undefined dName_c___delete(dName_c * this);
undefined dName_c___move(dName_c * this);
undefined dName_c__nameCheck(dName_c * this);
undefined dName_c__playNameSet(dName_c * this, int param_1);
undefined dName_c___open(dName_c * this);
undefined dName_c___close(dName_c * this);
undefined dName_c__NameInMain(dName_c * this);
undefined dName_c__nameCursorAnime(dName_c * this);
undefined dName_c__EndWait(dName_c * this);
undefined dName_c__MojiSelect(dName_c * this);
undefined dName_c__mojiChange(dName_c * this, uchar param_1);
undefined dName_c__selectMojiSet(dName_c * this);
undefined dName_c__getMoji(dName_c * this);
undefined dName_c__setMoji(dName_c * this, int param_1);
undefined dName_c__setNameText(dName_c * this);
undefined dName_c__nameCursorMove(dName_c * this);
undefined dName_c__selectCursorMove(dName_c * this);
undefined dName_c__selectCursorTxtChange(dName_c * this);
undefined dName_c__selectCursorAnime(dName_c * this);
undefined dName_c__menuCursorPosSet(dName_c * this);
undefined dName_c__MenuSelect(dName_c * this);
undefined dName_c__MenuButtonAnime(dName_c * this);
undefined dName_c__menuAbtnSelect(dName_c * this);
undefined dName_c__backSpace(dName_c * this);
undefined dName_c__mojiListChange(dName_c * this, uchar param_1);
undefined dName_c__menuCursorMove(dName_c * this);
undefined dName_c__selectCursorPosSet(dName_c * this, int param_1);
undefined dName_c__menuCursorAnime(dName_c * this);
undefined dName_c___draw(dName_c * this);
undefined dName_c__screenSet(dName_c * this);
undefined dName_c__paneTransInit(dName_c * this);
undefined dName_c__PaneTranceTitle(dName_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dName_c__PaneTranceName(dName_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dName_c__PaneTranceBase0(dName_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dName_c__PaneTranceBase(dName_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dName_c__PaneTranceHira(dName_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dName_c__PaneTranceKata(dName_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dName_c__PaneTranceEisu(dName_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dName_c__PaneTranceArrow(dName_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dName_c__PaneTranceEnd(dName_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5, int param_6);
undefined dName_c__displayInit(dName_c * this);
undefined dName_c__NameStrSet(dName_c * this);
undefined dDlst_NameIN_c__draw(dDlst_NameIN_c * this);
void dNm_HIO_c__dNm_HIO_c_destructor(dNm_HIO_c * this);
undefined d_name____sinit_d_name_cpp();
undefined dNpc_JntCtrl_c__angCalcS(dNpc_JntCtrl_c * this, short * param_1, short param_2, short param_3, short param_4);
undefined dNpc_JntCtrl_c__limitter(dNpc_JntCtrl_c * this, short * param_1, short param_2, short param_3);
undefined dNpc_JntCtrl_c__follow(dNpc_JntCtrl_c * this, short * param_1, short param_2, short param_3, int param_4);
undefined dNpc_JntCtrl_c__move(dNpc_JntCtrl_c * this, short param_1, int param_2);
undefined dNpc_JntCtrl_c__lookAtTarget(dNpc_JntCtrl_c * this, short * param_1, cXyz * param_2, cXyz * param_3, short param_4, short param_5, bool param_6);
undefined dNpc_JntCtrl_c__setParam(dNpc_JntCtrl_c * this, short param_1, short param_2, short param_3, short param_4, short param_5, short param_6, short param_7, short param_8, short param_9);
undefined dNpc_PathRun_c__setInfDrct(dNpc_PathRun_c * this, dPath * param_1);
undefined dNpc_PathRun_c__setInf(dNpc_PathRun_c * this, uchar param_1, char param_2, uchar param_3);
undefined dNpc_PathRun_c__nextPath(dNpc_PathRun_c * this, char param_1);
undefined dNpc_PathRun_c__getPoint(dNpc_PathRun_c * this, uchar param_1);
undefined dNpc_PathRun_c__chkPointPass(dNpc_PathRun_c * this, cXyz * param_1, bool param_2);
undefined dNpc_PathRun_c__incIdx(dNpc_PathRun_c * this);
undefined dNpc_PathRun_c__incIdxLoop(dNpc_PathRun_c * this);
undefined dNpc_PathRun_c__incIdxAuto(dNpc_PathRun_c * this);
undefined dNpc_PathRun_c__decIdx(dNpc_PathRun_c * this);
undefined dNpc_PathRun_c__decIdxLoop(dNpc_PathRun_c * this);
undefined dNpc_PathRun_c__decIdxAuto(dNpc_PathRun_c * this);
undefined dNpc_PathRun_c__nextIdx(dNpc_PathRun_c * this);
undefined dNpc_PathRun_c__nextIdxAuto(dNpc_PathRun_c * this);
undefined dNpc_PathRun_c__absIdx(dNpc_PathRun_c * this, uchar param_1, uchar param_2);
undefined dNpc_PathRun_c__maxPoint(dNpc_PathRun_c * this);
undefined dNpc_PathRun_c__pointArg(dNpc_PathRun_c * this, uchar param_1);
undefined dNpc_PathRun_c__setNearPathIndx(dNpc_PathRun_c * this, cXyz * param_1, float param_2);
undefined dNpc_PathRun_c__setNearPathIndxMk(dNpc_PathRun_c * this, cXyz * param_1);
undefined dNpc_PathRun_c__setNearPathIndxMk2(dNpc_PathRun_c * this, cXyz * param_1, uchar param_2, uchar param_3);
undefined dNpc_PathRun_c__chkInside(dNpc_PathRun_c * this, cXyz * param_1);
undefined dNpc_EventCut_c__setActorInfo(dNpc_EventCut_c * this, char * param_1, fopAc_ac_c * param_2);
undefined dNpc_EventCut_c__setActorInfo2(dNpc_EventCut_c * this, char * param_1, fopNpc_npc_c * actor);
undefined d_npc__dNpc_setAnmIDRes();
undefined d_npc__dNpc_setAnmFNDirect();
undefined d_npc__dNpc_setAnm();
undefined d_npc__dNpc_setShadowModel();
undefined d_npc__dNpc_playerEyePos(undefined8 param_1, cXyz * param_2);
undefined d_npc__dNpc_calc_DisXZ_AngY(cXyz * param_1, cXyz * param_2, float * param_3, short * param_4);
undefined d_npc__dNpc_chkArasoi();
undefined d_npc__dNpc_chkLetterPassed();
undefined fopNpc_npc_c__setCollision(fopNpc_npc_c * this, float radius, float height);
undefined fopNpc_npc_c__talk(fopNpc_npc_c * this, int param_1);
undefined d_npc__dNpc_setAnm_2();
undefined dNpc_HeadAnm_c__swing_vertical_init(dNpc_HeadAnm_c * this, short param_1, short param_2, short param_3, int param_4);
undefined dNpc_HeadAnm_c__swing_vertical(dNpc_HeadAnm_c * this);
undefined dNpc_HeadAnm_c__swing_horizone_init(dNpc_HeadAnm_c * this, short param_1, short param_2, short param_3, int param_4);
undefined dNpc_HeadAnm_c__swing_horizone(dNpc_HeadAnm_c * this);
undefined dNpc_HeadAnm_c__move(dNpc_HeadAnm_c * this);
undefined dNpc_JntCtrl_c__chkLim(dNpc_JntCtrl_c * this, short param_1, int param_2, int param_3);
undefined dNpc_JntCtrl_c__turn_fromBackbone2Head(dNpc_JntCtrl_c * this, short param_1, short * param_2, short * param_3, bool param_4);
undefined dNpc_JntCtrl_c__turn_fromHead2Backbone(dNpc_JntCtrl_c * this, short param_1, short * param_2, short * param_3);
undefined dNpc_JntCtrl_c__follow_current(dNpc_JntCtrl_c * this, short * param_1, short param_2);
undefined dNpc_JntCtrl_c__lookAtTarget_2(dNpc_JntCtrl_c * this, short * param_1, cXyz * param_2, cXyz * param_3, short param_4, short param_5, bool param_6);
undefined d_npc__dNpc_chkAttn();
undefined dNpc_EventCut_c__cutProc(dNpc_EventCut_c * this);
undefined dNpc_EventCut_c__cutWaitStart(dNpc_EventCut_c * this);
undefined dNpc_EventCut_c__cutWaitProc(dNpc_EventCut_c * this);
void dNpc_EventCut_c__cutTurnToActorStart(dNpc_EventCut_c * this);
undefined dNpc_EventCut_c__cutTurnToActorProc(dNpc_EventCut_c * this);
undefined dNpc_EventCut_c__cutMoveToActorStart(dNpc_EventCut_c * this);
undefined dNpc_EventCut_c__cutMoveToActorProc(dNpc_EventCut_c * this);
dNpc_EventCut_c * dNpc_EventCut_c__findActorCallBack(fopAc_ac_c * pActor, dNpc_EventCut_c * pData);
undefined dNpc_EventCut_c__cutTurnToPosStart(dNpc_EventCut_c * this);
undefined dNpc_EventCut_c__cutTurnToPosProc(dNpc_EventCut_c * this);
undefined dNpc_EventCut_c__cutMoveToPosStart(dNpc_EventCut_c * this);
undefined dNpc_EventCut_c__cutMoveToPosProc(dNpc_EventCut_c * this);
undefined dNpc_EventCut_c__cutTalkMsgStart(dNpc_EventCut_c * this);
undefined dNpc_EventCut_c__cutContinueTalkStart(dNpc_EventCut_c * this);
undefined dNpc_EventCut_c__cutTalkMsgProc(dNpc_EventCut_c * this);
void dOw_HIO_c__dOw_HIO_c(dOw_HIO_c * this);
undefined dDlst_Ow_main_c__draw(dDlst_Ow_main_c * this);
undefined dDlst_Ow_mask_c__draw(dDlst_Ow_mask_c * this);
undefined dOperate_wind_c__dOw_angleRegular(dOperate_wind_c * this, float param_1);
undefined dOperate_wind_c__dOw_stickControl(dOperate_wind_c * this, int param_1, short param_2);
undefined dOperate_wind_c__screenSet(dOperate_wind_c * this);
undefined dOperate_wind_c__alphaSet(dOperate_wind_c * this, float param_1);
undefined dOperate_wind_c__arrowColor1(dOperate_wind_c * this);
undefined dOperate_wind_c__arrowColor2(dOperate_wind_c * this);
undefined dOperate_wind_c__maskColor(dOperate_wind_c * this);
undefined dOperate_wind_c__arrowDirection(dOperate_wind_c * this);
undefined dOperate_wind_c__windSet(dOperate_wind_c * this);
undefined dOperate_wind_c__ringScale(dOperate_wind_c * this, float param_1);
undefined dOperate_wind_c__directionTrans(dOperate_wind_c * this, float param_1);
undefined dOperate_wind_c__lineInit(dOperate_wind_c * this, float param_1);
undefined dOperate_wind_c__lineDraw(dOperate_wind_c * this);
undefined dOperate_wind_c__arrowRotate(dOperate_wind_c * this, fopMsgM_pane_class * param_1, short param_2);
undefined dOperate_wind_c__initialize(dOperate_wind_c * this);
undefined dOperate_wind_c___create(dOperate_wind_c * this);
undefined dOperate_wind_c___delete(dOperate_wind_c * this);
undefined dOperate_wind_c___move(dOperate_wind_c * this);
undefined dOperate_wind_c___draw(dOperate_wind_c * this);
undefined dOperate_wind_c___open(dOperate_wind_c * this);
undefined dOperate_wind_c___close(dOperate_wind_c * this);
undefined dOw_c___create(dOw_c * this);
undefined dOw_c___delete(dOw_c * this);
undefined d_operate_wind__dOw_Draw();
undefined d_operate_wind__dOw_Execute();
undefined d_operate_wind__dOw_IsDelete();
undefined d_operate_wind__dOw_Delete();
undefined d_operate_wind__dOw_Create();
void dDlst_Ow_mask_c__dDlst_Ow_mask_c_destructor(dDlst_Ow_mask_c * this);
void dDlst_Ow_main_c__dDlst_Ow_main_c_destructor(dDlst_Ow_main_c * this);
void dOperate_wind_c__dOperate_wind_c_destructor(dOperate_wind_c * this);
void dOw_HIO_c__dOw_HIO_c_destructor(dOw_HIO_c * this);
undefined d_operate_wind____sinit_d_operate_wind_cpp();
void dMn_HIO_c__dMn_HIO_c(dMn_HIO_c * this);
undefined dMetronome_c__screenSet(dMetronome_c * this);
undefined dMetronome_c__metronomeMove(dMetronome_c * this);
undefined dMetronome_c__melodyInit(dMetronome_c * this, uchar param_1);
undefined dMetronome_c__melodyMove(dMetronome_c * this);
undefined dMetronome_c__melodyGuideShow(dMetronome_c * this, long param_1, short param_2);
undefined dMetronome_c__melodyShow(dMetronome_c * this);
undefined dMetronome_c__melodyDemo(dMetronome_c * this);
undefined dMetronome_c__melodyFlash(dMetronome_c * this);
undefined dMetronome_c__melodyShift(dMetronome_c * this);
undefined dMetronome_c__initialize(dMetronome_c * this);
undefined dMetronome_c___create(dMetronome_c * this);
undefined dMetronome_c___delete(dMetronome_c * this);
undefined dMetronome_c___move(dMetronome_c * this);
undefined dMetronome_c___draw(dMetronome_c * this);
undefined dMetronome_c___open(dMetronome_c * this);
undefined dMetronome_c___close(dMetronome_c * this);
void dMn_HIO_c__dMn_HIO_c_destructor(dMn_HIO_c * this);
undefined d_metronome____sinit_d_metronome_cpp();
undefined d_ovlp_fade__dOvlpFd_Draw();
undefined d_ovlp_fade__dOvlpFd_FadeOut();
undefined d_ovlp_fade__dOvlpFd_Wait();
undefined d_ovlp_fade__dOvlpFd_FadeIn();
undefined d_ovlp_fade__dOvlpFd_Execute();
undefined d_ovlp_fade__dOvlpFd_IsDelete();
undefined d_ovlp_fade__dOvlpFd_Delete();
undefined d_ovlp_fade__dOvlpFd_Create();
undefined dOvlpFd2_dlst_c__draw(dOvlpFd2_dlst_c * this);
void dOvlpFd2_c__dOvlpFd2_c(dOvlpFd2_c * this);
undefined dOvlpFd2_c__execFirstSnap(dOvlpFd2_c * this);
undefined dOvlpFd2_c__execFadeOut(dOvlpFd2_c * this);
undefined dOvlpFd2_c__execNextSnap(dOvlpFd2_c * this);
undefined dOvlpFd2_c__execFadeIn(dOvlpFd2_c * this);
undefined d_ovlp_fade2__dOvlpFd2_Draw();
undefined d_ovlp_fade2__dOvlpFd2_Execute();
undefined d_ovlp_fade2__dOvlpFd2_IsDelete();
undefined d_ovlp_fade2__dOvlpFd2_Delete();
undefined d_ovlp_fade2__dOvlpFd2_Create();
undefined d_ovlp_fade2__cLib_calcTimer();
void dOvlpFd2_dlst_c__dOvlpFd2_dlst_c_destructor(dOvlpFd2_dlst_c * this);
void dDlst_snapShot_c__dDlst_snapShot_c_destructor(dDlst_snapShot_c * this);
undefined dDlst_snapShot_c__draw(dDlst_snapShot_c * this);
int dDlst_2DtEff1_c__init(dDlst_2DtEff1_c * this, EVP_PKEY_CTX * ctx);
undefined dDlst_2DtEff1_c__draw(dDlst_2DtEff1_c * this);
undefined dDlst_snapShot2_c__draw(dDlst_snapShot2_c * this);
undefined d_ovlp_fade4__dDlst_setResTimgObj();
undefined d_ovlp_fade4__cnvAddress();
undefined dDlst_2Dt_Sp_c__draw(dDlst_2Dt_Sp_c * this);
int dDlst_2Dt_Sp_c__init(dDlst_2Dt_Sp_c * this, EVP_PKEY_CTX * ctx);
void dOvlpFd4_c__dOvlpFd4_c(dOvlpFd4_c * this);
undefined dOvlpFd4_c__drawFadeOut(dOvlpFd4_c * this);
undefined dOvlpFd4_c__drawFadeIn(dOvlpFd4_c * this);
undefined dOvlpFd4_c__execFirstSnap(dOvlpFd4_c * this);
undefined dOvlpFd4_c__execFadeOut(dOvlpFd4_c * this);
undefined dOvlpFd4_c__execNextSnap(dOvlpFd4_c * this);
undefined dOvlpFd4_c__execFadeIn(dOvlpFd4_c * this);
undefined d_ovlp_fade4__dOvlpFd4_Draw();
undefined d_ovlp_fade4__dOvlpFd4_Execute();
undefined d_ovlp_fade4__dOvlpFd4_IsDelete();
undefined d_ovlp_fade4__dOvlpFd4_Delete();
undefined d_ovlp_fade4__dOvlpFd4_Create();
void dDlst_2DtEff1_c__dDlst_2DtEff1_c_destructor(dDlst_2DtEff1_c * this);
void dDlst_2Dt_Sp_c__dDlst_2Dt_Sp_c_destructor(dDlst_2Dt_Sp_c * this);
void dDlst_snapShot2_c__dDlst_snapShot2_c_destructor(dDlst_snapShot2_c * this);
undefined d_picture_box__dPb_erasePicture();
undefined dJle_Pb_c__screenSet(dJle_Pb_c * this);
undefined dJle_Pb_c__screenSet2(dJle_Pb_c * this);
undefined dJle_Pb_c__cameraAlphaInc(dJle_Pb_c * this, float param_1);
undefined dJle_Pb_c__browseAlphaInc(dJle_Pb_c * this, float param_1);
undefined dJle_Pb_c__getAlphaInc(dJle_Pb_c * this, float param_1);
undefined dJle_Pb_c__alphaDec(dJle_Pb_c * this, float param_1);
undefined dJle_Pb_c__zoomScale(dJle_Pb_c * this);
undefined dJle_Pb_c__changeScale(dJle_Pb_c * this, int param_1);
undefined dJle_Pb_c__up_downIconMove(dJle_Pb_c * this);
undefined dJle_Pb_c__left_rightIconMove(dJle_Pb_c * this);
undefined dJle_Pb_c__clickShutterMode(dJle_Pb_c * this);
undefined dJle_Pb_c__selectMode(dJle_Pb_c * this);
undefined dJle_Pb_c__cameraMode(dJle_Pb_c * this);
undefined dJle_Pb_c__pictureDraw(dJle_Pb_c * this, uchar param_1, int param_2);
undefined dJle_Pb_c__pictureEraseWait(dJle_Pb_c * this);
undefined dJle_Pb_c__pictureDecide(dJle_Pb_c * this);
undefined dJle_Pb_c__pictureErase(dJle_Pb_c * this);
undefined dJle_Pb_c__pictureTransX(dJle_Pb_c * this, float param_1, float param_2, float param_3, float param_4, float param_5);
undefined dJle_Pb_c__changePicture(dJle_Pb_c * this);
undefined dJle_Pb_c__shutterChange(dJle_Pb_c * this);
undefined dJle_Pb_c__moveCamera(dJle_Pb_c * this);
undefined dJle_Pb_c__moveBrowse(dJle_Pb_c * this);
undefined dJle_Pb_c__selectBrowse(dJle_Pb_c * this);
undefined dJle_Pb_c__getBrowse(dJle_Pb_c * this);
undefined dJle_Pb_c__changeBrowseToCamera(dJle_Pb_c * this);
undefined dJle_Pb_c__changeCameraToBrowse(dJle_Pb_c * this);
undefined dJle_Pb_c__setColorInit(dJle_Pb_c * this, uchar param_1);
undefined dJle_Pb_c__setColorAnime(dJle_Pb_c * this, uchar param_1);
undefined dJle_Pb_c__changeData(dJle_Pb_c * this);
undefined dJle_Pb_c__label_sort(dJle_Pb_c * this);
undefined dJle_Pb_c__getPicLabelData(dJle_Pb_c * this, uchar param_1);
undefined dJle_Pb_c__shutterLineRotateCenter(dJle_Pb_c * this, float param_1, int param_2);
undefined dJle_Pb_c__shutterLineRotateInitPos(dJle_Pb_c * this, float param_1, int param_2);
undefined dJle_Pb_c__shutterLineMove(dJle_Pb_c * this);
undefined dJle_Pb_c__shutterLineDraw(dJle_Pb_c * this, uchar param_1);
undefined dJle_Pb_c__messageSet(dJle_Pb_c * this, ulong param_1);
undefined dJle_Pb_c__remainMessageSet(dJle_Pb_c * this, uchar param_1);
undefined dJle_Pb_c__existMessageSet(dJle_Pb_c * this, uchar param_1);
undefined dJle_Pb_c__shutterShow(dJle_Pb_c * this);
undefined dJle_Pb_c__shutterHide(dJle_Pb_c * this);
undefined dJle_Pb_c___create(dJle_Pb_c * this, JKRExpHeap * param_1);
undefined dJle_Pb_c___copen(dJle_Pb_c * this);
undefined dJle_Pb_c___bopen(dJle_Pb_c * this);
undefined dJle_Pb_c___gopen(dJle_Pb_c * this);
undefined dJle_Pb_c___close(dJle_Pb_c * this);
undefined dJle_Pb_c___cmove(dJle_Pb_c * this);
undefined dJle_Pb_c___bmove(dJle_Pb_c * this);
undefined dJle_Pb_c___gmove(dJle_Pb_c * this);
undefined dJle_Pb_c__draw(dJle_Pb_c * this);
undefined dJle_Pb_c___delete(dJle_Pb_c * this, JKRExpHeap * param_1);
undefined d_picture_box__dPb_Draw();
undefined d_picture_box__dPb_Execute();
undefined d_picture_box__dPb_IsDelete();
undefined d_picture_box__dPb_Delete();
undefined d_picture_box__dPb_Create();
void dJle_Pb_c__dJle_Pb_c_destructor(dJle_Pb_c * this);
undefined d_s_logo__checkProgSelect();
undefined d_s_logo__nintendoInDraw();
undefined d_s_logo__nintendoOutDraw();
undefined d_s_logo__nintendoOut2Draw();
undefined d_s_logo__progInDraw();
undefined d_s_logo__progSelDraw();
undefined d_s_logo__progOutDraw();
undefined d_s_logo__progSetDraw();
undefined d_s_logo__progChangeDraw();
undefined d_s_logo__dolbyInDraw();
undefined d_s_logo__dolbyOutDraw();
undefined d_s_logo__dvdWaitDraw();
undefined d_s_logo__dScnLogo_Draw();
undefined d_s_logo__dScnLogo_Execute();
undefined d_s_logo__dScnLogo_IsDelete();
undefined d_s_logo__dScnLogo_Delete();
undefined d_s_logo__phase_0();
undefined d_s_logo__phase_1();
undefined d_s_logo__aramMount();
undefined d_s_logo__onMemMount();
undefined d_s_logo__phase_2();
undefined d_s_logo__dScnLogo_Create();
undefined d_s_menu__dScnMenu_Draw();
undefined d_s_menu__dScnMenu_Execute();
undefined d_s_menu__dScnMenu_IsDelete();
undefined d_s_menu__dScnMenu_Delete();
undefined d_s_menu__phase_1();
undefined d_s_menu__phase_2();
undefined d_s_menu__dScnMenu_Create();
void myFontClass__myFontClass_destructor(myFontClass * this);
undefined myFontClass__drawChar_scale(myFontClass * this, float param_1, float param_2, float param_3, float param_4, int param_5, bool param_6);
undefined JUTResFont__getResFont(JUTResFont * this);
undefined JUTResFont__getFontType(JUTResFont * this);
undefined JUTResFont__getLeading(JUTResFont * this);
undefined JUTResFont__getWidth(JUTResFont * this);
undefined JUTResFont__getAscent(JUTResFont * this);
undefined JUTResFont__getDescent(JUTResFont * this);
undefined JUTResFont__getHeight(JUTResFont * this);
void dSn_HIO_c__dSn_HIO_c(dSn_HIO_c * this);
undefined d_s_name__phase_1();
undefined d_s_name__phase_2();
undefined d_s_name__phase_3();
undefined d_s_name__resLoad();
undefined dScnName_c__create(dScnName_c * this);
undefined dScnName_c__cloth_create(dScnName_c * this);
undefined dScnName_c__cloth_move(dScnName_c * this);
undefined dScnName_c__cloth2D_create(dScnName_c * this);
undefined dScnName_c__buttonIconCreate(dScnName_c * this);
undefined dScnName_c__paneTransButtonIcon(dScnName_c * this, short param_1, uchar param_2, float param_3, float param_4, uchar param_5);
undefined dScnName_c__execute(dScnName_c * this);
undefined dScnName_c__setView(dScnName_c * this);
undefined dScnName_c__draw(dScnName_c * this);
void dScnName_c__dScnName_c_destructor(dScnName_c * this);
undefined dScnName_c__MemCardCheckMain(dScnName_c * this);
undefined dScnName_c__MemCardStatCheck(dScnName_c * this);
undefined dScnName_c__MemCardLoadWait(dScnName_c * this);
undefined dScnName_c__MemCardErrMsgWaitKey(dScnName_c * this);
undefined dScnName_c__MemCardErrMsgWaitKey2(dScnName_c * this);
undefined dScnName_c__MemCardGotoIPLSelect(dScnName_c * this);
undefined dScnName_c__MemCardGotoIPL(dScnName_c * this);
undefined dScnName_c__MemCardErrMsgWaitNoSaveSel(dScnName_c * this);
undefined dScnName_c__MemCardErrMsgWaitFormatSel(dScnName_c * this);
undefined dScnName_c__MemCardErrMsgWaitFormatSel2(dScnName_c * this);
undefined dScnName_c__MemCardFormat(dScnName_c * this);
undefined dScnName_c__MemCardFormatCheck(dScnName_c * this);
undefined dScnName_c__MemCardMakeGameFileSel(dScnName_c * this);
undefined dScnName_c__MemCardMakeGameFile(dScnName_c * this);
undefined dScnName_c__MemCardMakeGameFileCheck(dScnName_c * this);
undefined dScnName_c__MemCardGotoFileSelect(dScnName_c * this);
undefined dScnName_c__MemCardCheckDbg(dScnName_c * this);
undefined dScnName_c__MemCardCheckDbgWait(dScnName_c * this);
undefined dScnName_c__FileErrorDraw(dScnName_c * this);
undefined dScnName_c__NoteOpen(dScnName_c * this);
undefined dScnName_c__NoteOpenWait(dScnName_c * this);
undefined dScnName_c__FileSelectOpen(dScnName_c * this);
undefined dScnName_c__buttonIconProc(dScnName_c * this);
undefined dScnName_c__FileSelOpenMain(dScnName_c * this);
undefined dScnName_c__FileselOpenWait(dScnName_c * this);
undefined dScnName_c__FileSelectMain(dScnName_c * this);
undefined dScnName_c__FileSelectMainNormal(dScnName_c * this);
undefined dScnName_c__FileSelectMainExSave(dScnName_c * this);
undefined dScnName_c__ResetWait(dScnName_c * this);
undefined dScnName_c__FileSelectClose(dScnName_c * this);
undefined dScnName_c__FileSelectDraw(dScnName_c * this);
undefined dScnName_c__NameInOpen(dScnName_c * this);
undefined dScnName_c__NameOpenMain(dScnName_c * this);
undefined dScnName_c__NameOpenWait(dScnName_c * this);
undefined dScnName_c__NameInMain(dScnName_c * this);
undefined dScnName_c__NameInClose(dScnName_c * this);
undefined dScnName_c__NameInDraw(dScnName_c * this);
undefined dScnName_c__ShopDemoDataLoad(dScnName_c * this);
undefined dScnName_c__ShopDemoDataSet(dScnName_c * this);
undefined dScnName_c__SaveOpen(dScnName_c * this);
undefined dScnName_c__SaveMain(dScnName_c * this);
undefined dScnName_c__SaveClose(dScnName_c * this);
undefined dScnName_c__SaveDraw(dScnName_c * this);
undefined dScnName_c__NoneDraw(dScnName_c * this);
undefined dScnName_c__changeGameScene(dScnName_c * this);
undefined d_s_name__dScnName_Draw();
undefined d_s_name__dScnName_Execute();
undefined d_s_name__dScnName_IsDelete();
undefined d_s_name__dScnName_Delete();
undefined d_s_name__dScnName_Create();
undefined dDlst_BTICN_c__draw(dDlst_BTICN_c * this);
undefined dDlst_FLSEL_CLOTH_c__draw(dDlst_FLSEL_CLOTH_c * this);
void dDlst_FLSEL_CLOTH_c__dDlst_FLSEL_CLOTH_c_destructor(dDlst_FLSEL_CLOTH_c * this);
void dDlst_BTICN_c__dDlst_BTICN_c_destructor(dDlst_BTICN_c * this);
void dSn_HIO_c__dSn_HIO_c_destructor(dSn_HIO_c * this);
undefined d_s_name____sinit_d_s_name_cpp();
undefined dScnOpen_c__create(dScnOpen_c * this);
undefined dScnOpen_c__execute(dScnOpen_c * this);
undefined dScnOpen_c__draw(dScnOpen_c * this);
void dScnOpen_c__dScnOpen_c_destructor(dScnOpen_c * this);
undefined dScnOpen_c__changeGameScene(dScnOpen_c * this);
undefined d_s_open__dScnOpen_Draw();
undefined d_s_open__dScnOpen_Execute();
undefined d_s_open__dScnOpen_IsDelete();
undefined d_s_open__dScnOpen_Delete();
undefined d_s_open__dScnOpen_Create();
undefined dScnOpen_message_c__set_message(dScnOpen_message_c * this, ulong param_1, int param_2);
undefined dScnOpen_message_c__exec(dScnOpen_message_c * this);
void dScnOpen_message_c__dScnOpen_message_c(dScnOpen_message_c * this, JKRExpHeap * param_1);
void dScnOpen_message_c__dScnOpen_message_c_destructor(dScnOpen_message_c * this);
void dScnOpen_proc_c__dScnOpen_proc_c(dScnOpen_proc_c * this);
void dScnOpen_proc_c__dScnOpen_proc_c_destructor(dScnOpen_proc_c * this);
undefined dScnOpen_proc_c__proc_execute(dScnOpen_proc_c * this);
undefined dScnOpen_proc_c__proc_draw(dScnOpen_proc_c * this);
undefined dScnOpen_proc_c__draw(dScnOpen_proc_c * this);
undefined dScnPly_ply_c__calcPauseTimer(dScnPly_ply_c * this);
void dScnPly_dark_HIO_c__dScnPly_dark_HIO_c(dScnPly_dark_HIO_c * this);
void dScnPly_reg_childHIO_c__dScnPly_reg_childHIO_c(dScnPly_reg_childHIO_c * this);
void dScnPly_env_otherHIO_c__dScnPly_env_otherHIO_c(dScnPly_env_otherHIO_c * this);
void dScnPly_env_debugHIO_c__dScnPly_env_debugHIO_c(dScnPly_env_debugHIO_c * this);
void dScnPly_msg_HIO_c__dScnPly_msg_HIO_c(dScnPly_msg_HIO_c * this);
undefined dScnPly_msg_HIO_c__dScnPly_msg_HIO_checkUpdate(dScnPly_msg_HIO_c * this, uchar param_1);
undefined dScnPly_msg_HIO_c__dScnPly_msg_HIO_setUpdate(dScnPly_msg_HIO_c * this, uchar param_1);
undefined dScnPly_msg_HIO_c__dScnPly_msg_HIO_numUpdate(dScnPly_msg_HIO_c * this, short param_1, short param_2);
undefined dScnPly_msg_HIO_c__dScnPly_msg_HIO_padCheck(dScnPly_msg_HIO_c * this);
undefined dScnPly_msg_HIO_c__dScnPly_msg_HIO_messageProc(dScnPly_msg_HIO_c * this);
undefined d_s_play__dScnPly_Draw();
undefined d_s_play__dScnPly_Execute();
undefined d_s_play__dScnPly_IsDelete();
undefined d_s_play__dScnPly_Delete();
undefined d_s_play__heapSizeCheck();
undefined d_s_play__phase_00(dScnPly_ply_c * param_1);
undefined d_s_play__phase_01();
undefined d_s_play__phase_0(dScnPly_ply_c * param_1);
undefined d_s_play__phase_1(dScnPly_ply_c * param_1);
undefined d_s_play__phase_2();
undefined d_s_play__phase_3();
undefined4 d_s_play__phase_4(dScnPly_ply_c * param_1);
undefined d_s_play__phase_5();
undefined d_s_play__phase_6();
undefined d_s_play__phase_compleate();
undefined d_s_play__dScnPly_Create(dScnPly_ply_c * param_1);
void dScnPly_msg_HIO_c__dScnPly_msg_HIO_c_destructor(dScnPly_msg_HIO_c * this);
void dScnPly_env_debugHIO_c__dScnPly_env_debugHIO_c_destructor(dScnPly_env_debugHIO_c * this);
void dScnPly_env_otherHIO_c__dScnPly_env_otherHIO_c_destructor(dScnPly_env_otherHIO_c * this);
void dScnPly_reg_childHIO_c__dScnPly_reg_childHIO_c_destructor(dScnPly_reg_childHIO_c * this);
void dScnPly_dark_HIO_c__dScnPly_dark_HIO_c_destructor(dScnPly_dark_HIO_c * this);
undefined d_s_play____sinit_d_s_play_cpp();
void dScnPly_preLoad_HIO_c__dScnPly_preLoad_HIO_c_destructor(dScnPly_preLoad_HIO_c * this);
void dScnPly_env_HIO_c__dScnPly_env_HIO_c_destructor(dScnPly_env_HIO_c * this);
void dScnPly_reg_HIO_c__dScnPly_reg_HIO_c_destructor(dScnPly_reg_HIO_c * this);
void d_s_room__setMapImage(room_of_scene_class * param_1);
undefined d_s_room__deleteMapImage();
char * d_s_room__setArcName(room_of_scene_class * param_1);
undefined d_s_room__dScnRoom_Draw();
undefined d_s_room__deleteJugge();
undefined d_s_room__objectSetCheck(room_of_scene_class * param_1);
undefined d_s_room__dScnRoom_Execute(room_of_scene_class * param_1);
undefined d_s_room__dScnRoom_IsDelete();
undefined d_s_room__dScnRoom_Delete();
int d_s_room__phase_0(room_of_scene_class * param_1);
undefined d_s_room__phase_1();
undefined d_s_room__phase_2();
void dStage_roomControl_c__setZoneNo(int param_1, int param_2);
undefined d_s_room__phase_3();
undefined d_s_room__phase_4();
undefined d_s_room__dScnRoom_Create(room_of_scene_class * param_1);
undefined d_s_title__dScnTitle_Draw();
undefined d_s_title__dScnTitle_Execute();
undefined d_s_title__dScnTitle_IsDelete();
undefined d_s_title__dScnTitle_Delete();
undefined d_s_title__dScnTitle_Create();
undefined dDlst_2DSCP_c__draw(dDlst_2DSCP_c * this);
undefined dDlst_2DSCP_c__outFontDraw(dDlst_2DSCP_c * this);
undefined d_scope__dScp_ScreenDataSet();
undefined d_scope__dScp_valueInit();
undefined d_scope__dScp_setAlpha();
undefined d_scope__dScp_wipeAngleCalc();
undefined d_scope__dScp_ArrowAnime();
undefined d_scope__dScp_wipeMove();
undefined d_scope__dScp_wipeMove2();
undefined d_scope__dScp_wipeMoveDemo();
undefined d_scope__dScp_mesgPaneShow();
undefined d_scope__dScp_mesgPaneHide();
undefined d_scope__dScp_scopeAlpha();
undefined d_scope__dScp_scopeInitAlpha();
undefined d_scope__dScp_scopeAlphaZero();
undefined d_scope__dScp_stringInit();
undefined d_scope__dScp_stringSet();
undefined d_scope__dScp_yose_select();
undefined d_scope__dScp_textPosition();
undefined d_scope__dScp_arrowInit();
undefined d_scope__dScp_arrowMove();
undefined d_scope__dScp_dotMove();
undefined d_scope__dScp_talkBeforeProc();
undefined d_scope__dScp_outnowProc();
undefined d_scope__dScp_continueProc();
undefined d_scope__dScp_forceContinueProc();
undefined d_scope__dScp_closewaitProc();
undefined d_scope__dScp_finishProc();
undefined d_scope__dScp_openProc();
undefined d_scope__dScp_openProc1();
undefined d_scope__dScp_openProc2();
undefined d_scope__dScp_moveProc();
undefined d_scope__dScp_demoProc();
undefined d_scope__dScp_talkNowProc();
undefined d_scope__dScp_closeProc();
undefined d_scope__dScp_closeDemoProc();
undefined d_scope__dScp_Draw();
undefined d_scope__dScp_Execute();
undefined d_scope__dScp_IsDelete();
undefined d_scope__dScp_Delete();
undefined d_scope__dScp_Create();
void dDlst_2DSCP_c__dDlst_2DSCP_c_destructor(dDlst_2DSCP_c * this);
undefined d_scope____sinit_d_scope_cpp();
undefined d_throwstone__CheckCreateHeap();
undefined daThrowstone_c__CreateHeap(daThrowstone_c * this);
undefined d_throwstone__daThrowstoneCreate();
undefined d_throwstone__daThrowstoneDelete();
undefined d_throwstone__daThrowstoneExecute();
undefined d_throwstone__daThrowstoneDraw();
undefined d_throwstone__daThrowstoneIsDelete();
undefined dTimer_c___create(dTimer_c * this);
undefined dTimer_c___execute(dTimer_c * this);
undefined dTimer_c___draw(dTimer_c * this);
undefined dTimer_c___delete(dTimer_c * this);
undefined dTimer_c__RestTimeCheck(dTimer_c * this, int param_1);
undefined dTimer_c__deleteCheck(dTimer_c * this);
undefined dTimer_c__SetSE(dTimer_c * this);
undefined dTimer_c__start(dTimer_c * this);
// undefined dTimer_c__start(dTimer_c * this, short param_1);
undefined dTimer_c__stock_start(dTimer_c * this);
// undefined dTimer_c__stock_start(dTimer_c * this, short param_1);
undefined dTimer_c__stop(dTimer_c * this, uchar param_1);
undefined dTimer_c__restart(dTimer_c * this, uchar param_1);
undefined dTimer_c__end(dTimer_c * this, int param_1);
undefined dTimer_c__deleteRequest(dTimer_c * this);
undefined dTimer_c__getTimeMs(dTimer_c * this);
undefined dTimer_c__getLimitTimeMs(dTimer_c * this);
undefined dTimer_c__getRestTimeMs(dTimer_c * this);
undefined dDlst_TimerScrnDraw_c__setScreen(dDlst_TimerScrnDraw_c * this, char * param_1, JKRArchive * param_2);
undefined dDlst_TimerScrnDraw_c__changeNumberTexture(dDlst_TimerScrnDraw_c * this, J2DPane * param_1, int param_2);
undefined dDlst_TimerScrnDraw_c__getNumber(dDlst_TimerScrnDraw_c * this, int param_1);
undefined dDlst_TimerScrnDraw_c__setTimer(dDlst_TimerScrnDraw_c * this, int param_1);
undefined dDlst_TimerScrnDraw_c__setRupee(dDlst_TimerScrnDraw_c * this, short param_1);
undefined d_timer__dTm_parentPaneScale();
undefined dDlst_TimerScrnDraw_c__setPaneInitialPos(dDlst_TimerScrnDraw_c * this, fopMsgM_pane_class * param_1, float param_2, float param_3);
undefined dDlst_TimerScrnDraw_c__setTimerPos(dDlst_TimerScrnDraw_c * this, float param_1, float param_2);
undefined dDlst_TimerScrnDraw_c__setRupeePos(dDlst_TimerScrnDraw_c * this, float param_1, float param_2);
undefined dDlst_TimerScrnDraw_c__setShowType(dDlst_TimerScrnDraw_c * this, uchar param_1);
undefined dDlst_TimerScrnDraw_c__setIconType(dDlst_TimerScrnDraw_c * this, void * param_1, uchar param_2);
undefined dDlst_TimerScrnDraw_c__anime(dDlst_TimerScrnDraw_c * this);
undefined dDlst_TimerScrnDraw_c__closeAnime(dDlst_TimerScrnDraw_c * this);
undefined dDlst_TimerScrnDraw_c__hide(dDlst_TimerScrnDraw_c * this);
undefined dDlst_TimerScrnDraw_c__draw(dDlst_TimerScrnDraw_c * this);
undefined d_timer__dTimer_Draw();
undefined d_timer__dTimer_Execute();
undefined d_timer__dTimer_IsDelete();
undefined d_timer__dTimer_Delete();
undefined d_timer__dTimer_Create();
undefined d_timer__dTimer_createTimer();
undefined d_timer__dTimer_createStockTimer();
void dDlst_TimerScrnDraw_c__dDlst_TimerScrnDraw_c_destructor(dDlst_TimerScrnDraw_c * this);
undefined d_water_mark__dWaterMark_Draw();
undefined dWaterMark_c__setMatrix(dWaterMark_c * this);
undefined d_water_mark__dWaterMark_Execute();
undefined d_water_mark__dWaterMark_IsDelete();
undefined d_water_mark__dWaterMark_Delete();
undefined d_water_mark__dWaterMark_Create();
undefined dWaterMark_c__create(dWaterMark_c * this);
undefined d_water_mark____sinit_d_water_mark_cpp();
undefined dWindArrow_c__createHeap(dWindArrow_c * this);
undefined dWindArrow_c__adjustHeap(dWindArrow_c * this);
undefined d_wind_arrow__dWindArrow_Draw();
undefined dWindArrow_c__draw(dWindArrow_c * this);
undefined d_wind_arrow__dWindArrow_Execute();
undefined d_wind_arrow__dWindArrow_IsDelete();
undefined d_wind_arrow__dWindArrow_Delete();
undefined d_wind_arrow__dWindArrow_Create();
undefined dWpillar_c__jointCallBack(dWpillar_c * this, int param_1);
undefined d_wpillar__dWpillar_jointCallBack();
undefined dWpillar_c__draw(dWpillar_c * this);
undefined d_wpillar__dWpillar_Draw();
undefined dWpillar_c__execute(dWpillar_c * this);
undefined d_wpillar__dWpillar_Execute();
undefined d_wpillar__dWpillar_IsDelete();
undefined dWpillar_c__wp_delete(dWpillar_c * this);
undefined d_wpillar__dWpillar_Delete();
undefined dWpillar_c__create(dWpillar_c * this);
undefined d_wpillar__dWpillar_Create();
undefined dWpotWater_EcallBack__draw(dWpotWater_EcallBack * this, JPABaseEmitter * param_1);
undefined d_wpot_water__dWpotWater_Draw();
undefined d_wpot_water__dWpotWater_Execute();
undefined d_wpot_water__dWpotWater_IsDelete();
undefined d_wpot_water__dWpotWater_Delete();
undefined d_wpot_water__dWpotWater_Create();
void dWpotWater_EcallBack__dWpotWater_EcallBack_destructor(dWpotWater_EcallBack * this);
undefined dWpotWater_EcallBack__execute(dWpotWater_EcallBack * this, JPABaseEmitter * param_1);
undefined dWpotWater_EcallBack__setup(dWpotWater_EcallBack * this, JPABaseEmitter * param_1, cXyz * param_2, csXyz * param_3, char param_4);
undefined d_wpot_water____sinit_d_wpot_water_cpp();
void DynamicModuleControlBase__DynamicModuleControlBase_destructor(DynamicModuleControlBase * this);
void DynamicModuleControlBase__DynamicModuleControlBase(DynamicModuleControlBase * this);
int DynamicModuleControlBase__link(DynamicModuleControlBase * this, char * __from, char * __to);
int DynamicModuleControlBase__unlink(DynamicModuleControlBase * this, char * __name);
undefined DynamicModuleControlBase__load_async(DynamicModuleControlBase * this);
undefined DynamicModuleControlBase__force_unlink(DynamicModuleControlBase * this);
undefined DynamicModuleControlBase__dump(DynamicModuleControlBase * this);
void DynamicModuleControl__DynamicModuleControl(DynamicModuleControl * this, char * name);
undefined DynamicModuleControl__mountCallback(DynamicModuleControl * this, void * param_1);
undefined DynamicModuleControl__initialize(DynamicModuleControl * this);
undefined DynamicModuleControl__callback(DynamicModuleControl * this, void * param_1);
undefined DynamicLink__calcSum2(ushort * data, ulong size);
undefined DynamicModuleControl__do_load(DynamicModuleControl * this);
undefined DynamicModuleControl__do_load_async(DynamicModuleControl * this);
undefined DynamicModuleControl__do_unload(DynamicModuleControl * this);
undefined DynamicModuleControl__dump2(DynamicModuleControl * this);
undefined DynamicModuleControl__do_link(DynamicModuleControl * this);
undefined DynamicModuleControl__do_unlink(DynamicModuleControl * this);
undefined DynamicModuleControl__getModuleSize(DynamicModuleControl * this);
undefined DynamicModuleControl__getModuleTypeString(DynamicModuleControl * this);
undefined DynamicLink__ModuleProlog();
undefined DynamicLink__ModuleEpilog();
undefined DynamicLink__ModuleUnresolved();
undefined DynamicLink__ModuleConstructorsX(void * * contructors);
void DynamicLink__ModuleDestructorsX(void * * destructors);
undefined DynamicModuleControlBase__do_link(DynamicModuleControlBase * this);
undefined DynamicModuleControlBase__do_load(DynamicModuleControlBase * this);
undefined DynamicModuleControlBase__do_unload(DynamicModuleControlBase * this);
undefined DynamicModuleControlBase__do_unlink(DynamicModuleControlBase * this);
undefined DynamicModuleControlBase__do_load_async(DynamicModuleControlBase * this);
undefined DynamicModuleControlBase__dump2(DynamicModuleControlBase * this);
undefined DynamicModuleControlBase__getModuleTypeString(DynamicModuleControlBase * this);
undefined DynamicModuleControlBase__getModuleSize(DynamicModuleControlBase * this);
undefined DynamicModuleControl__getModuleName(DynamicModuleControl * this);
undefined JKRArchive__getExpandedResSize(JKRArchive * this, void * param_1);
int cMl__init(cMl * this, EVP_PKEY_CTX * ctx);
undefined4 cMl__memalignB(int param_1, ulong param_2);
void cMl__free(cMl * this, void * __ptr);
undefined SComponent__cAPIGph_Painter();
undefined SComponent__cAPIGph_BeforeOfDraw();
undefined SComponent__cAPIGph_AfterOfDraw();
undefined cCcD_DivideInfo__Chk(cCcD_DivideInfo * this, cCcD_DivideInfo * param_1);
undefined cCcD_DivideArea__SetArea(cCcD_DivideArea * this, cM3dGAab * param_1);
undefined cCcD_DivideArea__CalcDivideInfo(cCcD_DivideArea * this, cCcD_DivideInfo * param_1, cM3dGAab * param_2, ulong param_3);
undefined cCcD_DivideArea__CalcDivideInfoOverArea(cCcD_DivideArea * this, cCcD_DivideInfo * param_1, cM3dGAab * param_2);
undefined cCcD_Stts__GetGStts(cCcD_Stts * this);
// undefined cCcD_Stts__GetGStts(cCcD_Stts * this);
undefined cCcD_Stts__Init(cCcD_Stts * this, int param_1, int param_2, void * param_3, uint param_4);
undefined cCcD_Stts__Ct(cCcD_Stts * this);
undefined cCcD_Stts__PlusCcMove(cCcD_Stts * this, float param_1, float param_2, float param_3);
undefined cCcD_Obj__Set(cCcD_Obj * this, cCcD_SrcObj * param_1);
undefined cCcD_TriAttr__CrossAtTg(cCcD_TriAttr * this, cCcD_CpsAttr * param_1, cXyz * param_2);
// undefined cCcD_TriAttr__CrossAtTg(cCcD_TriAttr * this, cCcD_CylAttr * param_1, cXyz * param_2);
// undefined cCcD_TriAttr__CrossAtTg(cCcD_TriAttr * this, cCcD_SphAttr * param_1, cXyz * param_2);
// undefined cCcD_TriAttr__CrossAtTg(cCcD_TriAttr * this, cCcD_TriAttr * param_1, cXyz * param_2);
undefined cCcD_TriAttr__CalcAabBox(cCcD_TriAttr * this);
undefined cCcD_TriAttr__GetNVec(cCcD_TriAttr * this, cXyz * param_1, cXyz * param_2);
// undefined cCcD_CpsAttr__CrossAtTg(cCcD_CpsAttr * this, cCcD_CpsAttr * param_1, cXyz * param_2);
// undefined cCcD_CpsAttr__CrossAtTg(cCcD_CpsAttr * this, cCcD_CylAttr * param_1, cXyz * param_2);
// undefined cCcD_CpsAttr__CrossAtTg(cCcD_CpsAttr * this, cCcD_SphAttr * param_1, cXyz * param_2);
// undefined cCcD_CpsAttr__CrossAtTg(cCcD_CpsAttr * this, cCcD_TriAttr * param_1, cXyz * param_2);
// undefined cCcD_CpsAttr__CrossCo(cCcD_CpsAttr * this, cCcD_CpsAttr * param_1, float * param_2);
// undefined cCcD_CpsAttr__CrossCo(cCcD_CpsAttr * this, cCcD_CylAttr * param_1, float * param_2);
// undefined cCcD_CpsAttr__CrossCo(cCcD_CpsAttr * this, cCcD_SphAttr * param_1, float * param_2);
undefined cCcD_CpsAttr__CalcAabBox(cCcD_CpsAttr * this);
undefined cCcD_CpsAttr__GetNVec(cCcD_CpsAttr * this, cXyz * param_1, cXyz * param_2);
// undefined cCcD_CylAttr__CrossAtTg(cCcD_CylAttr * this, cCcD_CpsAttr * param_1, cXyz * param_2);
// undefined cCcD_CylAttr__CrossAtTg(cCcD_CylAttr * this, cCcD_CylAttr * param_1, cXyz * param_2);
// undefined cCcD_CylAttr__CrossAtTg(cCcD_CylAttr * this, cCcD_SphAttr * param_1, cXyz * param_2);
// undefined cCcD_CylAttr__CrossAtTg(cCcD_CylAttr * this, cCcD_TriAttr * param_1, cXyz * param_2);
// undefined cCcD_CylAttr__CrossCo(cCcD_CylAttr * this, cCcD_CylAttr * param_1, float * param_2);
// undefined cCcD_CylAttr__CrossCo(cCcD_CylAttr * this, cCcD_SphAttr * param_1, float * param_2);
// undefined cCcD_CylAttr__CrossCo(cCcD_CylAttr * this, cCcD_CpsAttr * param_1, float * param_2);
undefined cCcD_CylAttr__CalcAabBox(cCcD_CylAttr * this);
undefined cCcD_CylAttr__GetNVec(cCcD_CylAttr * this, cXyz * param_1, cXyz * param_2);
// undefined cCcD_SphAttr__CrossAtTg(cCcD_SphAttr * this, cCcD_CpsAttr * param_1, cXyz * param_2);
// undefined cCcD_SphAttr__CrossAtTg(cCcD_SphAttr * this, cCcD_CylAttr * param_1, cXyz * param_2);
// undefined cCcD_SphAttr__CrossAtTg(cCcD_SphAttr * this, cCcD_SphAttr * param_1, cXyz * param_2);
// undefined cCcD_SphAttr__CrossAtTg(cCcD_SphAttr * this, cCcD_TriAttr * param_1, cXyz * param_2);
// undefined cCcD_SphAttr__CrossCo(cCcD_SphAttr * this, cCcD_CylAttr * param_1, float * param_2);
// undefined cCcD_SphAttr__CrossCo(cCcD_SphAttr * this, cCcD_SphAttr * param_1, float * param_2);
// undefined cCcD_SphAttr__CrossCo(cCcD_SphAttr * this, cCcD_CpsAttr * param_1, float * param_2);
undefined cCcD_SphAttr__CalcAabBox(cCcD_SphAttr * this);
undefined cCcD_SphAttr__GetNVec(cCcD_SphAttr * this, cXyz * param_1, cXyz * param_2);
// undefined cCcD_TriAttr__CrossAtTg(cCcD_TriAttr * this, cCcD_AabAttr * param_1, cXyz * param_2);
// undefined cCcD_TriAttr__CrossAtTg(cCcD_TriAttr * this, cCcD_PntAttr * param_1, cXyz * param_2);
// undefined cCcD_TriAttr__CrossAtTg(cCcD_TriAttr * this, cCcD_ShapeAttr * param_1, cXyz * param_2);
undefined cCcD_TriAttr__CrossCo(cCcD_TriAttr * this, cCcD_SphAttr * param_1, float * param_2);
// undefined cCcD_TriAttr__CrossCo(cCcD_TriAttr * this, cCcD_CylAttr * param_1, float * param_2);
// undefined cCcD_TriAttr__CrossCo(cCcD_TriAttr * this, cCcD_AabAttr * param_1, float * param_2);
// undefined cCcD_TriAttr__CrossCo(cCcD_TriAttr * this, cCcD_TriAttr * param_1, float * param_2);
// undefined cCcD_TriAttr__CrossCo(cCcD_TriAttr * this, cCcD_CpsAttr * param_1, float * param_2);
// undefined cCcD_TriAttr__CrossCo(cCcD_TriAttr * this, cCcD_PntAttr * param_1, float * param_2);
// undefined cCcD_TriAttr__CrossCo(cCcD_TriAttr * this, cCcD_ShapeAttr * param_1, float * param_2);
void cCcD_TriAttr__cCcD_TriAttr_destructor(cCcD_TriAttr * this);
undefined cCcD_Stts__ClrAt(cCcD_Stts * this);
undefined cCcD_Stts__ClrTg(cCcD_Stts * this);
undefined SComponent____sinit_c_cc_d_cpp();
// void cCcD_TriAttr__cCcD_TriAttr_destructor(cCcD_TriAttr * this);
// void cCcD_CpsAttr__cCcD_CpsAttr_destructor(cCcD_CpsAttr * this);
// void cCcD_CylAttr__cCcD_CylAttr_destructor(cCcD_CylAttr * this);
// void cCcD_SphAttr__cCcD_SphAttr_destructor(cCcD_SphAttr * this);
void cCcS__cCcS(cCcS * this);
undefined cCcS__Ct(cCcS * this);
undefined cCcS__Dt(cCcS * this);
undefined cCcS__Set(cCcS * this, cCcD_Obj * param_1);
undefined cCcS__ClrCoHitInf(cCcS * this);
undefined cCcS__ClrTgHitInf(cCcS * this);
undefined cCcS__ClrAtHitInf(cCcS * this);
int cCcS__ChkNoHitAtTg(cCcS * this, cCcD_Obj * pAt, cCcD_Obj * pTg);
undefined cCcS__ChkAtTg(cCcS * this);
undefined cCcS__ChkNoHitCo(cCcS * this, cCcD_Obj * param_1, cCcD_Obj * param_2);
undefined cCcS__ChkCo(cCcS * this);
undefined cCcS__CalcTgPlusDmg(cCcS * this, cCcD_Obj * param_1, cCcD_Obj * param_2, cCcD_Stts * param_3, cCcD_Stts * param_4);
undefined cCcS__SetAtTgCommonHitInf(cCcS * this, cCcD_Obj * param_1, cCcD_Obj * param_2, cXyz * param_3);
undefined cCcS__SetCoCommonHitInf(cCcS * this, cCcD_Obj * param_1, cXyz * param_2, cCcD_Obj * param_3, cXyz * param_4, float param_5);
undefined cCcS__SetPosCorrect(cCcS * this, cCcD_Obj * param_1, cXyz * param_2, cCcD_Obj * param_3, cXyz * param_4, float param_5);
undefined cCcS__CalcArea(cCcS * this);
undefined cCcS__Move(cCcS * this);
undefined cCcS__DrawClear(cCcS * this);
undefined cCcS__SetCoGCorrectProc(cCcS * this, cCcD_Obj * param_1, cCcD_Obj * param_2);
undefined cCcS__ChkNoHitGCo(cCcS * this, cCcD_Obj * param_1, cCcD_Obj * param_2);
undefined cCcS__SetAtTgGObjInf(cCcS * this, bool param_1, bool param_2, cCcD_Obj * param_3, cCcD_Obj * param_4, cCcD_GObjInf * param_5, cCcD_GObjInf * param_6, cCcD_Stts * param_7, cCcD_Stts * param_8, cCcD_GStts * param_9, cCcD_GStts * param_10, cXyz * param_11);
undefined cCcS__ChkAtTgHitAfterCross(cCcS * this, bool param_1, bool param_2, cCcD_GObjInf * param_3, cCcD_GObjInf * param_4, cCcD_Stts * param_5, cCcD_Stts * param_6, cCcD_GStts * param_7, cCcD_GStts * param_8);
undefined cCcS__SetCoGObjInf(cCcS * this, bool param_1, bool param_2, cCcD_GObjInf * param_3, cCcD_GObjInf * param_4, cCcD_Stts * param_5, cCcD_Stts * param_6, cCcD_GStts * param_7, cCcD_GStts * param_8);
undefined cCcS__MoveAfterCheck(cCcS * this);
undefined SComponent__cCt_Counter();
void SComponent__cLs_Init(node_list_class * param_1);
void * SComponent__cLs_SingleCut(node_class * param_1);
void SComponent__cLs_Addition(node_list_class * param_1, node_class * param_2);
void SComponent__cLs_Insert(node_list_class * param_1, int param_2, node_class * param_3);
undefined SComponent__cLs_GetFirst();
void SComponent__cLs_Create(node_list_class * param_1);
undefined SComponent__cLsIt_Method();
void * SComponent__cLsIt_Judge(node_list_class * param_1, pointer param_2, void * param_3);
void SComponent__cNd_Join(node_class * param_1, node_class * param_2);
int SComponent__cNd_LengthOf(node_class * param_1);
node_class * SComponent__cNd_First(node_class * param_1);
node_class * SComponent__cNd_Last(node_class * param_1);
node_class * SComponent__cNd_Order(node_class * param_1, int param_2);
void SComponent__cNd_SingleCut(node_class * param_1);
void SComponent__cNd_Cut(node_class * param_1);
void SComponent__cNd_Addition(node_class * param_1, node_class * param_2);
undefined SComponent__cNd_Insert();
void SComponent__cNd_SetObject(node_class * param_1, void * param_2);
void SComponent__cNd_ClearObject(node_class * param_1);
void SComponent__cNd_ForcedClear(node_class * param_1);
void SComponent__cNd_Create(node_class * param_1, void * param_2);
undefined SComponent__cNdIt_Method();
int SComponent__cNdIt_Judge(node_class * param_1, pointer param_2, void * param_3);
undefined SComponent__cTr_SingleCut(node_class * param_1);
void SComponent__cTr_Addition(node_lists_tree_class * param_1, int param_2, node_class * param_3);
undefined4 SComponent__cTr_Insert(node_lists_tree_class * param_1, int param_2, node_class * param_3, int param_4);
void SComponent__cTr_Create(node_lists_tree_class * param_1, node_list_class * param_2, int param_3);
undefined SComponent__cTrIt_Method();
void * SComponent__cTrIt_Judge(node_list_class * * param_1, undefined * param_2, void * param_3);
void SComponent__cPhs_Reset(int param_1);
void SComponent__cPhs_Set(request_of_phase_process_class * param_1, void * param_2);
void SComponent__cPhs_UnCompleate(request_of_phase_process_class * param_1);
PhaseState SComponent__cPhs_Compleate(request_of_phase_process_class * param_1);
PhaseState SComponent__cPhs_Next(request_of_phase_process_class * param_1);
PhaseState SComponent__cPhs_Do(request_of_phase_process_class * param_1, void * param_2);
int SComponent__cPhs_Handler(request_of_phase_process_class * param_1, int param_2(void * ), void * param_3);
undefined4 SComponent__cReq_Is_Done(request_base_class * param_1);
undefined SComponent__cReq_Done();
undefined SComponent__cReq_Command();
void SComponent__cReq_Create(request_base_class * param_1, undefined4 param_2);
int SComponent__cTg_IsUse(create_tag_class * param_1);
undefined SComponent__cTg_SingleCutFromTree(create_tag_class * param_1);
undefined SComponent__cTg_AdditionToTree(node_lists_tree_class * param_1, int param_2, create_tag_class * param_3);
int SComponent__cTg_InsertToTree(node_lists_tree_class * param_1, int param_2, create_tag_class * param_3, int param_4);
undefined SComponent__cTg_GetFirst();
void SComponent__cTg_SingleCut(create_tag_class * param_1);
void SComponent__cTg_Addition(node_list_class * param_1, create_tag_class * param_2);
void SComponent__cTg_Create(create_tag_class * param_1, void * param_2);
void SComponent__cTgIt_MethodCall(create_tag_class * param_1, pointer param_2);
undefined SComponent__cTgIt_JudgeFilter();
cXyz * cXyz__operator_plus(cXyz * __return_storage_ptr__, cXyz * this, cXyz * param_1);
cXyz * cXyz__operator_minus(cXyz * __return_storage_ptr__, cXyz * this, cXyz * param_1);
cXyz * cXyz__operator_times(cXyz * this, cXyz * param_1, float param_2);
// undefined cXyz__operator_times(cXyz * this, Vec * param_1);
undefined cXyz__operator_divide(cXyz * this, float param_1);
cXyz * cXyz__getCrossProduct(cXyz * __return_storage_ptr__, cXyz * this, Vec * param_1);
cXyz * cXyz__outprod(cXyz * __return_storage_ptr__, cXyz * this, Vec * param_1);
undefined cXyz__norm(cXyz * this);
cXyz * cXyz__normZP(cXyz * __return_storage_ptr__, cXyz * this);
undefined cXyz__normZC(cXyz * this);
undefined cXyz__normalize(cXyz * this);
undefined cXyz__normalizeZP(cXyz * this);
undefined cXyz__normalizeRS(cXyz * this);
undefined cXyz__operator_equal_to(cXyz * this, Vec * param_1);
undefined cXyz__operator_not_equal_to(cXyz * this, Vec * param_1);
undefined cXyz__isZero(cXyz * this);
undefined SComponent____sinit_c_xyz_cpp();
// void csXyz__csXyz(csXyz * this, short param_1, short param_2, short param_3);
undefined csXyz__operator_plus(csXyz * this, csXyz * param_1);
undefined csXyz__operator_plus_set(csXyz * this, csXyz * param_1);
undefined csXyz__operator_times(csXyz * this, float param_1);
undefined SComponent____sinit_c_sxyz_cpp();
undefined SComponent__cM_rad2s();
undefined SComponent__U_GetAtanTable();
int SComponent__cM_atan2s(float param_1, float param_2);
undefined SComponent__cM_atan2f();
undefined SComponent__cM_initRnd();
undefined SComponent__cM_rnd();
float SComponent__cM_rndF(float param_1);
undefined SComponent__cM_rndFX(float param_1);
undefined SComponent__cM_initRnd2();
undefined cBgS_ChkElm__Init(cBgS_ChkElm * this);
undefined cBgS_ChkElm__Regist2(cBgS_ChkElm * this, cBgW * pBgW, uint procID, void * pActor);
undefined cBgS_ChkElm__Release(cBgS_ChkElm * this);
int cBgS__Regist(cBgS * this, cBgW * pBgW, uint procID, void * pActor);
undefined cBgS__Release(cBgS * this, cBgW * param_1);
undefined cBgS__Ct(cBgS * this);
undefined cBgS__Dt(cBgS * this);
undefined cBgS__LineCross(cBgS * this, cBgS_LinChk * param_1);
undefined cBgS__GroundCross(cBgS * this, cBgS_GndChk * pChk);
cBgD_t * cBgS__ConvDzb(cBgD_t * param_1);
fopAc_ac_c * cBgS__GetActorPointer(cBgS * this, int param_1);
dBgW * cBgS__GetBgWPointer(cBgS * this, cBgS_PolyInfo * param_1);
undefined cBgS__ChkPolySafe(cBgS * this, cBgS_PolyInfo * param_1);
undefined cBgS__GetTriGrp(cBgS * this, int param_1, int param_2);
undefined cBgS__GetGrpToRoomId(cBgS * this, int param_1, int param_2);
// cM3dGPla * cBgS__GetTriPla(cBgS * this, int param_1, int param_2);
undefined cBgS__GetTriPnt(cBgS * this, cBgS_PolyInfo * param_1, cXyz * param_2, cXyz * param_3, cXyz * param_4);
undefined cBgS__Move(cBgS * this);
undefined cBgS__ShdwDraw(cBgS * this, cBgS_ShdwDraw * param_1);
undefined cBgS__GetGrpInf(cBgS * this, cBgS_PolyInfo * param_1, int grpID);
void cBgS_Chk__cBgS_Chk_destructor(cBgS_Chk * this);
undefined cBgS_Chk__ChkSameActorPid(cBgS_Chk * this, uint param_1);
void cBgS_GndChk__cBgS_GndChk(cBgS_GndChk * this);
undefined cBgS_LinChk__ct(cBgS_LinChk * this);
undefined cBgS_LinChk__Set2(cBgS_LinChk * this, cXyz * param_1, cXyz * param_2, uint param_3);
undefined SComponent__ASSERT_SOLDHEAP();
void cBgW__cBgW(cBgW * this);
void cBgW__cBgW_destructor(cBgW * this);
undefined cBgW__FreeArea(cBgW * this);
undefined cBgW__GlobalVtx(cBgW * this);
undefined cBgW__SetVtx(cBgW * this);
undefined cBgW__CalcPlane(cBgW * this);
undefined cBgW__SetTri(cBgW * this);
undefined cBgW__BlckConnect(cBgW * this, ushort * pRwgFirstIdx, int * pRwgPrevIdx, int idx);
undefined cBgW__ClassifyPlane(cBgW * this);
undefined cBgW__MakeBlckTransMinMax(cBgW * this, cXyz * param_1, cXyz * param_2);
undefined cBgW__MakeBlckMinMax(cBgW * this, int param_1, cXyz * pMin, cXyz * pMax);
undefined cBgW__MakeBlckBnd(cBgW * this, int blk_idx, cXyz * pMin, cXyz * pMax);
undefined cBgW__MakeNodeTreeRp(cBgW * this, int node_idx);
undefined cBgW__MakeNodeTreeGrpRp(cBgW * this, int grp_idx);
undefined cBgW__MakeNodeTree(cBgW * this);
undefined cBgW__ChkMemoryError(cBgW * this);
undefined cBgW__Set(cBgW * this, cBgD_t * pData, cBgW__Flag flags, MTX34 * pMtx);
undefined cBgW__RwgLineCheck(cBgW * this, ushort param_1, cBgS_LinChk * param_2);
undefined cBgW__LineCheckRp(cBgW * this, cBgS_LinChk * param_1, int param_2);
undefined cBgW__LineCheckGrpRp(cBgW * this, cBgS_LinChk * param_1, int param_2, int param_3);
undefined cBgW__RwgGroundCheckCommon(cBgW * this, float y, ushort idx, cBgS_GndChk * pChk);
undefined cBgW__RwgGroundCheckGnd(cBgW * this, ushort param_1, cBgS_GndChk * pChk);
undefined cBgW__RwgGroundCheckWall(cBgW * this, ushort param_1, cBgS_GndChk * param_2);
undefined cBgW__GroundCrossRp(cBgW * this, cBgS_GndChk * param_1, int param_2);
int cBgW__GroundCrossGrpRp(cBgW * this, cBgS_GndChk * pChk, int grpIdx, int depth);
undefined cBgW__CopyOldMtx(cBgW * this);
undefined cBgW__Move(cBgW * this);
undefined cBgW__RwgShdwDraw(cBgW * this, int param_1, cBgS_ShdwDraw * param_2);
undefined cBgW__ShdwDrawRp(cBgW * this, cBgS_ShdwDraw * param_1, int param_2);
undefined cBgW__ShdwDrawGrpRp(cBgW * this, cBgS_ShdwDraw * param_1, int param_2);
undefined cBgW__ChkPolyThrough(cBgW * this, int param_1, cBgS_PolyPassChk * param_2);
undefined cBgW__ChkShdwDrawThrough(cBgW * this, int param_1, cBgS_PolyPassChk * param_2);
undefined cBgW__ChkGrpThrough(cBgW * this, int param_1, cBgS_GrpPassChk * param_2, int param_3);
uint cBgW__GetGrpToRoomIndex(cBgW * this, int grp_idx);
undefined cBgW__GetTrans(cBgW * this, cXyz * param_1);
undefined cBgW__GetTriPnt(cBgW * this, int param_1, cXyz * param_2, cXyz * param_3, cXyz * param_4);
undefined cBgW__GetTopUnder(cBgW * this, float * param_1, float * param_2);
void cBgW_BgId__cBgW_BgId_destructor(cBgW_BgId * this);
void cBgW_GrpElm__cBgW_GrpElm_destructor(cBgW_GrpElm * this);
void cBgW_GrpElm__cBgW_GrpElm(cBgW_GrpElm * this);
void cBgW_NodeTree__cBgW_NodeTree_destructor(cBgW_NodeTree * this);
void cBgW_NodeTree__cBgW_NodeTree(cBgW_NodeTree * this);
void cBgW_RwgElm__cBgW_RwgElm_destructor(cBgW_RwgElm * this);
void cBgW_RwgElm__cBgW_RwgElm(cBgW_RwgElm * this);
void cBgW_TriElm__cBgW_TriElm_destructor(cBgW_TriElm * this);
void cBgW_TriElm__cBgW_TriElm(cBgW_TriElm * this);
undefined SComponent__cM2d_CrossCirLin();
undefined cM2dGBox__Set(cM2dGBox * this, cXy * param_1, cXy * param_2);
double cM2dGBox__GetLen(cM2dGBox * this, cXy * param_1);
undefined SComponent__cM3d_InDivPos1();
undefined SComponent__cM3d_InDivPos2();
undefined SComponent__cM3d_Len2dSqPntAndSegLine();
undefined SComponent__cM3d_Len3dSqPntAndSegLine();
undefined SComponent__cM3d_SignedLenPlaAndPos(cM3dGPla * param_1, cXyz * param_2);
void SComponent__cM3d_CalcPla(cXyz * pV0, cXyz * pV1, cXyz * pV2, cXyz * pNorm, float * pDist);
undefined SComponent__cM3d_Cross_AabAab();
undefined SComponent__cM3d_Cross_AabCyl();
undefined SComponent__cM3d_Cross_AabSph();
undefined SComponent__cM3d_Check_LinLin();
undefined SComponent__cM3d_Cross_LinPla();
int SComponent__cM3d_Cross_MinMaxBoxLine(cXyz * param_1, cXyz * param_2, cXyz * param_3, cXyz * param_4);
undefined SComponent__cM3d_InclusionCheckPosIn3PosBox3d();
undefined SComponent__cM3d_CrossX_Tri();
// undefined SComponent__cM3d_CrossX_Tri();
// undefined SComponent__cM3d_CrossX_Tri();
undefined SComponent__cM3d_CrossY_Tri();
// undefined SComponent__cM3d_CrossY_Tri();
undefined4 SComponent__cM3d_CrossY_Tri_Front(cXyz * param_1, cXyz * param_2, cXyz * param_3, cXyz * pPos);
// undefined SComponent__cM3d_CrossY_Tri();
// undefined SComponent__cM3d_CrossY_Tri();
// undefined SComponent__cM3d_CrossY_Tri();
undefined SComponent__cM3d_CrossZ_Tri();
// undefined SComponent__cM3d_CrossZ_Tri();
// undefined SComponent__cM3d_CrossZ_Tri();
undefined SComponent__cM3d_Cross_LinTri();
undefined SComponent__cM3d_Cross_LinTri_Easy();
undefined SComponent__cM3d_Cross_SphPnt();
undefined SComponent__cM3d_Cross_LinSph();
undefined SComponent__cM3d_Cross_LinSph_CrossPos();
undefined SComponent__cM3d_Cross_CylSph();
undefined SComponent__cM3d_Cross_SphSph();
// undefined SComponent__cM3d_Cross_SphSph();
undefined SComponent__cM3d_CalcSphVsTriCrossPoint();
undefined SComponent__cM3d_Cross_SphTri();
undefined SComponent__cM3d_Cross_CylCyl();
// undefined SComponent__cM3d_Cross_CylCyl();
undefined SComponent__cM3d_Cross_CylTri();
undefined SComponent__cM3d_Cross_CylLin();
undefined SComponent__cM3d_Cross_CylPntPnt();
undefined SComponent__cM3d_Cross_CylPnt();
undefined SComponent__cM3d_Cross_CpsCps();
undefined SComponent__cM3d_Cross_CpsCyl();
undefined SComponent__cM3d_Cross_CpsSph_CrossPos();
undefined4 SComponent__cM3d_Cross_CpsSph(cM3dGCps * param_1, cM3dGSph * param_2, cXyz * param_3);
undefined SComponent__cM3d_Cross_TriTri();
undefined SComponent__cM3d_Cross_CpsTri();
undefined SComponent__cM3d_NearPos_Cps();
void SComponent__cM3d_CalcVecAngle(cXyz * param_1, short * param_2, undefined2 * param_3);
undefined SComponent__cM3d_CalcVecZAngle();
undefined SComponent__cM3d_UpMtx_Base();
undefined SComponent__cM3d_PlaneCrossLineProcWork();
undefined4 SComponent__cM3d_2PlaneCrossLine(cM3dGPla * param_1, cM3dGPla * param_2, cM3dGLin * param_3);
undefined4 SComponent__cM3d_3PlaneCrossPos(cM3dGPla * param_1, cM3dGPla * param_2, cM3dGPla * param_3, cXyz * param_4);
undefined SComponent__cM3d_lineVsPosSuisenCross();
// undefined SComponent__cM3d_lineVsPosSuisenCross();
undefined SComponent__cM3d_2PlaneLinePosNearPos();
undefined SComponent__cM3d_CrawVec();
undefined cM3dGAab__SetMinMax(cM3dGAab * this, cXyz * param_1);
undefined cM3dGAab__SetMin(cM3dGAab * this, cXyz * param_1);
undefined cM3dGAab__SetMax(cM3dGAab * this, cXyz * param_1);
undefined cM3dGCyl__SetC(cM3dGCyl * this, cXyz * param_1);
undefined cM3dGCyl__SetH(cM3dGCyl * this, float param_1);
undefined cM3dGCyl__SetR(cM3dGCyl * this, float param_1);
undefined cM3dGCyl__cross(cM3dGCyl * this, cM3dGSph * param_1, cXyz * param_2);
// undefined cM3dGCyl__cross(cM3dGCyl * this, cM3dGCyl * param_1, float * param_2);
// undefined cM3dGCyl__cross(cM3dGCyl * this, cM3dGCyl * param_1, cXyz * param_2);
// undefined cM3dGCyl__cross(cM3dGCyl * this, cM3dGSph * param_1, float * param_2);
undefined cM3dGPla__CalcAngleXz(cM3dGPla * this, short * param_1, short * param_2);
undefined cM3dGPla__SetupNP0(cM3dGPla * this, Vec * param_1, Vec * param_2);
undefined cM3dGSph__SetC(cM3dGSph * this, cXyz * param_1);
undefined cM3dGSph__SetR(cM3dGSph * this, float param_1);
undefined cM3dGSph__cross(cM3dGSph * this, cM3dGSph * param_1, cXyz * param_2);
// undefined cM3dGSph__cross(cM3dGSph * this, cM3dGCyl * param_1, cXyz * param_2);
// undefined cM3dGSph__cross(cM3dGSph * this, cM3dGSph * param_1, float * param_2);
void cM3dGTri__cM3dGTri(cM3dGTri * this, Vec * param_1, Vec * param_2, Vec * param_3);
undefined cM3dGTri__cross(cM3dGTri * this, cM3dGCyl * param_1, Vec * param_2);
undefined SComponent__cLib_memCpy();
undefined SComponent__cLib_memSet();
double SComponent__cLib_addCalc(float * pSrc, float target, float speed, float maxVel, float minVel);
void SComponent__cLib_addCalc2(float * param_1, float param_2, float param_3, float param_4);
void SComponent__cLib_addCalc0(float * param_1, float param_2, float param_3);
undefined SComponent__cLib_addCalcPos();
undefined SComponent__cLib_addCalcPosXZ();
undefined SComponent__cLib_addCalcPos2();
undefined SComponent__cLib_addCalcPosXZ2();
undefined SComponent__cLib_addCalcAngleS(undefined4 pDst, undefined2 target, undefined2 param_3, undefined2 param_4, undefined2 param_5);
undefined SComponent__cLib_addCalcAngleS2(undefined4 pDst, undefined2 target, undefined2 speed, undefined2 maxVel);
undefined SComponent__cLib_addCalcAngleL();
undefined SComponent__cLib_chaseUC();
undefined SComponent__cLib_chaseS();
undefined4 SComponent__cLib_chaseF(float * pDst, float target, float speed);
undefined SComponent__cLib_chasePos();
undefined4 SComponent__cLib_chasePosXZ(cXyz * param_1, cXyz * param_2, double param_3);
undefined SComponent__cLib_chaseAngleS();
short SComponent__cLib_targetAngleY(cXyz * param_1, cXyz * param_2);
undefined SComponent__cLib_targetAngleX();
undefined SComponent__cLib_offsetPos(cXyz * param_1, cXyz * param_2, short param_3, cXyz * param_4);
short SComponent__cLib_distanceAngleS(short param_1, short param_2);
undefined SComponent__MtxInit();
void SComponent__MtxTrans(double param_1, double param_2, double param_3, bool param_4);
undefined SComponent__MtxRotX();
undefined SComponent__MtxRotY();
undefined SComponent__MtxRotZ();
undefined SComponent__MtxScale();
undefined SComponent__MtxPosition(cXyz * param_1, cXyz * param_2);
undefined SComponent__MtxPush();
undefined SComponent__MtxPull();
void cSAngle__cSAngle(cSAngle * this, cSAngle * param_1);
// void cSAngle__cSAngle(cSAngle * this, short param_1);
// void cSAngle__cSAngle(cSAngle * this, float param_1);
undefined cSAngle__Val(cSAngle * this, cSAngle * param_1);
// undefined cSAngle__Val(cSAngle * this, short param_1);
// undefined cSAngle__Val(cSAngle * this, float param_1);
undefined cSAngle__Degree(cSAngle * this);
undefined cSAngle__Radian(cSAngle * this);
undefined cSAngle__Norm(cSAngle * this);
undefined cSAngle__Abs(cSAngle * this);
undefined cSAngle__Inv(cSAngle * this);
undefined cSAngle__Sin(cSAngle * this);
undefined cSAngle__Cos(cSAngle * this);
undefined cSAngle__Tan(cSAngle * this);
undefined cSAngle__operator_minus(cSAngle * this);
undefined cSAngle__operator_plus(cSAngle * this, cSAngle * param_1);
// undefined cSAngle__operator_minus(cSAngle * this, cSAngle * param_1);
undefined cSAngle__operator_plus_set(cSAngle * this, cSAngle * param_1);
undefined cSAngle__operator_minus_set(cSAngle * this, cSAngle * param_1);
// undefined cSAngle__operator_plus(cSAngle * this, short param_1);
// undefined cSAngle__operator_minus(cSAngle * this, short param_1);
// undefined cSAngle__operator_plus_set(cSAngle * this, short param_1);
// undefined cSAngle__operator_minus_set(cSAngle * this, short param_1);
undefined cSAngle__operator_times(cSAngle * this, float param_1);
undefined cSAngle__operator_times_set(cSAngle * this, float param_1);
undefined SComponent__operator_plus();
undefined SComponent__operator_minus();
void cDegree__cDegree(cDegree * this, float param_1);
undefined cDegree__Formal(cDegree * this);
undefined cDegree__Val(cDegree * this, float param_1);
undefined cDegree__Radian(cDegree * this);
undefined cDegree__Sin(cDegree * this);
undefined cDegree__Cos(cDegree * this);
void cSPolar__cSPolar(cSPolar * this, cXyz * param_1);
undefined cSPolar__Formal(cSPolar * this);
undefined cSPolar__Val(cSPolar * this, float param_1, short param_2, short param_3);
// undefined cSPolar__Val(cSPolar * this, cXyz * param_1);
undefined cSPolar__Xyz(cSPolar * this);
undefined cSPolar__Globe(cSPolar * this, cSGlobe * param_1);
void cSGlobe__cSGlobe(cSGlobe * this, cSGlobe * param_1);
// void cSGlobe__cSGlobe(cSGlobe * this, float param_1, short param_2, short param_3);
// void cSGlobe__cSGlobe(cSGlobe * this, float param_1, cSAngle * param_2, cSAngle * param_3);
// void cSGlobe__cSGlobe(cSGlobe * this, cXyz * param_1);
undefined cSGlobe__Formal(cSGlobe * this);
undefined cSGlobe__Val(cSGlobe * this, cSGlobe * param_1);
// undefined cSGlobe__Val(cSGlobe * this, float param_1, short param_2, short param_3);
// undefined cSGlobe__Val(cSGlobe * this, float param_1, cSAngle * param_2, cSAngle * param_3);
// undefined cSGlobe__Val(cSGlobe * this, cXyz * param_1);
undefined cSGlobe__Xyz(cSGlobe * this);
undefined cSGlobe__Polar(cSGlobe * this, cSPolar * param_1);
undefined cSGlobe__Invert(cSGlobe * this);
undefined cAngle__Adjust(cAngle * this, float param_1, float param_2, float param_3);
undefined SComponent____sinit_c_angle_cpp();
void cDT_NamePTbl__cDT_NamePTbl(cDT_NamePTbl * this);
void cDT_NamePTbl__cDT_NamePTbl_destructor(cDT_NamePTbl * this);
undefined cDT_NamePTbl__Set(cDT_NamePTbl * this, ulong param_1, char * * param_2);
undefined cDT_NamePTbl__GetIndex(cDT_NamePTbl * this, char * param_1, int param_2);
void cDT_Format__cDT_Format(cDT_Format * this);
void cDT_Format__cDT_Format_destructor(cDT_Format * this);
void cDT_Name__cDT_Name(cDT_Name * this);
void cDT_Name__cDT_Name_destructor(cDT_Name * this);
void cDT_DataSrc__cDT_DataSrc(cDT_DataSrc * this);
void cDT_DataSrc__cDT_DataSrc_destructor(cDT_DataSrc * this);
undefined cDT_DataSrc__Set(cDT_DataSrc * this, ulong param_1, ulong param_2, uchar * param_3);
undefined cDT_DataSrc__GetInf(cDT_DataSrc * this, int param_1, int param_2);
void cDT__cDT(cDT * this);
void cDT__cDT_destructor(cDT * this);
undefined cDT__Set(cDT * this, ulong param_1, char * * param_2, ulong param_3, char * * param_4, uchar * param_5);
undefined cDT__GetInf(cDT * this, int param_1, int param_2);
undefined SStandard__sBs_FillArea_s();
undefined SStandard__sBs_ClearArea();
undefined JFWSystem__firstInit(JFWSystem * this);
int JFWSystem__init(JFWSystem * this, EVP_PKEY_CTX * ctx);
undefined JFWDisplay__ctor_subroutine(JFWDisplay * this, _GXRenderModeObj * param_1, bool param_2);
void JFWDisplay__JFWDisplay(JFWDisplay * this, _GXRenderModeObj * param_1, JKRHeap * param_2, EXfbNumber param_3, bool param_4);
void JFWDisplay__JFWDisplay_destructor(JFWDisplay * this);
undefined JFWDisplay__createManager(JFWDisplay * this, JKRHeap * param_1, EXfbNumber param_2, bool param_3);
undefined JFramework__callDirectDraw();
undefined JFWDisplay__prepareCopyDisp(JFWDisplay * this);
undefined JFWDisplay__drawendXfb_single(JFWDisplay * this);
undefined JFWDisplay__exchangeXfb_double(JFWDisplay * this);
undefined JFWDisplay__exchangeXfb_triple(JFWDisplay * this);
undefined JFWDisplay__copyXfb_triple(JFWDisplay * this);
undefined JFWDisplay__preGX(JFWDisplay * this);
undefined JFWDisplay__endGX(JFWDisplay * this);
undefined JFWDisplay__beginRender(JFWDisplay * this);
undefined JFWDisplay__endRender(JFWDisplay * this);
undefined JFWDisplay__endFrame(JFWDisplay * this);
undefined JFWDisplay__waitBlanking(JFWDisplay * this, int param_1);
undefined JFramework__waitForTick();
undefined JFramework__JFWThreadAlarmHandler();
undefined JFWDisplay__threadSleep(JFWDisplay * this, long_long param_1);
undefined JFWDisplay__clearEfb_init(JFWDisplay * this);
undefined JFWDisplay__clearEfb(JFWDisplay * this, _GXColor * param_1);
// undefined JFWDisplay__clearEfb(JFWDisplay * this, int param_1, int param_2, int param_3, int param_4, _GXColor * param_5);
undefined JFWDisplay__calcCombinationRatio(JFWDisplay * this);
undefined JFramework__JFWGXDrawDoneAutoAbort();
undefined JFramework__JFWGXAbortAlarmHandler();
undefined JFramework__diagnoseGpHang();
int J3DUClipper__init(J3DUClipper * this, EVP_PKEY_CTX * ctx);
undefined J3DUClipper__calcViewFrustum(J3DUClipper * this);
uint J3DUClipper__clip(J3DUClipper * this, MTX34 * param_1, cXyz * param_2, float param_3);
// uint J3DUClipper__clip(J3DUClipper * this, MTX34 * param_1, cXyz * param_2, cXyz * param_3);
int J3DUClipper__clipByBox(J3DUClipper * this, J3DModel * param_1);
void J3DMtxCalcSoftimage__J3DMtxCalcSoftimage_destructor(J3DMtxCalcSoftimage * this);
int J3DMtxCalcSoftimage__init(J3DMtxCalcSoftimage * this, EVP_PKEY_CTX * ctx);
int J3DMtxCalcBasic__init(J3DMtxCalcBasic * this, cXyz * param_1, MTX34 * param_2);
undefined J3DShapeMtx__getUseMtxNum(J3DShapeMtx * this);
undefined JPALoader__makeColorTable();
void JPABaseShapeArc__JPABaseShapeArc(JPABaseShapeArc * this, uchar * param_1, JKRHeap * param_2);
void JPABaseShape__JPABaseShape_destructor(JPABaseShape * this);
undefined JPABaseShapeArc__isEnableEnvAnm(JPABaseShapeArc * this);
undefined JPABaseShapeArc__isEnablePrmAnm(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTextureAnmKeyNum(JPABaseShapeArc * this);
undefined JPABaseShapeArc__isEnableTextureAnm(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getType(JPABaseShapeArc * this);
void JPABaseShapeArc__JPABaseShapeArc_destructor(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getDirType(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getRotType(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getBasePlaneType(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getBaseSizeX(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getBaseSizeY(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getLoopOffset(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getColLoopOffset(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTexLoopOffset(JPABaseShapeArc * this);
undefined JPABaseShapeArc__isEnableGlobalColAnm(JPABaseShapeArc * this);
undefined JPABaseShapeArc__isEnableGlobalTexAnm(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getListOrder(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getChildOrder(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTevColorArg(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTevAlphaArg(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getBlendMode1(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getSrcBlendFactor1(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getDstBlendFactor1(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getBlendOp1(JPABaseShapeArc * this);
undefined JPABaseShapeArc__isEnableAlphaUpdate(JPABaseShapeArc * this);
undefined JPABaseShapeArc__isEnableZCmp(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getZCmpFunction(JPABaseShapeArc * this);
undefined JPABaseShapeArc__isEnableZCmpUpdate(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getZCompLoc(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getAlphaCmpComp0(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getAlphaCmpComp1(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getAlphaCmpOp(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getAlphaCmpRef0(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getAlphaCmpRef1(JPABaseShapeArc * this);
undefined JPABaseShapeArc__isEnableAnmTone(JPABaseShapeArc * this);
undefined JPABaseShapeArc__isEnableProjection(JPABaseShapeArc * this);
undefined JPABaseShapeArc__isClipOn(JPABaseShapeArc * this);
undefined JPABaseShapeArc__textureIsEmpty(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTextureAnmType(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTextureIndex(JPABaseShapeArc * this, uchar param_1);
// undefined JPABaseShapeArc__getTextureIndex(JPABaseShapeArc * this);
undefined JPABaseShapeArc__isEnablePrm(JPABaseShapeArc * this);
undefined JPABaseShapeArc__isEnableEnv(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getPrmColor(JPABaseShapeArc * this, short param_1);
// undefined JPABaseShapeArc__getPrmColor(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getEnvColor(JPABaseShapeArc * this, short param_1);
// undefined JPABaseShapeArc__getEnvColor(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getColorRegAnmType(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getColorRegAnmMaxFrm(JPABaseShapeArc * this);
undefined JPABaseShapeArc__isEnableTexScrollAnm(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTilingX(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTilingY(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTexStaticTransX(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTexStaticTransY(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTexStaticScaleX(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTexStaticScaleY(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTexScrollTransX(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTexScrollTransY(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTexScrollScaleX(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTexScrollScaleY(JPABaseShapeArc * this);
undefined JPABaseShapeArc__getTexScrollRotate(JPABaseShapeArc * this);
void JPAExtraShapeArc__JPAExtraShapeArc(JPAExtraShapeArc * this, uchar * param_1);
void JPAExtraShape__JPAExtraShape_destructor(JPAExtraShape * this);
void JPAExtraShapeArc__JPAExtraShapeArc_destructor(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__isEnableScale(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__isDiffXY(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__isEnableScaleAnmX(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__isEnableScaleAnmY(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__isEnableScaleBySpeedX(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__isEnableScaleBySpeedY(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getScaleInTiming(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getScaleOutTiming(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getScaleInValueX(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getScaleInValueY(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getAnmTypeX(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getAnmTypeY(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getAnmCycleX(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getAnmCycleY(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getIncreaseRateX(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getIncreaseRateY(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getDecreaseRateX(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getDecreaseRateY(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getPivotX(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getPivotY(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getRandomScale(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__isEnableAlpha(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__isEnableSinWave(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getAlphaInTiming(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getAlphaOutTiming(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getAlphaInValue(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getAlphaBaseValue(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getAlphaWaveType(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getAlphaWaveParam1(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getAlphaWaveParam2(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getAlphaWaveParam3(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getAlphaWaveRandom(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getAlphaIncreaseRate(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getAlphaDecreaseRate(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__isEnableRotate(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getRotateAngle(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getRotateSpeed(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getRotateRandomAngle(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getRotateRandomSpeed(JPAExtraShapeArc * this);
undefined JPAExtraShapeArc__getRotateDirection(JPAExtraShapeArc * this);
void JPASweepShapeArc__JPASweepShapeArc(JPASweepShapeArc * this, uchar * param_1);
void JPASweepShape__JPASweepShape_destructor(JPASweepShape * this);
void JPASweepShapeArc__JPASweepShapeArc_destructor(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getType(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getDirType(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getRotType(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getBasePlaneType(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getLife(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getRate(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getTiming(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getStep(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getPosRndm(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getVelInfRate(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getBaseVel(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getBaseVelRndm(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getGravity(JPASweepShapeArc * this);
undefined JPASweepShapeArc__isEnableField(JPASweepShapeArc * this);
undefined JPASweepShapeArc__isEnableDrawParent(JPASweepShapeArc * this);
undefined JPASweepShapeArc__isClipOn(JPASweepShapeArc * this);
undefined JPASweepShapeArc__isEnableScaleOut(JPASweepShapeArc * this);
undefined JPASweepShapeArc__isEnableAlphaOut(JPASweepShapeArc * this);
undefined JPASweepShapeArc__isEnableRotate(JPASweepShapeArc * this);
undefined JPASweepShapeArc__isInheritedScale(JPASweepShapeArc * this);
undefined JPASweepShapeArc__isInheritedAlpha(JPASweepShapeArc * this);
undefined JPASweepShapeArc__isInheritedRGB(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getTextureIndex(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getScaleX(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getScaleY(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getPrm(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getEnv(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getPrmAlpha(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getEnvAlpha(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getRotateSpeed(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getInheritScale(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getInheritAlpha(JPASweepShapeArc * this);
undefined JPASweepShapeArc__getInheritRGB(JPASweepShapeArc * this);
void JPAExTexShapeArc__JPAExTexShapeArc(JPAExTexShapeArc * this, uchar * param_1);
void JPAExTexShape__JPAExTexShape_destructor(JPAExTexShape * this);
void JPAExTexShapeArc__JPAExTexShapeArc_destructor(JPAExTexShapeArc * this);
undefined JPAExTexShapeArc__getIndTexMode(JPAExTexShapeArc * this);
undefined JPAExTexShapeArc__getIndTexMtxID(JPAExTexShapeArc * this);
undefined JPAExTexShapeArc__getIndTexMtx(JPAExTexShapeArc * this);
undefined JPAExTexShapeArc__getExpScale(JPAExTexShapeArc * this);
undefined JPAExTexShapeArc__getIndTextureID(JPAExTexShapeArc * this);
undefined JPAExTexShapeArc__getSubTextureID(JPAExTexShapeArc * this);
undefined JPAExTexShapeArc__isEnableSecondTex(JPAExTexShapeArc * this);
undefined JPAExTexShapeArc__getSecondTexIndex(JPAExTexShapeArc * this);
void JPADynamicsBlockArc__JPADynamicsBlockArc(JPADynamicsBlockArc * this, uchar * param_1);
void JPADynamicsBlock__JPADynamicsBlock_destructor(JPADynamicsBlock * this);
void JPADynamicsBlockArc__JPADynamicsBlockArc_destructor(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getDataFlag(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getUseKeyFlag(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getEmitterScl(JPADynamicsBlockArc * this, cXyz * param_1);
undefined JPADynamicsBlockArc__getEmitterRot(JPADynamicsBlockArc * this, csXyz * param_1);
undefined JPADynamicsBlockArc__getEmitterTrs(JPADynamicsBlockArc * this, cXyz * param_1);
undefined JPADynamicsBlockArc__getEmitterDir(JPADynamicsBlockArc * this, cXyz * param_1);
undefined JPADynamicsBlockArc__getVolumeType(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getVolumeSize(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getVolumeSweep(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getVolumeMinRad(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getDivNumber(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getRate(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getRateRndm(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getRateStep(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getMaxFrame(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getStartFrame(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getLifeTime(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getLifeTimeRndm(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getInitVelOmni(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getInitVelAxis(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getInitVelRndm(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getInitVelDir(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getSpread(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getInitVelRatio(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getAccel(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getAccelRndm(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getAirResist(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getAirResistRndm(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getMoment(JPADynamicsBlockArc * this);
undefined JPADynamicsBlockArc__getMomentRndm(JPADynamicsBlockArc * this);
void JPAFieldBlockArc__JPAFieldBlockArc(JPAFieldBlockArc * this, uchar * param_1);
void JPAFieldBlock__JPAFieldBlock_destructor(JPAFieldBlock * this);
void JPAFieldBlockArc__JPAFieldBlockArc_destructor(JPAFieldBlockArc * this);
undefined JPAFieldBlockArc__getType(JPAFieldBlockArc * this);
undefined JPAFieldBlockArc__getVelType(JPAFieldBlockArc * this);
undefined JPAFieldBlockArc__getSttFlag(JPAFieldBlockArc * this);
undefined JPAFieldBlockArc__getCycle(JPAFieldBlockArc * this);
undefined JPAFieldBlockArc__getID(JPAFieldBlockArc * this);
undefined JPAFieldBlockArc__getPos(JPAFieldBlockArc * this, cXyz * param_1);
undefined JPAFieldBlockArc__getDir(JPAFieldBlockArc * this, cXyz * param_1);
undefined JPAFieldBlockArc__getMag(JPAFieldBlockArc * this);
undefined JPAFieldBlockArc__getMagRndm(JPAFieldBlockArc * this);
undefined JPAFieldBlockArc__getMaxDist(JPAFieldBlockArc * this);
undefined JPAFieldBlockArc__getVal1(JPAFieldBlockArc * this);
undefined JPAFieldBlockArc__getVal2(JPAFieldBlockArc * this);
undefined JPAFieldBlockArc__getVal3(JPAFieldBlockArc * this);
undefined JPAFieldBlockArc__getFadeIn(JPAFieldBlockArc * this);
undefined JPAFieldBlockArc__getFadeOut(JPAFieldBlockArc * this);
undefined JPAFieldBlockArc__getEnTime(JPAFieldBlockArc * this);
undefined JPAFieldBlockArc__getDisTime(JPAFieldBlockArc * this);
void JPAKeyBlockArc__JPAKeyBlockArc(JPAKeyBlockArc * this, uchar * param_1);
void JPAKeyBlock__JPAKeyBlock_destructor(JPAKeyBlock * this);
void JPAKeyBlockArc__JPAKeyBlockArc_destructor(JPAKeyBlockArc * this);
undefined JPAKeyBlockArc__getID(JPAKeyBlockArc * this);
undefined JPAKeyBlockArc__isLoopEnable(JPAKeyBlockArc * this);
undefined JPAKeyBlockArc__getNumber(JPAKeyBlockArc * this);
undefined JPAKeyBlockArc__getKeyDataPtr(JPAKeyBlockArc * this);
void JPATextureArc__JPATextureArc(JPATextureArc * this, uchar * param_1);
undefined JPADefaultTexture__initialize(JPADefaultTexture * this, JKRHeap * param_1);
void JPATexture__JPATexture_destructor(JPATexture * this);
void JPATextureArc__JPATextureArc_destructor(JPATextureArc * this);
undefined JPATextureArc__getName(JPATextureArc * this);
undefined JPATextureArc__load(JPATextureArc * this, _GXTexMapID param_1);
undefined JPATextureArc__getJUTTexture(JPATextureArc * this);
void JPATextureResource__JPATextureResource(JPATextureResource * this, ulong param_1, JKRHeap * param_2);
undefined JPATextureResource__registration(JPATextureResource * this, JPATexture * param_1);
void JPAEmitterResource__JPAEmitterResource(JPAEmitterResource * this, ulong param_1, JKRHeap * param_2);
undefined JPAEmitterResource__registration(JPAEmitterResource * this, JPAEmitterData * param_1, ushort param_2);
undefined JPAEmitterResource__getByUserIndex(JPAEmitterResource * this, ushort param_1);
undefined JPAEmitterResource__checkUserIndexDuplication(JPAEmitterResource * this, ushort param_1);
void JPAResourceManager__JPAResourceManager(JPAResourceManager * this, void * param_1, JKRHeap * param_2);
void JPAResourceManager__swapTexture(JPAResourceManager * this, ResTIMG * param_1, char * param_2);
void JPAEmitterArchiveLoaderDataBase__load(void * param_1, JKRHeap * param_2, JPAEmitterResource * * param_3, JPATextureResource * * param_4);
undefined JPAEmitterArchiveLoader_v10__load(JPAEmitterArchiveLoader_v10 * this);
undefined JPABase__JPAGetYZRotateMtx();
void JPABase__JPAGetXYZRotateMtx(uint param_1, uint param_2, uint param_3, MTX34 * param_4);
void JPABase__JPAGetDirMtx(cXyz * param_1, MTX34 * param_2);
undefined JPABase__JPASetSVecfromMtx();
undefined JPABase__JPASetRMtxTVecfromMtx();
undefined JPABase__JPASetRMtxSTVecfromMtx();
undefined JPABase__JPAGetKeyFrameValue();
undefined JPABase__JPAGetUnitVec();
undefined JPABaseField__loadFieldData(JPABaseField * this, JPAFieldData * param_1, JPAFieldBlock * param_2);
undefined JPABaseField__calcVel(JPABaseField * this, JPAFieldData * param_1, JPABaseParticle * param_2);
undefined JPABaseField__calcFadeAffect(JPABaseField * this, JPAFieldData * param_1, float param_2);
undefined JPABaseField__preCalc(JPABaseField * this, JPAFieldData * param_1);
undefined JPABaseField__isItinRange(JPABaseField * this, JPAFieldData * param_1, float param_2);
undefined JPAGravityField__preCalc(JPAGravityField * this, JPAFieldData * param_1);
undefined JPAGravityField__calc(JPAGravityField * this, JPAFieldData * param_1, JPABaseParticle * param_2);
undefined JPAAirField__preCalc(JPAAirField * this, JPAFieldData * param_1);
undefined JPAAirField__calc(JPAAirField * this, JPAFieldData * param_1, JPABaseParticle * param_2);
undefined JPAMagnetField__preCalc(JPAMagnetField * this, JPAFieldData * param_1);
undefined JPAMagnetField__calc(JPAMagnetField * this, JPAFieldData * param_1, JPABaseParticle * param_2);
undefined JPANewtonField__preCalc(JPANewtonField * this, JPAFieldData * param_1);
undefined JPANewtonField__calc(JPANewtonField * this, JPAFieldData * param_1, JPABaseParticle * param_2);
undefined JPAVortexField__preCalc(JPAVortexField * this, JPAFieldData * param_1);
undefined JPAVortexField__calc(JPAVortexField * this, JPAFieldData * param_1, JPABaseParticle * param_2);
undefined JPAConvectionField__preCalc(JPAConvectionField * this, JPAFieldData * param_1);
undefined JPAConvectionField__calc(JPAConvectionField * this, JPAFieldData * param_1, JPABaseParticle * param_2);
undefined JPARandomField__calc(JPARandomField * this, JPAFieldData * param_1, JPABaseParticle * param_2);
int JPADragField__init(JPADragField * this, EVP_PKEY_CTX * ctx);
undefined JPADragField__calc(JPADragField * this, JPAFieldData * param_1, JPABaseParticle * param_2);
undefined JPASpinField__preCalc(JPASpinField * this, JPAFieldData * param_1);
undefined JPASpinField__calc(JPASpinField * this, JPAFieldData * param_1, JPABaseParticle * param_2);
undefined JPAFieldManager__initField(JPAFieldManager * this, JPADataBlockLinkInfo * param_1, JPAEmitterInfo * param_2);
int JPAFieldManager__init(JPAFieldManager * this, EVP_PKEY_CTX * ctx);
undefined JPAFieldManager__preCalc(JPAFieldManager * this);
undefined JPAFieldManager__calc(JPAFieldManager * this, JPABaseParticle * param_1);
undefined JPAFieldManager__deleteField(JPAFieldManager * this, JPAFieldData * param_1);
undefined JPAFieldManager__deleteAllField(JPAFieldManager * this);
int JPABaseField__init(JPABaseField * this, EVP_PKEY_CTX * ctx);
undefined JPABaseField__calc(JPABaseField * this, JPAFieldData * param_1, JPABaseParticle * param_2);
void JPASpinField__JPASpinField_destructor(JPASpinField * this);
undefined JPASpinField__isItinRange(JPASpinField * this, JPAFieldData * param_1, float param_2);
void JPADragField__JPADragField_destructor(JPADragField * this);
void JPARandomField__JPARandomField_destructor(JPARandomField * this);
void JPAConvectionField__JPAConvectionField_destructor(JPAConvectionField * this);
undefined JPAConvectionField__isItinRange(JPAConvectionField * this, JPAFieldData * param_1, float param_2);
void JPAVortexField__JPAVortexField_destructor(JPAVortexField * this);
undefined JPAVortexField__isItinRange(JPAVortexField * this, JPAFieldData * param_1, float param_2);
void JPANewtonField__JPANewtonField_destructor(JPANewtonField * this);
void JPAMagnetField__JPAMagnetField_destructor(JPAMagnetField * this);
void JPAAirField__JPAAirField_destructor(JPAAirField * this);
void JPAGravityField__JPAGravityField_destructor(JPAGravityField * this);
void JPABaseField__JPABaseField_destructor(JPABaseField * this);
undefined JPABase____sinit_JPAField_cpp();
void JPAFieldContainer__JPAFieldContainer_destructor(JPAFieldContainer * this);
undefined JPABaseEmitter__calcVolumePoint(JPABaseEmitter * this);
undefined JPABaseEmitter__calcVolumeLine(JPABaseEmitter * this);
undefined JPABaseEmitter__calcVolumeCircle(JPABaseEmitter * this);
undefined JPABaseEmitter__calcVolumeCube(JPABaseEmitter * this);
undefined JPABaseEmitter__calcVolumeSphere(JPABaseEmitter * this);
undefined JPABaseEmitter__calcVolumeCylinder(JPABaseEmitter * this);
undefined JPABaseEmitter__calcVolumeTorus(JPABaseEmitter * this);
undefined JPABaseEmitter__create(JPABaseEmitter * this, JPADataBlockLinkInfo * param_1);
undefined JPABaseEmitter__calcEmitterInfo(JPABaseEmitter * this);
undefined JPABaseEmitter__calc(JPABaseEmitter * this);
undefined JPABaseEmitter__calcCreatePtcls(JPABaseEmitter * this);
undefined JPABaseEmitter__createChildren(JPABaseEmitter * this, JPABaseParticle * param_1);
undefined JPABaseEmitter__createParticle(JPABaseEmitter * this);
undefined JPABaseEmitter__calcParticle(JPABaseEmitter * this);
undefined JPABaseEmitter__calcChild(JPABaseEmitter * this);
undefined JPABaseEmitter__calcKey(JPABaseEmitter * this);
undefined JPABaseEmitter__deleteParticle(JPABaseEmitter * this, JPABaseParticle * param_1, JSUPtrList * param_2);
undefined JPABaseEmitter__deleteAllParticle(JPABaseEmitter * this);
undefined JPABaseEmitter__getPtclFromVacList(JPABaseEmitter * this);
undefined JPABaseEmitter__doStartFrameProcess(JPABaseEmitter * this);
undefined JPABaseEmitter__doTerminationProcess(JPABaseEmitter * this);
undefined JPABaseEmitter__calcEmitterGlobalPosition(JPABaseEmitter * this, cXyz * param_1);
undefined JPABaseEmitter__calcgReRDirection(JPABaseEmitter * this);
undefined JPABaseEmitter__getPivotX(JPABaseEmitter * this);
undefined JPABaseEmitter__getPivotY(JPABaseEmitter * this);
undefined JPABase____sinit_JPAEmitter_cpp();
void JPAEmitterInfo__JPAEmitterInfo_destructor(JPAEmitterInfo * this);
undefined JPABaseParticle__initParticle(JPABaseParticle * this);
undefined JPABaseParticle__initChild(JPABaseParticle * this, JPABaseParticle * param_1);
undefined JPABaseParticle__incFrame(JPABaseParticle * this);
undefined JPABaseParticle__calcVelocity(JPABaseParticle * this);
undefined JPABaseParticle__calcPosition(JPABaseParticle * this);
undefined JPABaseParticle__checkCreateChild(JPABaseParticle * this);
void JPAEmitterManager__JPAEmitterManager(JPAEmitterManager * this, JPAResourceManager * param_1, ulong param_2, ulong param_3, ulong param_4, JKRHeap * param_5);
JPABaseEmitter * JPAEmitterManager__createSimpleEmitterID(JPAEmitterManager * this, cXyz * param_1, ushort param_2, uchar param_3, uchar param_4, JPACallBackBase * param_5, JPACallBackBase2 * param_6);
undefined JPAEmitterManager__calc(JPAEmitterManager * this, uchar param_1);
undefined JPAEmitterManager__draw(JPAEmitterManager * this, JPADrawInfo * param_1, uchar param_2);
undefined JPAEmitterManager__deleteEmitter(JPAEmitterManager * this, JPABaseEmitter * param_1);
undefined JPAEmitterManager__forceDeleteEmitter(JPAEmitterManager * this, JPABaseEmitter * param_1);
undefined JPAEmitterManager__forceDeleteAllEmitter(JPAEmitterManager * this);
undefined JPAEmitterManager__clearResourceManager(JPAEmitterManager * this, uchar param_1);
void JPAFieldData__JPAFieldData_destructor(JPAFieldData * this);
void JPAFieldData__JPAFieldData(JPAFieldData * this);
void JPABaseEmitter__JPABaseEmitter_destructor(JPABaseEmitter * this);
void JPABaseEmitter__JPABaseEmitter(JPABaseEmitter * this);
void JPABaseParticle__JPABaseParticle_destructor(JPABaseParticle * this);
void JPABaseParticle__JPABaseParticle(JPABaseParticle * this);
undefined JSUList__JPABaseEmitter____JSUList(JSUList__JPABaseEmitter__ * this);
undefined JSUList__JPABaseEmitter____JSUList_destructor(JSUList__JPABaseEmitter__ * this);
undefined JPADrawExecLoadExTex__exec(JPADrawExecLoadExTex * this, JPADrawContext * param_1);
undefined JPADrawExecGenPrjMtx__exec(JPADrawExecGenPrjMtx * this, JPADrawContext * param_1);
undefined JPADrawExecGenPrjTexMtx__exec(JPADrawExecGenPrjTexMtx * this, JPADrawContext * param_1);
undefined JPADrawExecGenTexMtx0__exec(JPADrawExecGenTexMtx0 * this, JPADrawContext * param_1);
undefined JPADrawExecGenIdtMtx__exec(JPADrawExecGenIdtMtx * this, JPADrawContext * param_1);
undefined JPADrawExecSetTexMtx__exec(JPADrawExecSetTexMtx * this, JPADrawContext * param_1);
undefined JPADrawExecLoadDefaultTexture__exec(JPADrawExecLoadDefaultTexture * this, JPADrawContext * param_1);
undefined JPADrawExecLoadTexture__exec(JPADrawExecLoadTexture * this, JPADrawContext * param_1);
undefined JPADrawExecSetPointSize__exec(JPADrawExecSetPointSize * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecSetLineWidth__exec(JPADrawExecSetLineWidth * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecRegisterPrmColorAnm__exec(JPADrawExecRegisterPrmColorAnm * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecRegisterPrmAlphaAnm__exec(JPADrawExecRegisterPrmAlphaAnm * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecRegisterEnvColorAnm__exec(JPADrawExecRegisterEnvColorAnm * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecRegisterPrmCEnv__exec(JPADrawExecRegisterPrmCEnv * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecRegisterPrmAEnv__exec(JPADrawExecRegisterPrmAEnv * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// undefined JPADrawExecSetTexMtx__exec(JPADrawExecSetTexMtx * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// undefined JPADrawExecLoadTexture__exec(JPADrawExecLoadTexture * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecBillBoard__exec(JPADrawExecBillBoard * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecRotBillBoard__exec(JPADrawExecRotBillBoard * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecYBillBoard__exec(JPADrawExecYBillBoard * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecRotYBillBoard__exec(JPADrawExecRotYBillBoard * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADraw__dirTypeVel();
undefined JPADraw__dirTypePos();
undefined JPADraw__dirTypePosInv();
undefined JPADraw__dirTypeEmtrDir();
undefined JPADraw__dirTypePrevPtcl();
undefined JPADraw__rotTypeY();
undefined JPADraw__rotTypeX();
undefined JPADraw__rotTypeZ();
undefined JPADraw__rotTypeXYZ();
undefined JPADraw__rotTypeYJiggle();
undefined JPADraw__basePlaneTypeXY();
undefined JPADraw__basePlaneTypeXZ();
undefined JPADrawExecDirectional__exec(JPADrawExecDirectional * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecRotDirectional__exec(JPADrawExecRotDirectional * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecDirectionalCross__exec(JPADrawExecDirectionalCross * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecRotDirectionalCross__exec(JPADrawExecRotDirectionalCross * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecDirBillBoard__exec(JPADrawExecDirBillBoard * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecRotation__exec(JPADrawExecRotation * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecRotationCross__exec(JPADrawExecRotationCross * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecPoint__exec(JPADrawExecPoint * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawExecLine__exec(JPADrawExecLine * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADraw__stripeGetNext();
undefined JPADraw__stripeGetPrev();
undefined JPADrawExecStripe__exec(JPADrawExecStripe * this, JPADrawContext * param_1);
undefined JPADrawExecStripeCross__exec(JPADrawExecStripeCross * this, JPADrawContext * param_1);
undefined JPADrawExecRegisterColorEmitterPE__exec(JPADrawExecRegisterColorEmitterPE * this, JPADrawContext * param_1);
undefined JPADrawExecRegisterColorEmitterP__exec(JPADrawExecRegisterColorEmitterP * this, JPADrawContext * param_1);
undefined JPADrawExecRegisterColorEmitterE__exec(JPADrawExecRegisterColorEmitterE * this, JPADrawContext * param_1);
undefined JPADrawExecRegisterColorChildPE__exec(JPADrawExecRegisterColorChildPE * this, JPADrawContext * param_1);
undefined JPADrawCalcColorPrm__calc(JPADrawCalcColorPrm * this, JPADrawContext * param_1);
undefined JPADrawCalcColorEnv__calc(JPADrawCalcColorEnv * this, JPADrawContext * param_1);
undefined JPADrawCalcColorAnmFrameNormal__calc(JPADrawCalcColorAnmFrameNormal * this, JPADrawContext * param_1);
undefined JPADrawCalcColorAnmFrameRepeat__calc(JPADrawCalcColorAnmFrameRepeat * this, JPADrawContext * param_1);
undefined JPADrawCalcColorAnmFrameReverse__calc(JPADrawCalcColorAnmFrameReverse * this, JPADrawContext * param_1);
undefined JPADrawCalcColorAnmFrameMerge__calc(JPADrawCalcColorAnmFrameMerge * this, JPADrawContext * param_1);
undefined JPADrawCalcColorAnmFrameRandom__calc(JPADrawCalcColorAnmFrameRandom * this, JPADrawContext * param_1);
undefined JPADrawCalcTextureAnmIndexNormal__calc(JPADrawCalcTextureAnmIndexNormal * this, JPADrawContext * param_1);
undefined JPADrawCalcTextureAnmIndexRepeat__calc(JPADrawCalcTextureAnmIndexRepeat * this, JPADrawContext * param_1);
undefined JPADrawCalcTextureAnmIndexReverse__calc(JPADrawCalcTextureAnmIndexReverse * this, JPADrawContext * param_1);
undefined JPADrawCalcTextureAnmIndexMerge__calc(JPADrawCalcTextureAnmIndexMerge * this, JPADrawContext * param_1);
undefined JPADrawCalcTextureAnmIndexRandom__calc(JPADrawCalcTextureAnmIndexRandom * this, JPADrawContext * param_1);
undefined JPADrawExecCallBack__exec(JPADrawExecCallBack * this, JPADrawContext * param_1);
// undefined JPADrawExecCallBack__exec(JPADrawExecCallBack * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcScaleX__calc(JPADrawCalcScaleX * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcScaleY__calc(JPADrawCalcScaleY * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcScaleXBySpeed__calc(JPADrawCalcScaleXBySpeed * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcScaleYBySpeed__calc(JPADrawCalcScaleYBySpeed * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcScaleCopyX2Y__calc(JPADrawCalcScaleCopyX2Y * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcScaleAnmTimingNormal__calc(JPADrawCalcScaleAnmTimingNormal * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcScaleAnmTimingRepeatX__calc(JPADrawCalcScaleAnmTimingRepeatX * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcScaleAnmTimingRepeatY__calc(JPADrawCalcScaleAnmTimingRepeatY * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcScaleAnmTimingReverseX__calc(JPADrawCalcScaleAnmTimingReverseX * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcScaleAnmTimingReverseY__calc(JPADrawCalcScaleAnmTimingReverseY * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// undefined JPADrawCalcColorPrm__calc(JPADrawCalcColorPrm * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// undefined JPADrawCalcColorEnv__calc(JPADrawCalcColorEnv * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcColorCopyFromEmitter__calc(JPADrawCalcColorCopyFromEmitter * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// undefined JPADrawCalcColorAnmFrameNormal__calc(JPADrawCalcColorAnmFrameNormal * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// undefined JPADrawCalcColorAnmFrameRepeat__calc(JPADrawCalcColorAnmFrameRepeat * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// undefined JPADrawCalcColorAnmFrameReverse__calc(JPADrawCalcColorAnmFrameReverse * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// undefined JPADrawCalcColorAnmFrameMerge__calc(JPADrawCalcColorAnmFrameMerge * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// undefined JPADrawCalcColorAnmFrameRandom__calc(JPADrawCalcColorAnmFrameRandom * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcAlpha__calc(JPADrawCalcAlpha * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcAlphaFlickNrmSin__calc(JPADrawCalcAlphaFlickNrmSin * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcAlphaFlickAddSin__calc(JPADrawCalcAlphaFlickAddSin * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcAlphaFlickMultSin__calc(JPADrawCalcAlphaFlickMultSin * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// undefined JPADrawCalcTextureAnmIndexNormal__calc(JPADrawCalcTextureAnmIndexNormal * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// undefined JPADrawCalcTextureAnmIndexRepeat__calc(JPADrawCalcTextureAnmIndexRepeat * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// undefined JPADrawCalcTextureAnmIndexReverse__calc(JPADrawCalcTextureAnmIndexReverse * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// undefined JPADrawCalcTextureAnmIndexMerge__calc(JPADrawCalcTextureAnmIndexMerge * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// undefined JPADrawCalcTextureAnmIndexRandom__calc(JPADrawCalcTextureAnmIndexRandom * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcChildAlphaOut__calc(JPADrawCalcChildAlphaOut * this, JPADrawContext * param_1, JPABaseParticle * param_2);
undefined JPADrawCalcChildScaleOut__calc(JPADrawCalcChildScaleOut * this, JPADrawContext * param_1, JPABaseParticle * param_2);
void JPADrawCalcChildScaleOut__JPADrawCalcChildScaleOut_destructor(JPADrawCalcChildScaleOut * this);
void JPADrawCalcParticleVisitor__JPADrawCalcParticleVisitor_destructor(JPADrawCalcParticleVisitor * this);
void JPADrawCalcChildAlphaOut__JPADrawCalcChildAlphaOut_destructor(JPADrawCalcChildAlphaOut * this);
void JPADrawCalcAlphaFlickMultSin__JPADrawCalcAlphaFlickMultSin_destructor(JPADrawCalcAlphaFlickMultSin * this);
void JPADrawCalcAlphaFlickAddSin__JPADrawCalcAlphaFlickAddSin_destructor(JPADrawCalcAlphaFlickAddSin * this);
void JPADrawCalcAlphaFlickNrmSin__JPADrawCalcAlphaFlickNrmSin_destructor(JPADrawCalcAlphaFlickNrmSin * this);
void JPADrawCalcAlpha__JPADrawCalcAlpha_destructor(JPADrawCalcAlpha * this);
void JPADrawCalcColorCopyFromEmitter__JPADrawCalcColorCopyFromEmitter_destructor(JPADrawCalcColorCopyFromEmitter * this);
void JPADrawCalcScaleAnmTimingReverseY__JPADrawCalcScaleAnmTimingReverseY_destructor(JPADrawCalcScaleAnmTimingReverseY * this);
void JPADrawCalcScaleAnmTimingReverseX__JPADrawCalcScaleAnmTimingReverseX_destructor(JPADrawCalcScaleAnmTimingReverseX * this);
void JPADrawCalcScaleAnmTimingRepeatY__JPADrawCalcScaleAnmTimingRepeatY_destructor(JPADrawCalcScaleAnmTimingRepeatY * this);
void JPADrawCalcScaleAnmTimingRepeatX__JPADrawCalcScaleAnmTimingRepeatX_destructor(JPADrawCalcScaleAnmTimingRepeatX * this);
void JPADrawCalcScaleAnmTimingNormal__JPADrawCalcScaleAnmTimingNormal_destructor(JPADrawCalcScaleAnmTimingNormal * this);
void JPADrawCalcScaleCopyX2Y__JPADrawCalcScaleCopyX2Y_destructor(JPADrawCalcScaleCopyX2Y * this);
void JPADrawCalcScaleYBySpeed__JPADrawCalcScaleYBySpeed_destructor(JPADrawCalcScaleYBySpeed * this);
void JPADrawCalcScaleXBySpeed__JPADrawCalcScaleXBySpeed_destructor(JPADrawCalcScaleXBySpeed * this);
void JPADrawCalcScaleY__JPADrawCalcScaleY_destructor(JPADrawCalcScaleY * this);
void JPADrawCalcScaleX__JPADrawCalcScaleX_destructor(JPADrawCalcScaleX * this);
void JPADrawExecCallBack__JPADrawExecCallBack_destructor(JPADrawExecCallBack * this);
void JPADrawExecEmitterVisitor__JPADrawExecEmitterVisitor_destructor(JPADrawExecEmitterVisitor * this);
void JPADrawExecParticleVisitor__JPADrawExecParticleVisitor_destructor(JPADrawExecParticleVisitor * this);
void JPADrawCalcTextureAnmIndexRandom__JPADrawCalcTextureAnmIndexRandom_destructor(JPADrawCalcTextureAnmIndexRandom * this);
void JPADrawCalcEmitterVisitor__JPADrawCalcEmitterVisitor_destructor(JPADrawCalcEmitterVisitor * this);
void JPADrawCalcTextureAnmIndexMerge__JPADrawCalcTextureAnmIndexMerge_destructor(JPADrawCalcTextureAnmIndexMerge * this);
void JPADrawCalcTextureAnmIndexReverse__JPADrawCalcTextureAnmIndexReverse_destructor(JPADrawCalcTextureAnmIndexReverse * this);
void JPADrawCalcTextureAnmIndexRepeat__JPADrawCalcTextureAnmIndexRepeat_destructor(JPADrawCalcTextureAnmIndexRepeat * this);
void JPADrawCalcTextureAnmIndexNormal__JPADrawCalcTextureAnmIndexNormal_destructor(JPADrawCalcTextureAnmIndexNormal * this);
void JPADrawCalcColorAnmFrameRandom__JPADrawCalcColorAnmFrameRandom_destructor(JPADrawCalcColorAnmFrameRandom * this);
void JPADrawCalcColorAnmFrameMerge__JPADrawCalcColorAnmFrameMerge_destructor(JPADrawCalcColorAnmFrameMerge * this);
void JPADrawCalcColorAnmFrameReverse__JPADrawCalcColorAnmFrameReverse_destructor(JPADrawCalcColorAnmFrameReverse * this);
void JPADrawCalcColorAnmFrameRepeat__JPADrawCalcColorAnmFrameRepeat_destructor(JPADrawCalcColorAnmFrameRepeat * this);
void JPADrawCalcColorAnmFrameNormal__JPADrawCalcColorAnmFrameNormal_destructor(JPADrawCalcColorAnmFrameNormal * this);
void JPADrawCalcColorEnv__JPADrawCalcColorEnv_destructor(JPADrawCalcColorEnv * this);
void JPADrawCalcColorPrm__JPADrawCalcColorPrm_destructor(JPADrawCalcColorPrm * this);
void JPADrawExecRegisterColorChildPE__JPADrawExecRegisterColorChildPE_destructor(JPADrawExecRegisterColorChildPE * this);
void JPADrawExecRegisterColorEmitterE__JPADrawExecRegisterColorEmitterE_destructor(JPADrawExecRegisterColorEmitterE * this);
void JPADrawExecRegisterColorEmitterP__JPADrawExecRegisterColorEmitterP_destructor(JPADrawExecRegisterColorEmitterP * this);
void JPADrawExecRegisterColorEmitterPE__JPADrawExecRegisterColorEmitterPE_destructor(JPADrawExecRegisterColorEmitterPE * this);
void JPADrawExecStripeCross__JPADrawExecStripeCross_destructor(JPADrawExecStripeCross * this);
void JPADrawExecStripe__JPADrawExecStripe_destructor(JPADrawExecStripe * this);
void JPADrawExecLine__JPADrawExecLine_destructor(JPADrawExecLine * this);
void JPADrawExecPoint__JPADrawExecPoint_destructor(JPADrawExecPoint * this);
void JPADrawExecRotationCross__JPADrawExecRotationCross_destructor(JPADrawExecRotationCross * this);
void JPADrawExecRotation__JPADrawExecRotation_destructor(JPADrawExecRotation * this);
void JPADrawExecDirBillBoard__JPADrawExecDirBillBoard_destructor(JPADrawExecDirBillBoard * this);
void JPADrawExecRotDirectionalCross__JPADrawExecRotDirectionalCross_destructor(JPADrawExecRotDirectionalCross * this);
void JPADrawExecDirectionalCross__JPADrawExecDirectionalCross_destructor(JPADrawExecDirectionalCross * this);
void JPADrawExecRotDirectional__JPADrawExecRotDirectional_destructor(JPADrawExecRotDirectional * this);
void JPADrawExecDirectional__JPADrawExecDirectional_destructor(JPADrawExecDirectional * this);
void JPADrawExecRotYBillBoard__JPADrawExecRotYBillBoard_destructor(JPADrawExecRotYBillBoard * this);
void JPADrawExecYBillBoard__JPADrawExecYBillBoard_destructor(JPADrawExecYBillBoard * this);
void JPADrawExecRotBillBoard__JPADrawExecRotBillBoard_destructor(JPADrawExecRotBillBoard * this);
void JPADrawExecBillBoard__JPADrawExecBillBoard_destructor(JPADrawExecBillBoard * this);
void JPADrawExecRegisterPrmAEnv__JPADrawExecRegisterPrmAEnv_destructor(JPADrawExecRegisterPrmAEnv * this);
void JPADrawExecRegisterPrmCEnv__JPADrawExecRegisterPrmCEnv_destructor(JPADrawExecRegisterPrmCEnv * this);
void JPADrawExecRegisterEnvColorAnm__JPADrawExecRegisterEnvColorAnm_destructor(JPADrawExecRegisterEnvColorAnm * this);
void JPADrawExecRegisterPrmAlphaAnm__JPADrawExecRegisterPrmAlphaAnm_destructor(JPADrawExecRegisterPrmAlphaAnm * this);
void JPADrawExecRegisterPrmColorAnm__JPADrawExecRegisterPrmColorAnm_destructor(JPADrawExecRegisterPrmColorAnm * this);
void JPADrawExecSetLineWidth__JPADrawExecSetLineWidth_destructor(JPADrawExecSetLineWidth * this);
void JPADrawExecSetPointSize__JPADrawExecSetPointSize_destructor(JPADrawExecSetPointSize * this);
void JPADrawExecLoadTexture__JPADrawExecLoadTexture_destructor(JPADrawExecLoadTexture * this);
void JPADrawExecLoadDefaultTexture__JPADrawExecLoadDefaultTexture_destructor(JPADrawExecLoadDefaultTexture * this);
void JPADrawExecSetTexMtx__JPADrawExecSetTexMtx_destructor(JPADrawExecSetTexMtx * this);
void JPADrawExecGenIdtMtx__JPADrawExecGenIdtMtx_destructor(JPADrawExecGenIdtMtx * this);
void JPADrawExecGenTexMtx0__JPADrawExecGenTexMtx0_destructor(JPADrawExecGenTexMtx0 * this);
void JPADrawExecGenPrjTexMtx__JPADrawExecGenPrjTexMtx_destructor(JPADrawExecGenPrjTexMtx * this);
void JPADrawExecGenPrjMtx__JPADrawExecGenPrjMtx_destructor(JPADrawExecGenPrjMtx * this);
void JPADrawExecLoadExTex__JPADrawExecLoadExTex_destructor(JPADrawExecLoadExTex * this);
// undefined JPADrawExecSetTexMtx__exec(JPADrawExecSetTexMtx * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// void JPADrawExecSetTexMtx__JPADrawExecSetTexMtx_destructor(JPADrawExecSetTexMtx * this);
// undefined JPADrawExecLoadTexture__exec(JPADrawExecLoadTexture * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// void JPADrawExecLoadTexture__JPADrawExecLoadTexture_destructor(JPADrawExecLoadTexture * this);
// undefined JPADrawCalcColorPrm__calc(JPADrawCalcColorPrm * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// void JPADrawCalcColorPrm__JPADrawCalcColorPrm_destructor(JPADrawCalcColorPrm * this);
// undefined JPADrawCalcColorEnv__calc(JPADrawCalcColorEnv * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// void JPADrawCalcColorEnv__JPADrawCalcColorEnv_destructor(JPADrawCalcColorEnv * this);
// undefined JPADrawCalcColorAnmFrameNormal__calc(JPADrawCalcColorAnmFrameNormal * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// void JPADrawCalcColorAnmFrameNormal__JPADrawCalcColorAnmFrameNormal_destructor(JPADrawCalcColorAnmFrameNormal * this);
// undefined JPADrawCalcColorAnmFrameRepeat__calc(JPADrawCalcColorAnmFrameRepeat * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// void JPADrawCalcColorAnmFrameRepeat__JPADrawCalcColorAnmFrameRepeat_destructor(JPADrawCalcColorAnmFrameRepeat * this);
// undefined JPADrawCalcColorAnmFrameReverse__calc(JPADrawCalcColorAnmFrameReverse * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// void JPADrawCalcColorAnmFrameReverse__JPADrawCalcColorAnmFrameReverse_destructor(JPADrawCalcColorAnmFrameReverse * this);
// undefined JPADrawCalcColorAnmFrameMerge__calc(JPADrawCalcColorAnmFrameMerge * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// void JPADrawCalcColorAnmFrameMerge__JPADrawCalcColorAnmFrameMerge_destructor(JPADrawCalcColorAnmFrameMerge * this);
// undefined JPADrawCalcColorAnmFrameRandom__calc(JPADrawCalcColorAnmFrameRandom * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// void JPADrawCalcColorAnmFrameRandom__JPADrawCalcColorAnmFrameRandom_destructor(JPADrawCalcColorAnmFrameRandom * this);
// undefined JPADrawCalcTextureAnmIndexNormal__calc(JPADrawCalcTextureAnmIndexNormal * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// void JPADrawCalcTextureAnmIndexNormal__JPADrawCalcTextureAnmIndexNormal_destructor(JPADrawCalcTextureAnmIndexNormal * this);
// undefined JPADrawCalcTextureAnmIndexRepeat__calc(JPADrawCalcTextureAnmIndexRepeat * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// void JPADrawCalcTextureAnmIndexRepeat__JPADrawCalcTextureAnmIndexRepeat_destructor(JPADrawCalcTextureAnmIndexRepeat * this);
// undefined JPADrawCalcTextureAnmIndexReverse__calc(JPADrawCalcTextureAnmIndexReverse * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// void JPADrawCalcTextureAnmIndexReverse__JPADrawCalcTextureAnmIndexReverse_destructor(JPADrawCalcTextureAnmIndexReverse * this);
// undefined JPADrawCalcTextureAnmIndexMerge__calc(JPADrawCalcTextureAnmIndexMerge * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// void JPADrawCalcTextureAnmIndexMerge__JPADrawCalcTextureAnmIndexMerge_destructor(JPADrawCalcTextureAnmIndexMerge * this);
// undefined JPADrawCalcTextureAnmIndexRandom__calc(JPADrawCalcTextureAnmIndexRandom * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// void JPADrawCalcTextureAnmIndexRandom__JPADrawCalcTextureAnmIndexRandom_destructor(JPADrawCalcTextureAnmIndexRandom * this);
// undefined JPADrawExecCallBack__exec(JPADrawExecCallBack * this, JPADrawContext * param_1, JPABaseParticle * param_2);
// void JPADrawExecCallBack__JPADrawExecCallBack_destructor(JPADrawExecCallBack * this);
undefined JPADraw__initialize(JPADraw * this, JPABaseEmitter * param_1, JPATextureResource * param_2);
undefined JPADraw__draw(JPADraw * this, float * param_1);
undefined JPADraw__calc(JPADraw * this);
undefined JPADraw__calcParticle(JPADraw * this, JPABaseParticle * param_1);
undefined JPADraw__calcChild(JPADraw * this, JPABaseParticle * param_1);
undefined JPADraw__initParticle(JPADraw * this, JPABaseParticle * param_1);
undefined JPADraw__initChild(JPADraw * this, JPABaseParticle * param_1, JPABaseParticle * param_2);
undefined JPADraw__loadTexture(JPADraw * this, uchar param_1, _GXTexMapID param_2);
undefined JPADraw__setDrawExecVisitorsBeforeCB(JPADraw * this, JPADrawVisitorDefFlags * param_1);
undefined JPADraw__setDrawExecVisitorsAfterCB(JPADraw * this, JPADrawVisitorDefFlags * param_1);
undefined JPADraw__setDrawCalcVisitors(JPADraw * this, JPADrawVisitorDefFlags * param_1);
undefined JPADraw__setParticleClipBoard(JPADraw * this);
undefined JPADraw__setChildClipBoard(JPADraw * this);
undefined JPADraw__drawParticle(JPADraw * this);
undefined JPADraw__drawChild(JPADraw * this);
undefined JPADraw__zDraw(JPADraw * this);
undefined JPADraw__zDrawParticle(JPADraw * this);
undefined JPADraw__zDrawChild(JPADraw * this);
undefined JPADraw__loadYBBMtx(JPADraw * this, float * param_1);
undefined JPADraw____sinit_JPADraw_cpp();
void JPADrawClipBoard__JPADrawClipBoard_destructor(JPADrawClipBoard * this);
undefined JGeometry__TVec2__float____float____TVec2(TVec2__float____float__ * this);
void JPADrawVisitorContainer__JPADrawVisitorContainer_destructor(JPADrawVisitorContainer * this);
void JPADrawVisitorContainer__JPADrawVisitorContainer(JPADrawVisitorContainer * this);
undefined JPADrawSetupTev__setupTev(JPADrawSetupTev * this, JPABaseShape * param_1, JPAExTexShape * param_2);
void JStage__TActor__TActor_destructor(TActor * this);
undefined JStage__TActor__JSGFGetType(TActor * this);
undefined JStage__TActor__JSGGetTranslation(TActor * this, Vec * param_1);
undefined JStage__TActor__JSGSetTranslation(TActor * this, Vec * param_1);
undefined JStage__TActor__JSGGetScaling(TActor * this, Vec * param_1);
undefined JStage__TActor__JSGSetScaling(TActor * this, Vec * param_1);
undefined JStage__TActor__JSGGetRotation(TActor * this, Vec * param_1);
undefined JStage__TActor__JSGSetRotation(TActor * this, Vec * param_1);
undefined JStage__TActor__JSGGetShape(TActor * this);
undefined JStage__TActor__JSGSetShape(TActor * this, ulong param_1);
undefined JStage__TActor__JSGGetAnimation(TActor * this);
undefined JStage__TActor__JSGSetAnimation(TActor * this, ulong param_1);
undefined JStage__TActor__JSGGetAnimationFrame(TActor * this);
undefined JStage__TActor__JSGSetAnimationFrame(TActor * this, float param_1);
undefined JStage__TActor__JSGGetAnimationFrameMax(TActor * this);
undefined JStage__TActor__JSGGetAnimationTransition(TActor * this);
undefined JStage__TActor__JSGSetAnimationTransition(TActor * this, float param_1);
undefined JStage__TActor__JSGGetTextureAnimation(TActor * this);
undefined JStage__TActor__JSGSetTextureAnimation(TActor * this, ulong param_1);
undefined JStage__TActor__JSGGetTextureAnimationFrame(TActor * this);
undefined JStage__TActor__JSGSetTextureAnimationFrame(TActor * this, float param_1);
undefined JStage__TActor__JSGGetTextureAnimationFrameMax(TActor * this);
void JStage__TAmbientLight__TAmbientLight_destructor(TAmbientLight * this);
undefined JStage__TAmbientLight__JSGFGetType(TAmbientLight * this);
undefined JStage__TAmbientLight__JSGGetColor(TAmbientLight * this);
undefined JStage__TAmbientLight__JSGSetColor(TAmbientLight * this, _GXColor * param_1);
void JStage__TCamera__TCamera_destructor(TCamera * this);
undefined JStage__TCamera__JSGFGetType(TCamera * this);
undefined JStage__TCamera__JSGGetProjectionType(TCamera * this);
undefined JStage__TCamera__JSGSetProjectionType(TCamera * this, TECameraProjection param_1);
undefined JStage__TCamera__JSGGetProjectionNear(TCamera * this);
undefined JStage__TCamera__JSGSetProjectionNear(TCamera * this, float param_1);
undefined JStage__TCamera__JSGGetProjectionFar(TCamera * this);
undefined JStage__TCamera__JSGSetProjectionFar(TCamera * this, float param_1);
undefined JStage__TCamera__JSGGetProjectionFovy(TCamera * this);
undefined JStage__TCamera__JSGSetProjectionFovy(TCamera * this, float param_1);
undefined JStage__TCamera__JSGGetProjectionAspect(TCamera * this);
undefined JStage__TCamera__JSGSetProjectionAspect(TCamera * this, float param_1);
undefined JStage__TCamera__JSGGetProjectionField(TCamera * this, float * param_1);
undefined JStage__TCamera__JSGSetProjectionField(TCamera * this, float * param_1);
undefined JStage__TCamera__JSGGetViewType(TCamera * this);
undefined JStage__TCamera__JSGSetViewType(TCamera * this, TECameraView param_1);
undefined JStage__TCamera__JSGGetViewPosition(TCamera * this, Vec * param_1);
undefined JStage__TCamera__JSGSetViewPosition(TCamera * this, Vec * param_1);
undefined JStage__TCamera__JSGGetViewUpVector(TCamera * this, Vec * param_1);
undefined JStage__TCamera__JSGSetViewUpVector(TCamera * this, Vec * param_1);
undefined JStage__TCamera__JSGGetViewTargetPosition(TCamera * this, Vec * param_1);
undefined JStage__TCamera__JSGSetViewTargetPosition(TCamera * this, Vec * param_1);
undefined JStage__TCamera__JSGGetViewRoll(TCamera * this);
undefined JStage__TCamera__JSGSetViewRoll(TCamera * this, float param_1);
void JStage__TFog__TFog_destructor(TFog * this);
undefined JStage__TFog__JSGFGetType(TFog * this);
undefined JStage__TFog__JSGGetFogFunction(TFog * this);
undefined JStage__TFog__JSGSetFogFunction(TFog * this, _GXFogType param_1);
undefined JStage__TFog__JSGGetStartZ(TFog * this);
undefined JStage__TFog__JSGSetStartZ(TFog * this, float param_1);
undefined JStage__TFog__JSGGetEndZ(TFog * this);
undefined JStage__TFog__JSGSetEndZ(TFog * this, float param_1);
undefined JStage__TFog__JSGGetColor(TFog * this);
undefined JStage__TFog__JSGSetColor(TFog * this, _GXColor * param_1);
void JStage__TLight__TLight_destructor(TLight * this);
undefined JStage__TLight__JSGFGetType(TLight * this);
undefined JStage__TLight__JSGGetLightType(TLight * this);
undefined JStage__TLight__JSGSetLightType(TLight * this, TELight param_1);
undefined JStage__TLight__JSGGetColor(TLight * this);
undefined JStage__TLight__JSGSetColor(TLight * this, _GXColor * param_1);
undefined JStage__TLight__JSGGetDistanceAttenuation(TLight * this, float * param_1, float * param_2, undefined param_3);
undefined JStage__TLight__JSGSetDistanceAttenuation(TLight * this, float param_1, float param_2, undefined param_3);
undefined JStage__TLight__JSGGetAngleAttenuation(TLight * this, float * param_1, undefined param_2);
undefined JStage__TLight__JSGSetAngleAttenuation(TLight * this, float param_1, undefined param_2);
undefined JStage__TLight__JSGGetPosition(TLight * this, Vec * param_1);
undefined JStage__TLight__JSGSetPosition(TLight * this, Vec * param_1);
undefined JStage__TLight__JSGGetDirection(TLight * this, Vec * param_1);
undefined JStage__TLight__JSGSetDirection(TLight * this, Vec * param_1);
void JStage__TObject__TObject_destructor(TObject * this);
undefined JStage__TObject__JSGGetName(TObject * this);
undefined JStage__TObject__JSGGetFlag(TObject * this);
undefined JStage__TObject__JSGSetFlag(TObject * this, ulong param_1);
undefined JStage__TObject__JSGGetData(TObject * this, ulong param_1, void * param_2, ulong param_3);
undefined JStage__TObject__JSGSetData(TObject * this, ulong param_1, void * param_2, ulong param_3);
undefined JStage__TObject__JSGGetParent(TObject * this, TObject * * param_1, ulong * param_2);
undefined JStage__TObject__JSGSetParent(TObject * this, TObject * param_1, ulong param_2);
undefined JStage__TObject__JSGSetRelation(TObject * this, bool param_1, TObject * param_2, ulong param_3);
undefined JStage__TObject__JSGFindNodeID(TObject * this, char * param_1);
undefined JStage__TObject__JSGGetNodeTransformation(TObject * this, ulong param_1, float * param_2);
void JStage__TSystem__TSystem_destructor(TSystem * this);
undefined JStage__TSystem__JSGFGetType(TSystem * this);
undefined JStage__TSystem__JSGFindObject(TSystem * this, char * param_1, TEObject param_2);
undefined JStage__TSystem__JSGCreateObject(TSystem * this, char * param_1, TEObject param_2, ulong param_3);
undefined JStage__TSystem__JSGDestroyObject(TSystem * this, TObject * param_1);
undefined JStage__TSystem__JSGGetSystemData(TSystem * this, ulong param_1);
undefined JStage__TSystem__JSGSetSystemData(TSystem * this, ulong param_1, ulong param_2);
void JStudio__TControl__TControl(TControl * this);
void JStudio__TControl__TControl_destructor(TControl * this);
undefined JStudio__TControl__transformOnSet_setOrigin(TControl * this, Vec * param_1, float param_2);
undefined JStudio__TControl__transformOnGet_setOrigin(TControl * this, Vec * param_1, float param_2);
void JStudio__TCreateObject__TCreateObject_destructor(TCreateObject * this);
void JStudio__TFactory__TFactory_destructor(TFactory * this);
undefined JStudio__TFactory__appendCreateObject(TFactory * this, TCreateObject * param_1);
undefined JStudio__TFactory__create(TFactory * this, TParse_TBlock_object * param_1);
void JStudio__TParse__TParse(TParse * this, TControl * param_1);
void JStudio__TParse__TParse_destructor(TParse * this);
undefined JStudio__TParse__parseHeader(TParse * this, TParse_THeader * param_1, ulong param_2);
undefined JStudio__TParse__parseBlock_block(TParse * this, TParse_TBlock * param_1, ulong param_2);
undefined JStudio__TParse__parseBlock_block_fvb_(TParse * this, TParse_TBlock * param_1, ulong param_2);
undefined JStudio__math__getRotation_xyz(math * this, float * param_1, float param_2, float param_3, float param_4);
undefined JStudio__math__rotate_xyz(math * this, float * param_1, float * param_2, float param_3, float param_4, float param_5);
undefined JStudio__math__rotate_y(math * this, float * param_1, float * param_2, float param_3);
undefined JStudio__math__getTransformation_SRxyzT(math * this, float * param_1, Vec * param_2, Vec * param_3, Vec * param_4);
undefined JStudio__math__getTransformation_RyT(math * this, float * param_1, float param_2, Vec * param_3);
void JStudio__TVariableValue__TOutput__TOutput_destructor(TOutput * this);
undefined JStudio__TVariableValue__update(TVariableValue * this, double param_1, TAdaptor * param_2);
undefined JStudio__TVariableValue__update_immediate_(TVariableValue * this, TVariableValue * param_1, double param_2);
undefined JStudio__TVariableValue__update_time_(TVariableValue * this, TVariableValue * param_1, double param_2);
undefined JStudio__TVariableValue__update_functionValue_(TVariableValue * this, TVariableValue * param_1, double param_2);
void JStudio__TVariableValue__TOutput_none___TOutput_none__destructor(TOutput_none_ * this);
undefined JStudio__TVariableValue__TOutput_none___operator_parentheses(TOutput_none_ * this, float param_1, TAdaptor * param_2);
void JStudio__TAdaptor__TAdaptor_destructor(TAdaptor * this);
undefined JStudio__TAdaptor__adaptor_do_prepare(TAdaptor * this, TObject * param_1);
undefined JStudio__TAdaptor__adaptor_do_begin(TAdaptor * this, TObject * param_1);
undefined JStudio__TAdaptor__adaptor_do_end(TAdaptor * this, TObject * param_1);
undefined JStudio__TAdaptor__adaptor_do_update(TAdaptor * this, TObject * param_1, ulong param_2);
undefined JStudio__TAdaptor__adaptor_do_data(TAdaptor * this, TObject * param_1, void * param_2, ulong param_3, void * param_4, ulong param_5);
undefined JStudio__TAdaptor__adaptor_setVariableValue(TAdaptor * this, TObject * param_1, ulong param_2, TEOperationData param_3, void * param_4, ulong param_5);
undefined JStudio__TAdaptor__adaptor_setVariableValue_n(TAdaptor * this, TObject * param_1, ulong * param_2, ulong param_3, TEOperationData param_4, void * param_5, ulong param_6);
undefined JStudio__TAdaptor__adaptor_setVariableValue_immediate(TAdaptor * this, TSetVariableValue_immediate * param_1);
undefined JStudio__TAdaptor__adaptor_setVariableValue_Vec(TAdaptor * this, ulong * param_1, Vec * param_2);
undefined JStudio__TAdaptor__adaptor_getVariableValue_Vec(TAdaptor * this, Vec * param_1, ulong * param_2);
undefined JStudio__TAdaptor__adaptor_setVariableValue_GXColor(TAdaptor * this, ulong * param_1, _GXColor * param_2);
undefined JStudio__TAdaptor__adaptor_getVariableValue_GXColor(TAdaptor * this, _GXColor * param_1, ulong * param_2);
undefined JStudio__TAdaptor__adaptor_updateVariableValue(TAdaptor * this, TObject * param_1, ulong param_2);
undefined JStudio__TAdaptor__adaptor_setVariableValue_VOID_(TAdaptor * this, TAdaptor * param_1, TObject * param_2, ulong param_3, void * param_4, ulong param_5);
undefined JStudio__TAdaptor__adaptor_setVariableValue_IMMEDIATE_(TAdaptor * this, TAdaptor * param_1, TObject * param_2, ulong param_3, void * param_4, ulong param_5);
undefined JStudio__TAdaptor__adaptor_setVariableValue_TIME_(TAdaptor * this, TAdaptor * param_1, TObject * param_2, ulong param_3, void * param_4, ulong param_5);
undefined JStudio__TAdaptor__adaptor_setVariableValue_FVR_NAME_(TAdaptor * this, TAdaptor * param_1, TObject * param_2, ulong param_3, void * param_4, ulong param_5);
undefined JStudio__TAdaptor__adaptor_setVariableValue_FVR_INDEX_(TAdaptor * this, TAdaptor * param_1, TObject * param_2, ulong param_3, void * param_4, ulong param_5);
void JStudio__TObject__TObject_destructor(TObject * this);
undefined JStudio__TObject__forward_value(TObject * this, ulong param_1);
undefined JStudio__TObject__do_begin(TObject * this);
undefined JStudio__TObject__do_end(TObject * this);
undefined JStudio__TObject__do_wait(TObject * this, ulong param_1);
undefined JStudio__TObject__do_data(TObject * this, void * param_1, ulong param_2, void * param_3, ulong param_4);
void JStudio__TObject__TObject(TObject * this, TParse_TBlock_object * param_1, TAdaptor * param_2);
void JStudio__TAdaptor_actor__TAdaptor_actor_destructor(TAdaptor_actor * this);
void JStudio__TObject_actor__TObject_actor(TObject_actor * this, TParse_TBlock_object * param_1, TAdaptor_actor * param_2);
undefined JStudio__TObject_actor__do_paragraph(TObject_actor * this, ulong param_1, void * param_2, ulong param_3);
void JStudio__TAdaptor_ambientLight__TAdaptor_ambientLight_destructor(TAdaptor_ambientLight * this);
void JStudio__TObject_ambientLight__TObject_ambientLight(TObject_ambientLight * this, TParse_TBlock_object * param_1, TAdaptor_ambientLight * param_2);
undefined JStudio__TObject_ambientLight__do_paragraph(TObject_ambientLight * this, ulong param_1, void * param_2, ulong param_3);
void JStudio__TAdaptor_camera__TAdaptor_camera_destructor(TAdaptor_camera * this);
void JStudio__TObject_camera__TObject_camera(TObject_camera * this, TParse_TBlock_object * param_1, TAdaptor_camera * param_2);
undefined JStudio__TObject_camera__do_paragraph(TObject_camera * this, ulong param_1, void * param_2, ulong param_3);
void JStudio__TAdaptor_fog__TAdaptor_fog_destructor(TAdaptor_fog * this);
void JStudio__TObject_fog__TObject_fog(TObject_fog * this, TParse_TBlock_object * param_1, TAdaptor_fog * param_2);
undefined JStudio__TObject_fog__do_paragraph(TObject_fog * this, ulong param_1, void * param_2, ulong param_3);
void JStudio__TAdaptor_light__TAdaptor_light_destructor(TAdaptor_light * this);
void JStudio__TObject_light__TObject_light(TObject_light * this, TParse_TBlock_object * param_1, TAdaptor_light * param_2);
undefined JStudio__TObject_light__do_paragraph(TObject_light * this, ulong param_1, void * param_2, ulong param_3);
void JStudio__TAdaptor_message__TAdaptor_message_destructor(TAdaptor_message * this);
void JStudio__TObject_message__TObject_message(TObject_message * this, TParse_TBlock_object * param_1, TAdaptor_message * param_2);
undefined JStudio__TObject_message__do_paragraph(TObject_message * this, ulong param_1, void * param_2, ulong param_3);
void JStudio__TAdaptor_particle__TAdaptor_particle_destructor(TAdaptor_particle * this);
void JStudio__TObject_particle__TObject_particle(TObject_particle * this, TParse_TBlock_object * param_1, TAdaptor_particle * param_2);
undefined JStudio__TObject_particle__do_paragraph(TObject_particle * this, ulong param_1, void * param_2, ulong param_3);
void JStudio__TAdaptor_sound__TAdaptor_sound_destructor(TAdaptor_sound * this);
void JStudio__TObject_sound__TObject_sound(TObject_sound * this, TParse_TBlock_object * param_1, TAdaptor_sound * param_2);
undefined JStudio__TObject_sound__do_paragraph(TObject_sound * this, ulong param_1, void * param_2, ulong param_3);
void JStudio__TObject_sound__TObject_sound_destructor(TObject_sound * this);
void JStudio__TObject_particle__TObject_particle_destructor(TObject_particle * this);
void JStudio__TObject_message__TObject_message_destructor(TObject_message * this);
void JStudio__TObject_light__TObject_light_destructor(TObject_light * this);
void JStudio__TObject_fog__TObject_fog_destructor(TObject_fog * this);
void JStudio__TObject_camera__TObject_camera_destructor(TObject_camera * this);
void JStudio__TObject_ambientLight__TObject_ambientLight_destructor(TObject_ambientLight * this);
void JStudio__TObject_actor__TObject_actor_destructor(TObject_actor * this);
undefined JStudio____sinit_jstudio_object_cpp();
undefined JStudio___unnamed_jstudio_object_cpp___TOutputVariableValue_BOOL___JStudio__TAdaptor_sound____TOutputVariableValue_BOOL__destructor(TOutputVariableValue_BOOL___JStudio__TAdaptor_sound__ * this);
undefined JStudio___unnamed_jstudio_object_cpp___TOutputVariableValue_BOOL___JStudio__TAdaptor_particle____TOutputVariableValue_BOOL__destructor(TOutputVariableValue_BOOL___JStudio__TAdaptor_particle__ * this);
undefined JStudio___unnamed_jstudio_object_cpp___TOutputVariableValue_BOOL___JStudio__TAdaptor_light____TOutputVariableValue_BOOL__destructor(TOutputVariableValue_BOOL___JStudio__TAdaptor_light__ * this);
undefined JStudio___unnamed_jstudio_object_cpp___TOutputVariableValue_BOOL___JStudio__TAdaptor_camera____TOutputVariableValue_BOOL__destructor(TOutputVariableValue_BOOL___JStudio__TAdaptor_camera__ * this);
undefined JStudio___unnamed_jstudio_object_cpp___TOutputVariableValue_BOOL___JStudio__TAdaptor_actor____TOutputVariableValue_BOOL__destructor(TOutputVariableValue_BOOL___JStudio__TAdaptor_actor__ * this);
undefined JStudio___unnamed_jstudio_object_cpp___TOutputVariableValue_BOOL___JStudio__TAdaptor_sound____operator_parentheses(TOutputVariableValue_BOOL___JStudio__TAdaptor_sound__ * this, float param_1, TAdaptor * param_2);
undefined JStudio___unnamed_jstudio_object_cpp___TOutputVariableValue_BOOL___JStudio__TAdaptor_particle____operator_parentheses(TOutputVariableValue_BOOL___JStudio__TAdaptor_particle__ * this, float param_1, TAdaptor * param_2);
undefined JStudio___unnamed_jstudio_object_cpp___TOutputVariableValue_BOOL___JStudio__TAdaptor_light____operator_parentheses(TOutputVariableValue_BOOL___JStudio__TAdaptor_light__ * this, float param_1, TAdaptor * param_2);
undefined JStudio___unnamed_jstudio_object_cpp___TOutputVariableValue_BOOL___JStudio__TAdaptor_camera____operator_parentheses(TOutputVariableValue_BOOL___JStudio__TAdaptor_camera__ * this, float param_1, TAdaptor * param_2);
undefined JStudio___unnamed_jstudio_object_cpp___TOutputVariableValue_BOOL___JStudio__TAdaptor_actor____operator_parentheses(TOutputVariableValue_BOOL___JStudio__TAdaptor_actor__ * this, float param_1, TAdaptor * param_2);
undefined JStudio__TFunctionValue__toFunction_outside(TFunctionValue * this, int param_1);
void JStudio__TFunctionValue__TFunctionValue(TFunctionValue * this);
void JStudio__TFunctionValue__TFunctionValue_destructor(TFunctionValue * this);
undefined JStudio__TFunctionValueAttribute_refer__refer_initialize(TFunctionValueAttribute_refer * this);
undefined JStudio__functionvalue__interpolateValue_hermite(functionvalue * this, double param_1, double param_2, double param_3, double param_4, double param_5, double param_6, double param_7);
undefined JStudio__functionvalue__interpolateValue_BSpline_uniform(functionvalue * this, double param_1, double param_2, double param_3, double param_4, double param_5);
undefined JStudio__functionvalue__interpolateValue_BSpline_nonuniform(functionvalue * this, double param_1, double * param_2, double * param_3);
undefined JStudio__functionvalue__extrapolateParameter_turn(functionvalue * this, double param_1, double param_2);
undefined JStudio__TFunctionValueAttribute_range__range_initialize(TFunctionValueAttribute_range * this);
undefined JStudio__TFunctionValueAttribute_range__range_prepare(TFunctionValueAttribute_range * this);
undefined JStudio__TFunctionValueAttribute_range__range_set(TFunctionValueAttribute_range * this, double param_1, double param_2);
undefined JStudio__TFunctionValueAttribute_range__range_getParameter(TFunctionValueAttribute_range * this, double param_1, double param_2, double param_3);
void JStudio__TFunctionValueAttribute_range__TFunctionValueAttribute_range(TFunctionValueAttribute_range * this);
void JStudio__TFunctionValue_composite__TFunctionValue_composite(TFunctionValue_composite * this);
undefined JStudio__TFunctionValue_composite__getType(TFunctionValue_composite * this);
undefined JStudio__TFunctionValue_composite__getAttributeSet(TFunctionValue_composite * this);
undefined JStudio__TFunctionValue_composite__initialize(TFunctionValue_composite * this);
undefined JStudio__TFunctionValue_composite__prepare(TFunctionValue_composite * this);
undefined JStudio__TFunctionValue_composite__getValue(TFunctionValue_composite * this, double param_1);
undefined JStudio__TFunctionValue_composite__composite_raw(TFunctionValue_composite * this, TVector_pointer * param_1, TData * param_2, double param_3);
undefined JStudio__TFunctionValue_composite__composite_index(TFunctionValue_composite * this, TVector_pointer * param_1, TData * param_2, double param_3);
undefined JStudio__TFunctionValue_composite__composite_parameter(TFunctionValue_composite * this, TVector_pointer * param_1, TData * param_2, double param_3);
undefined JStudio__TFunctionValue_composite__composite_add(TFunctionValue_composite * this, TVector_pointer * param_1, TData * param_2, double param_3);
undefined JStudio__TFunctionValue_composite__composite_subtract(TFunctionValue_composite * this, TVector_pointer * param_1, TData * param_2, double param_3);
undefined JStudio__TFunctionValue_composite__composite_multiply(TFunctionValue_composite * this, TVector_pointer * param_1, TData * param_2, double param_3);
undefined JStudio__TFunctionValue_composite__composite_divide(TFunctionValue_composite * this, TVector_pointer * param_1, TData * param_2, double param_3);
void JStudio__TFunctionValue_constant__TFunctionValue_constant(TFunctionValue_constant * this);
undefined JStudio__TFunctionValue_constant__getType(TFunctionValue_constant * this);
undefined JStudio__TFunctionValue_constant__getAttributeSet(TFunctionValue_constant * this);
undefined JStudio__TFunctionValue_constant__initialize(TFunctionValue_constant * this);
undefined JStudio__TFunctionValue_constant__prepare(TFunctionValue_constant * this);
undefined JStudio__TFunctionValue_constant__getValue(TFunctionValue_constant * this, double param_1);
void JStudio__TFunctionValue_transition__TFunctionValue_transition(TFunctionValue_transition * this);
undefined JStudio__TFunctionValue_transition__getType(TFunctionValue_transition * this);
undefined JStudio__TFunctionValue_transition__getAttributeSet(TFunctionValue_transition * this);
undefined JStudio__TFunctionValue_transition__initialize(TFunctionValue_transition * this);
undefined JStudio__TFunctionValue_transition__prepare(TFunctionValue_transition * this);
undefined JStudio__TFunctionValue_transition__getValue(TFunctionValue_transition * this, double param_1);
void JStudio__TFunctionValue_list__TFunctionValue_list(TFunctionValue_list * this);
undefined JStudio__TFunctionValue_list__getType(TFunctionValue_list * this);
undefined JStudio__TFunctionValue_list__getAttributeSet(TFunctionValue_list * this);
undefined JStudio__TFunctionValue_list__initialize(TFunctionValue_list * this);
undefined JStudio__TFunctionValue_list__prepare(TFunctionValue_list * this);
undefined JStudio__TFunctionValue_list__getValue(TFunctionValue_list * this, double param_1);
undefined JStudio__TFunctionValue_list__update_INTERPOLATE_NONE_(TFunctionValue_list * this, TFunctionValue_list * param_1, TIndexData_ * param_2);
undefined JStudio__TFunctionValue_list__update_INTERPOLATE_LINEAR_(TFunctionValue_list * this, TFunctionValue_list * param_1, TIndexData_ * param_2);
undefined JStudio__TFunctionValue_list__update_INTERPOLATE_PLATEAU_(TFunctionValue_list * this, TFunctionValue_list * param_1, TIndexData_ * param_2);
undefined JStudio__TFunctionValue_list__update_INTERPOLATE_BSPLINE_dataMore3_(TFunctionValue_list * this, TFunctionValue_list * param_1, TIndexData_ * param_2);
void JStudio__TFunctionValue_list_parameter__TFunctionValue_list_parameter(TFunctionValue_list_parameter * this);
undefined JStudio__TFunctionValue_list_parameter__getType(TFunctionValue_list_parameter * this);
undefined JStudio__TFunctionValue_list_parameter__getAttributeSet(TFunctionValue_list_parameter * this);
undefined JStudio__TFunctionValue_list_parameter__data_set(TFunctionValue_list_parameter * this, float * param_1, ulong param_2);
undefined JStudio__TFunctionValue_list_parameter__initialize(TFunctionValue_list_parameter * this);
undefined JStudio__TFunctionValue_list_parameter__prepare(TFunctionValue_list_parameter * this);
undefined JStudio__TFunctionValue_list_parameter__getValue(TFunctionValue_list_parameter * this, double param_1);
undefined JStudio__TFunctionValue_list_parameter__update_INTERPOLATE_NONE_(TFunctionValue_list_parameter * this, TFunctionValue_list_parameter * param_1, double param_2);
undefined JStudio__TFunctionValue_list_parameter__update_INTERPOLATE_LINEAR_(TFunctionValue_list_parameter * this, TFunctionValue_list_parameter * param_1, double param_2);
undefined JStudio__TFunctionValue_list_parameter__update_INTERPOLATE_PLATEAU_(TFunctionValue_list_parameter * this, TFunctionValue_list_parameter * param_1, double param_2);
undefined JStudio__TFunctionValue_list_parameter__update_INTERPOLATE_BSPLINE_dataMore3_(TFunctionValue_list_parameter * this, TFunctionValue_list_parameter * param_1, double param_2);
void JStudio__TFunctionValue_hermite__TFunctionValue_hermite(TFunctionValue_hermite * this);
undefined JStudio__TFunctionValue_hermite__getType(TFunctionValue_hermite * this);
undefined JStudio__TFunctionValue_hermite__getAttributeSet(TFunctionValue_hermite * this);
undefined JStudio__TFunctionValue_hermite__data_set(TFunctionValue_hermite * this, float * param_1, ulong param_2, ulong param_3);
undefined JStudio__TFunctionValue_hermite__initialize(TFunctionValue_hermite * this);
undefined JStudio__TFunctionValue_hermite__prepare(TFunctionValue_hermite * this);
undefined JStudio__TFunctionValue_hermite__getValue(TFunctionValue_hermite * this, double param_1);
undefined JStudio__functionvalue__extrapolateParameter_raw(functionvalue * this, double param_1, double param_2);
undefined JStudio__functionvalue__extrapolateParameter_repeat(functionvalue * this, double param_1, double param_2);
undefined JStudio__functionvalue__extrapolateParameter_clamp(functionvalue * this, double param_1, double param_2);
undefined JGadget__findUpperBound_binary_current(JGadget * this, TIterator_data_ param_1, TIterator_data_ param_2, TIterator_data_ param_3, double * param_4);
// undefined JGadget__findUpperBound_binary_current(JGadget * this, TIterator_data_ param_1, TIterator_data_ param_2, TIterator_data_ param_3, double * param_4, less__double__ param_5);
// undefined JGadget__findUpperBound_binary_current(JGadget * this, TIterator_data_ param_1, TIterator_data_ param_2, TIterator_data_ param_3, double * param_4);
// undefined JGadget__findUpperBound_binary_current(JGadget * this, TIterator_data_ param_1, TIterator_data_ param_2, TIterator_data_ param_3, double * param_4, less__double__ param_5);
void JStudio__TFunctionValue_hermite__TFunctionValue_hermite_destructor(TFunctionValue_hermite * this);
void JStudio__TFunctionValue_list_parameter__TFunctionValue_list_parameter_destructor(TFunctionValue_list_parameter * this);
void JStudio__TFunctionValue_list__TFunctionValue_list_destructor(TFunctionValue_list * this);
void JStudio__TFunctionValue_transition__TFunctionValue_transition_destructor(TFunctionValue_transition * this);
void JStudio__TFunctionValue_constant__TFunctionValue_constant_destructor(TFunctionValue_constant * this);
void JStudio__TFunctionValue_composite__TFunctionValue_composite_destructor(TFunctionValue_composite * this);
undefined std__upper_bound(std * this, TIterator_data_ param_1, TIterator_data_ param_2, double * param_3, less__double__ param_4);
// undefined std__upper_bound(std * this, TIterator_data_ param_1, TIterator_data_ param_2, double * param_3, less__double__ param_4);
void JStudio__fvb__TObject__TObject_destructor(TObject * this);
undefined JStudio__fvb__TObject__prepare(TObject * this, TParse_TBlock * param_1, TControl * param_2);
undefined JStudio__fvb___unnamed_fvb_cpp___getCompositeData_raw_(_unnamed_fvb_cpp_ * this, void * param_1);
undefined JStudio__fvb___unnamed_fvb_cpp___getCompositeData_index_(_unnamed_fvb_cpp_ * this, void * param_1);
undefined JStudio__fvb___unnamed_fvb_cpp___getCompositeData_parameter_(_unnamed_fvb_cpp_ * this, void * param_1);
undefined JStudio__fvb___unnamed_fvb_cpp___getCompositeData_add_(_unnamed_fvb_cpp_ * this, void * param_1);
undefined JStudio__fvb___unnamed_fvb_cpp___getCompositeData_subtract_(_unnamed_fvb_cpp_ * this, void * param_1);
undefined JStudio__fvb___unnamed_fvb_cpp___getCompositeData_multiply_(_unnamed_fvb_cpp_ * this, void * param_1);
undefined JStudio__fvb___unnamed_fvb_cpp___getCompositeData_divide_(_unnamed_fvb_cpp_ * this, void * param_1);
undefined JStudio__fvb___unnamed_fvb_cpp___getCompositeOperation_(_unnamed_fvb_cpp_ * this, TEComposite param_1);
void JStudio__fvb__TObject_composite__TObject_composite(TObject_composite * this, TParse_TBlock * param_1);
undefined JStudio__fvb__TObject_composite__prepare_data_(TObject_composite * this, TData * param_1, TControl * param_2);
void JStudio__fvb__TObject_constant__TObject_constant(TObject_constant * this, TParse_TBlock * param_1);
undefined JStudio__fvb__TObject_constant__prepare_data_(TObject_constant * this, TData * param_1, TControl * param_2);
void JStudio__fvb__TObject_transition__TObject_transition(TObject_transition * this, TParse_TBlock * param_1);
undefined JStudio__fvb__TObject_transition__prepare_data_(TObject_transition * this, TData * param_1, TControl * param_2);
void JStudio__fvb__TObject_list__TObject_list(TObject_list * this, TParse_TBlock * param_1);
undefined JStudio__fvb__TObject_list__prepare_data_(TObject_list * this, TData * param_1, TControl * param_2);
void JStudio__fvb__TObject_list_parameter__TObject_list_parameter(TObject_list_parameter * this, TParse_TBlock * param_1);
undefined JStudio__fvb__TObject_list_parameter__prepare_data_(TObject_list_parameter * this, TData * param_1, TControl * param_2);
void JStudio__fvb__TObject_hermite__TObject_hermite(TObject_hermite * this, TParse_TBlock * param_1);
undefined JStudio__fvb__TObject_hermite__prepare_data_(TObject_hermite * this, TData * param_1, TControl * param_2);
void JStudio__fvb__TControl__TControl(TControl * this);
void JStudio__fvb__TControl__TControl_destructor(TControl * this);
undefined JStudio__fvb__TControl__appendObject(TControl * this, TObject * param_1);
undefined JStudio__fvb__TControl__removeObject(TControl * this, TObject * param_1);
undefined JStudio__fvb__TControl__destroyObject(TControl * this, TObject * param_1);
undefined JStudio__fvb__TControl__destroyObject_all(TControl * this);
undefined JStudio__fvb__TControl__getObject(TControl * this, void * param_1, ulong param_2);
undefined JStudio__fvb__TControl__getObject_index(TControl * this, ulong param_1);
void JStudio__fvb__TFactory__TFactory_destructor(TFactory * this);
undefined JStudio__fvb__TFactory__create(TFactory * this, TParse_TBlock * param_1);
undefined JStudio__fvb__TFactory__destroy(TFactory * this, TObject * param_1);
void JStudio__fvb__TParse__TParse(TParse * this, TControl * param_1);
void JStudio__fvb__TParse__TParse_destructor(TParse * this);
undefined JStudio__fvb__TParse__parseHeader_next(TParse * this, void * * param_1, ulong * param_2, ulong param_3);
undefined JStudio__fvb__TParse__parseBlock_next(TParse * this, void * * param_1, ulong * param_2, ulong param_3);
void JStudio__fvb__TObject_hermite__TObject_hermite_destructor(TObject_hermite * this);
void JStudio__fvb__TObject_list_parameter__TObject_list_parameter_destructor(TObject_list_parameter * this);
void JStudio__fvb__TObject_list__TObject_list_destructor(TObject_list * this);
void JStudio__fvb__TObject_transition__TObject_transition_destructor(TObject_transition * this);
void JStudio__fvb__TObject_constant__TObject_constant_destructor(TObject_constant * this);
void JStudio__fvb__TObject_composite__TObject_composite_destructor(TObject_composite * this);
undefined std__find_if(std * this, iterator param_1, iterator param_2, TPRObject_ID_equal param_3);
undefined JStudio__fvb__data__TParse_TParagraph__getData(TParse_TParagraph * this, TData * param_1);
undefined JStudio__object__TIDData__isEqual(TIDData * this, TIDData * param_1, TIDData * param_2);
void JStudio__stb__TObject__TObject(TObject * this, ulong param_1, void * param_2, ulong param_3);
// void JStudio__stb__TObject__TObject(TObject * this, TParse_TBlock_object * param_1);
void JStudio__stb__TObject__TObject_destructor(TObject * this);
undefined JStudio__stb__TObject__setFlag_operation(TObject * this, uchar param_1, int param_2);
undefined JStudio__stb__TObject__reset(TObject * this, void * param_1);
undefined JStudio__stb__TObject__forward(TObject * this, ulong param_1);
undefined JStudio__stb__TObject__do_begin(TObject * this);
undefined JStudio__stb__TObject__do_end(TObject * this);
undefined JStudio__stb__TObject__do_paragraph(TObject * this, ulong param_1, void * param_2, ulong param_3);
undefined JStudio__stb__TObject__do_wait(TObject * this, ulong param_1);
undefined JStudio__stb__TObject__do_data(TObject * this, void * param_1, ulong param_2, void * param_3, ulong param_4);
undefined JStudio__stb__TObject__process_sequence_(TObject * this);
undefined JStudio__stb__TObject__process_paragraph_reserved_(TObject * this, ulong param_1, void * param_2, ulong param_3);
void JStudio__stb__TObject_control__TObject_control(TObject_control * this, void * param_1, ulong param_2);
void JStudio__stb__TControl__TControl(TControl * this);
void JStudio__stb__TObject_control__TObject_control_destructor(TObject_control * this);
void JStudio__stb__TControl__TControl_destructor(TControl * this);
undefined JStudio__stb__TControl__appendObject(TControl * this, TObject * param_1);
undefined JStudio__stb__TControl__removeObject(TControl * this, TObject * param_1);
undefined JStudio__stb__TControl__destroyObject(TControl * this, TObject * param_1);
undefined JStudio__stb__TControl__destroyObject_all(TControl * this);
undefined JStudio__stb__TControl__getObject(TControl * this, void * param_1, ulong param_2);
undefined JStudio__stb__TControl__forward(TControl * this, ulong param_1);
void JStudio__stb__TFactory__TFactory_destructor(TFactory * this);
undefined JStudio__stb__TFactory__create(TFactory * this, TParse_TBlock_object * param_1);
undefined JStudio__stb__TFactory__destroy(TFactory * this, TObject * param_1);
void JStudio__stb__TParse__TParse(TParse * this, TControl * param_1);
void JStudio__stb__TParse__TParse_destructor(TParse * this);
undefined JStudio__stb__TParse__parseHeader_next(TParse * this, void * * param_1, ulong * param_2, ulong param_3);
undefined JStudio__stb__TParse__parseBlock_next(TParse * this, void * * param_1, ulong * param_2, ulong param_3);
undefined JStudio__stb__TParse__parseHeader(TParse * this, TParse_THeader * param_1, ulong param_2);
undefined JStudio__stb__TParse__parseBlock_block(TParse * this, TParse_TBlock * param_1, ulong param_2);
undefined JStudio__stb__TParse__parseBlock_object(TParse * this, TParse_TBlock_object * param_1, ulong param_2);
// undefined std__find_if(std * this, iterator param_1, iterator param_2, TPRObject_ID_equal param_3);
undefined JStudio__stb__data__TParse_TSequence__getData(TParse_TSequence * this, TData * param_1);
undefined JStudio__stb__data__TParse_TParagraph__getData(TParse_TParagraph * this, TData * param_1);
undefined JStudio__stb__data__TParse_TParagraph_data__getData(TParse_TParagraph_data * this, TData * param_1);
void JStudio_JStage__TCreateObject__TCreateObject_destructor(TCreateObject * this);
undefined JStudio_JStage__TCreateObject__create(TCreateObject * this, TObject * * param_1, TParse_TBlock_object * param_2);
undefined JStudio_JStage__TCreateObject__find(TCreateObject * this, TParse_TBlock_object * param_1, TEObject param_2);
undefined JStudio_JStage___unnamed_control_cpp___createObject_JSG_(_unnamed_control_cpp_ * this, TParse_TBlock_object * param_1, TObject * param_2, TSystem * param_3);
// undefined JStudio_JStage___unnamed_control_cpp___createObject_JSG_(_unnamed_control_cpp_ * this, TParse_TBlock_object * param_1, TObject * param_2, TSystem * param_3);
// undefined JStudio_JStage___unnamed_control_cpp___createObject_JSG_(_unnamed_control_cpp_ * this, TParse_TBlock_object * param_1, TObject * param_2, TSystem * param_3);
// undefined JStudio_JStage___unnamed_control_cpp___createObject_JSG_(_unnamed_control_cpp_ * this, TParse_TBlock_object * param_1, TObject * param_2, TSystem * param_3);
// undefined JStudio_JStage___unnamed_control_cpp___createObject_JSG_(_unnamed_control_cpp_ * this, TParse_TBlock_object * param_1, TObject * param_2, TSystem * param_3);
undefined JStudio_JStage__TAdaptor_object___adaptor_data_(TAdaptor_object_ * this, TObject * param_1, void * param_2, ulong param_3, void * param_4, ulong param_5);
undefined JStudio_JStage__TAdaptor_object___adaptor_ENABLE_(TAdaptor_object_ * this, TObject * param_1, TEOperationData param_2, void * param_3, ulong param_4);
void JStudio_JStage__TAdaptor_actor__TAdaptor_actor(TAdaptor_actor * this, TSystem * param_1, TActor * param_2);
void JStudio_JStage__TAdaptor_actor__TAdaptor_actor_destructor(TAdaptor_actor * this);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_prepare(TAdaptor_actor * this, TObject * param_1);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_begin(TAdaptor_actor * this, TObject * param_1);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_end(TAdaptor_actor * this, TObject * param_1);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_update(TAdaptor_actor * this, TObject * param_1, ulong param_2);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_data(TAdaptor_actor * this, TObject * param_1, void * param_2, ulong param_3, void * param_4, ulong param_5);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_SHAPE(TAdaptor_actor * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_ANIMATION(TAdaptor_actor * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_ANIMATION_MODE(TAdaptor_actor * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_TEXTURE_ANIMATION(TAdaptor_actor * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_TEXTURE_ANIMATION_MODE(TAdaptor_actor * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_PARENT(TAdaptor_actor * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_PARENT_NODE(TAdaptor_actor * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_PARENT_ENABLE(TAdaptor_actor * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_RELATION(TAdaptor_actor * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_RELATION_NODE(TAdaptor_actor * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage__TAdaptor_actor__adaptor_do_RELATION_ENABLE(TAdaptor_actor * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage__setJSG_ID___Q214JStudio_JStage14TAdaptor_actorFMQ26JStage6TActorFPCvPvUl_vQ37JStudio4data15TEOperationDataPCvUl();
undefined JStudio_JStage__TAdaptor_actor__TVVOutput_ANIMATION_FRAME___operator_parentheses(TVVOutput_ANIMATION_FRAME_ * this, float param_1, TAdaptor * param_2);
void JStudio_JStage__TAdaptor_actor__TVVOutput_ANIMATION_FRAME___TVVOutput_ANIMATION_FRAME__destructor(TVVOutput_ANIMATION_FRAME_ * this);
undefined JStudio_JStage____sinit_object_actor_cpp();
void JStudio__TVariableValue__TVariableValue(TVariableValue * this);
undefined JStudio_JStage__TVariableValueOutput_object___JStudio_JStage__TAdaptor_actor_JStage__TActor____TVariableValueOutput_object__destructor(TVariableValueOutput_object___JStudio_JStage__TAdaptor_actor_JStage__TActor__ * this);
undefined JStudio_JStage__TVariableValueOutput_object___JStudio_JStage__TAdaptor_actor_JStage__TActor____operator_parentheses(TVariableValueOutput_object___JStudio_JStage__TAdaptor_actor_JStage__TActor__ * this, float param_1, TAdaptor * param_2);
void JStudio_JStage__TAdaptor_ambientLight__TAdaptor_ambientLight(TAdaptor_ambientLight * this, TSystem * param_1, TAmbientLight * param_2);
void JStudio_JStage__TAdaptor_ambientLight__TAdaptor_ambientLight_destructor(TAdaptor_ambientLight * this);
undefined JStudio_JStage__TAdaptor_ambientLight__adaptor_do_prepare(TAdaptor_ambientLight * this, TObject * param_1);
undefined JStudio_JStage__TAdaptor_ambientLight__adaptor_do_begin(TAdaptor_ambientLight * this, TObject * param_1);
undefined JStudio_JStage__TAdaptor_ambientLight__adaptor_do_end(TAdaptor_ambientLight * this, TObject * param_1);
undefined JStudio_JStage__TAdaptor_ambientLight__adaptor_do_update(TAdaptor_ambientLight * this, TObject * param_1, ulong param_2);
undefined JStudio_JStage__TAdaptor_ambientLight__adaptor_do_data(TAdaptor_ambientLight * this, TObject * param_1, void * param_2, ulong param_3, void * param_4, ulong param_5);
void JStudio_JStage__TAdaptor_camera__TAdaptor_camera(TAdaptor_camera * this, TSystem * param_1, TCamera * param_2);
void JStudio_JStage__TAdaptor_camera__TAdaptor_camera_destructor(TAdaptor_camera * this);
undefined JStudio_JStage__TAdaptor_camera__adaptor_do_prepare(TAdaptor_camera * this, TObject * param_1);
undefined JStudio_JStage__TAdaptor_camera__adaptor_do_begin(TAdaptor_camera * this, TObject * param_1);
undefined JStudio_JStage__TAdaptor_camera__adaptor_do_end(TAdaptor_camera * this, TObject * param_1);
undefined JStudio_JStage__TAdaptor_camera__adaptor_do_update(TAdaptor_camera * this, TObject * param_1, ulong param_2);
undefined JStudio_JStage__TAdaptor_camera__adaptor_do_data(TAdaptor_camera * this, TObject * param_1, void * param_2, ulong param_3, void * param_4, ulong param_5);
undefined JStudio_JStage__TAdaptor_camera__adaptor_do_PARENT(TAdaptor_camera * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage__TAdaptor_camera__adaptor_do_PARENT_NODE(TAdaptor_camera * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage__TAdaptor_camera__adaptor_do_PARENT_ENABLE(TAdaptor_camera * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage____sinit_object_camera_cpp();
undefined JStudio_JStage__TVariableValueOutput_object___JStudio_JStage__TAdaptor_camera_JStage__TCamera____TVariableValueOutput_object__destructor(TVariableValueOutput_object___JStudio_JStage__TAdaptor_camera_JStage__TCamera__ * this);
undefined JStudio_JStage__TVariableValueOutput_object___JStudio_JStage__TAdaptor_camera_JStage__TCamera____operator_parentheses(TVariableValueOutput_object___JStudio_JStage__TAdaptor_camera_JStage__TCamera__ * this, float param_1, TAdaptor * param_2);
void JStudio_JStage__TAdaptor_fog__TAdaptor_fog(TAdaptor_fog * this, TSystem * param_1, TFog * param_2);
void JStudio_JStage__TAdaptor_fog__TAdaptor_fog_destructor(TAdaptor_fog * this);
undefined JStudio_JStage__TAdaptor_fog__adaptor_do_prepare(TAdaptor_fog * this, TObject * param_1);
undefined JStudio_JStage__TAdaptor_fog__adaptor_do_begin(TAdaptor_fog * this, TObject * param_1);
undefined JStudio_JStage__TAdaptor_fog__adaptor_do_end(TAdaptor_fog * this, TObject * param_1);
undefined JStudio_JStage__TAdaptor_fog__adaptor_do_update(TAdaptor_fog * this, TObject * param_1, ulong param_2);
undefined JStudio_JStage__TAdaptor_fog__adaptor_do_data(TAdaptor_fog * this, TObject * param_1, void * param_2, ulong param_3, void * param_4, ulong param_5);
undefined JStudio_JStage____sinit_object_fog_cpp();
undefined JStudio_JStage__TVariableValueOutput_object___JStudio_JStage__TAdaptor_fog_JStage__TFog____TVariableValueOutput_object__destructor(TVariableValueOutput_object___JStudio_JStage__TAdaptor_fog_JStage__TFog__ * this);
undefined JStudio_JStage__TVariableValueOutput_object___JStudio_JStage__TAdaptor_fog_JStage__TFog____operator_parentheses(TVariableValueOutput_object___JStudio_JStage__TAdaptor_fog_JStage__TFog__ * this, float param_1, TAdaptor * param_2);
void JStudio_JStage__TAdaptor_light__TAdaptor_light(TAdaptor_light * this, TSystem * param_1, TLight * param_2);
void JStudio_JStage__TAdaptor_light__TAdaptor_light_destructor(TAdaptor_light * this);
undefined JStudio_JStage__TAdaptor_light__adaptor_do_prepare(TAdaptor_light * this, TObject * param_1);
undefined JStudio_JStage__TAdaptor_light__adaptor_do_begin(TAdaptor_light * this, TObject * param_1);
undefined JStudio_JStage__TAdaptor_light__adaptor_do_end(TAdaptor_light * this, TObject * param_1);
undefined JStudio_JStage__TAdaptor_light__adaptor_do_update(TAdaptor_light * this, TObject * param_1, ulong param_2);
undefined JStudio_JStage__TAdaptor_light__adaptor_do_data(TAdaptor_light * this, TObject * param_1, void * param_2, ulong param_3, void * param_4, ulong param_5);
undefined JStudio_JStage__TAdaptor_light__adaptor_do_FACULTY(TAdaptor_light * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage__TAdaptor_light__adaptor_do_ENABLE(TAdaptor_light * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JStage__TAdaptor_light__TVVOutput_direction___operator_parentheses(TVVOutput_direction_ * this, float param_1, TAdaptor * param_2);
void JStudio_JStage__TAdaptor_light__TVVOutput_direction___TVVOutput_direction__destructor(TVVOutput_direction_ * this);
undefined JStudio_JStage____sinit_object_light_cpp();
undefined JStudio_JAudio___unnamed_control_cpp___createObject_SOUND_JAI_(_unnamed_control_cpp_ * this, TParse_TBlock_object * param_1, JAIBasic * param_2);
void JStudio_JAudio__TCreateObject__TCreateObject_destructor(TCreateObject * this);
undefined JStudio_JAudio__TCreateObject__create(TCreateObject * this, TObject * * param_1, TParse_TBlock_object * param_2);
void JStudio_JAudio__TAdaptor_sound__TAdaptor_sound(TAdaptor_sound * this, JAIBasic * param_1);
void JStudio_JAudio__TAdaptor_sound__TAdaptor_sound_destructor(TAdaptor_sound * this);
undefined JStudio_JAudio__TAdaptor_sound__adaptor_do_prepare(TAdaptor_sound * this, TObject * param_1);
undefined JStudio_JAudio__TAdaptor_sound__adaptor_do_update(TAdaptor_sound * this, TObject * param_1, ulong param_2);
undefined JStudio_JAudio__TAdaptor_sound__adaptor_do_SOUND(TAdaptor_sound * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JAudio__TAdaptor_sound__adaptor_do_LOCATED(TAdaptor_sound * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JAudio__TAdaptor_sound__TVVOOn_BEGIN_FADE_IN___operator_parentheses(TVVOOn_BEGIN_FADE_IN_ * this, float param_1, TAdaptor * param_2);
undefined JStudio_JAudio__TAdaptor_sound__TVVOOn_END_FADE_OUT___operator_parentheses(TVVOOn_END_FADE_OUT_ * this, float param_1, TAdaptor * param_2);
undefined JStudio_JAudio__TAdaptor_sound__TVVOSetValue___operator_parentheses(TVVOSetValue_ * this, float param_1, TAdaptor * param_2);
undefined JAISound__setDemoFxmix(JAISound * this, float param_1, ulong param_2);
undefined JAISound__setDemoPitch(JAISound * this, float param_1, ulong param_2);
undefined JAISound__setDemoPan(JAISound * this, float param_1, ulong param_2);
undefined JAISound__setDemoVolume(JAISound * this, float param_1, ulong param_2);
void JStudio_JAudio__TAdaptor_sound__TVVOSetValue___TVVOSetValue__destructor(TVVOSetValue_ * this);
void JStudio_JAudio__TAdaptor_sound__TVVOOn_END_FADE_OUT___TVVOOn_END_FADE_OUT__destructor(TVVOOn_END_FADE_OUT_ * this);
void JStudio_JAudio__TAdaptor_sound__TVVOOn_BEGIN_FADE_IN___TVVOOn_BEGIN_FADE_IN__destructor(TVVOOn_BEGIN_FADE_IN_ * this);
undefined JStudio_JAudio____sinit_object_sound_cpp();
undefined JStudio_JParticle___unnamed_control_cpp___createObject_PARTICLE_JPA_(_unnamed_control_cpp_ * this, TParse_TBlock_object * param_1, JPAEmitterManager * param_2, TSystem * param_3);
void JStudio_JParticle__TCreateObject__TCreateObject_destructor(TCreateObject * this);
undefined JStudio_JParticle__TCreateObject__create(TCreateObject * this, TObject * * param_1, TParse_TBlock_object * param_2);
void JStudio_JParticle__TAdaptor_particle__TAdaptor_particle(TAdaptor_particle * this, JPAEmitterManager * param_1, TSystem * param_2);
void JStudio_JParticle__TAdaptor_particle__TJPACallback___TJPACallback__destructor(TJPACallback_ * this);
void JStudio_JParticle__TAdaptor_particle__TAdaptor_particle_destructor(TAdaptor_particle * this);
undefined JStudio_JParticle__TAdaptor_particle__adaptor_do_prepare(TAdaptor_particle * this, TObject * param_1);
undefined JStudio_JParticle__TAdaptor_particle__adaptor_do_end(TAdaptor_particle * this, TObject * param_1);
undefined JStudio_JParticle__TAdaptor_particle__adaptor_do_update(TAdaptor_particle * this, TObject * param_1, ulong param_2);
undefined JStudio_JParticle__TAdaptor_particle__adaptor_do_PARTICLE(TAdaptor_particle * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JParticle__TAdaptor_particle__adaptor_do_PARENT(TAdaptor_particle * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JParticle__TAdaptor_particle__adaptor_do_PARENT_NODE(TAdaptor_particle * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JParticle__TAdaptor_particle__adaptor_do_PARENT_ENABLE(TAdaptor_particle * this, TEOperationData param_1, void * param_2, ulong param_3);
undefined JStudio_JParticle__TAdaptor_particle__TVVOOn_BEGIN_FADE_IN___operator_parentheses(TVVOOn_BEGIN_FADE_IN_ * this, float param_1, TAdaptor * param_2);
undefined JStudio_JParticle__TAdaptor_particle__TVVOOn_END_FADE_OUT___operator_parentheses(TVVOOn_END_FADE_OUT_ * this, float param_1, TAdaptor * param_2);
undefined JStudio_JParticle__TAdaptor_particle__TJPACallback___execute(TJPACallback_ * this, JPABaseEmitter * param_1);
void JStudio_JParticle__TAdaptor_particle__TVVOOn_END_FADE_OUT___TVVOOn_END_FADE_OUT__destructor(TVVOOn_END_FADE_OUT_ * this);
void JStudio_JParticle__TAdaptor_particle__TVVOOn_BEGIN_FADE_IN___TVVOOn_BEGIN_FADE_IN__destructor(TVVOOn_BEGIN_FADE_IN_ * this);
undefined JStudio_JParticle____sinit_object_particle_cpp();
undefined JStudio_JMessage___unnamed_control_cpp___createObject_MESSAGE_JMS_(_unnamed_control_cpp_ * this, TParse_TBlock_object * param_1, TControl * param_2);
void JStudio_JMessage__TCreateObject_base__TCreateObject_base_destructor(TCreateObject_base * this);
undefined JStudio_JMessage__TCreateObject_base__create(TCreateObject_base * this, TObject * * param_1, TParse_TBlock_object * param_2);
void JStudio_JMessage__TCreateObject__TCreateObject_destructor(TCreateObject * this);
undefined JStudio_JMessage__TCreateObject__find(TCreateObject * this, TParse_TBlock_object * param_1);
void JStudio_JMessage__TAdaptor_message__TAdaptor_message(TAdaptor_message * this, TControl * param_1);
void JStudio_JMessage__TAdaptor_message__TAdaptor_message_destructor(TAdaptor_message * this);
undefined JStudio_JMessage__TAdaptor_message__adaptor_do_MESSAGE(TAdaptor_message * this, TEOperationData param_1, void * param_2, ulong param_3);
void JSUMemoryInputStream__JSUMemoryInputStream_destructor(JSUMemoryInputStream * this);
void JSURandomInputStream__JSURandomInputStream_destructor(JSURandomInputStream * this);
void JSUIosBase__JSUIosBase_destructor(JSUIosBase * this);
undefined JASystem__Calc__initSinfT(Calc * this);
undefined JASystem__Calc__sinfT(Calc * this, float param_1);
undefined JASystem__Calc__sinfDolby2(Calc * this, float param_1);
undefined JASystem__Calc__imixcopy(Calc * this, short * param_1, short * param_2, short * param_3, long param_4);
undefined JASystem__Calc__bcopyfast(Calc * this, ulong * param_1, ulong * param_2, ulong param_3);
void JASystem__Calc__bcopy(Calc * this, void * __src, void * __dest, size_t __n);
undefined JASystem__Calc__bzerofast(Calc * this, void * param_1, ulong param_2);
void JASystem__Calc__bzero(Calc * this, void * __s, size_t __n);
int JASystem__Kernel__init(Kernel * this, EVP_PKEY_CTX * ctx);
undefined JASystem__Kernel__initSystem(Kernel * this);
void JASystem__Kernel__registerMixCallback(void * param_1, uchar param_2);
undefined JASystem__Kernel__vframeWork(Kernel * this);
undefined JASystem__Kernel__updateDac(Kernel * this);
undefined JASystem__Kernel__mixMonoTrack(short * param_1, long param_2, void * param_3);
undefined JASystem__Kernel__mixMonoTrackWide(short * param_1, long param_2, void * param_3);
undefined JASystem__Kernel__mixExtraTrack(short * param_1, long param_2, void * param_3);
undefined JASystem__Kernel__mixInterleaveTrack(short * param_1, long param_2, void * param_3);
void JASTaskThread__TCallStack__TCallStack(TCallStack * this, ulong param_1);
void JASTaskThread__TCallStack__TCallStack_destructor(TCallStack * this);
undefined JASTaskThread__sendCmdMsg(JASTaskThread * this, void * param_1, void * param_2, ulong param_3);
undefined JASTaskThread__run(JASTaskThread * this);
int JASTaskThread__pause(JASTaskThread * this);
undefined JASystem__Dvd__createThread(Dvd * this, int param_1, int param_2, ulong param_3);
undefined JASystem__Dvd__resumeThread(Dvd * this);
undefined JASystem__Dvd__sendCmdMsg(Dvd * this, void * param_1, void * param_2, ulong param_3);
undefined JASystem__Dvd__checkPassDvdT(Dvd * this, ulong param_1, ulong * param_2, void * param_3);
undefined JASystem__Dvd__checkFile(Dvd * this, char * param_1);
undefined JASystem__Dvd__unpauseDvdT(Dvd * this);
undefined JASystem__Dvd__dvdThreadCheckBack(Dvd * this, void * param_1);
void JASTaskThread__JASTaskThread_destructor(JASTaskThread * this);
undefined JASystem__Kernel__resetCallback(Kernel * this);
undefined JASystem__Kernel__checkCallback(Kernel * this, void * param_1, void * param_2);
undefined JASystem__Kernel__registerDspCallback(Kernel * this, void * param_1, void * param_2);
undefined JASystem__Kernel__registerSubFrameCallback(Kernel * this, void * param_1, void * param_2);
undefined JASystem__Kernel__aiCallback(Kernel * this);
undefined JASystem__Kernel__subframeCallback(Kernel * this);
undefined JASystem__HardStream__unregistBgmAll(HardStream * this);
undefined JASystem__HardStream__main(HardStream * this);
undefined JASystem__HardStream__firstBgmCallback(HardStream * this, long param_1, DVDFileInfo * param_2);
undefined JASystem__HardStream__secondBgmCallback(HardStream * this, long param_1, DVDFileInfo * param_2);
undefined JASystem__HardStream__getAddrCallback(HardStream * this, long param_1, DVDCommandBlock * param_2);
void JASystem__HardStream__TControl__TControl(TControl * this);
undefined JASystem__HardStream__TControl__getIntroNum(TControl * this);
undefined JASystem__HardStream__TControl__getLoopNum(TControl * this);
undefined JASystem__HardStream__TControl__fileOpen(TControl * this, ushort param_1, DVDFileInfo * param_2);
undefined JASystem__HardStream__TControl__clearListOne(TControl * this);
undefined JASystem__HardStream__TControl__setLastAddr(TControl * this, DVDFileInfo * param_1);
undefined JASystem__HardStream__TControl__getLastAddr(TControl * this);
undefined JASystem__HardStream__TControl__startFirst(TControl * this, ushort param_1, DVDFileInfo * param_2, ulong * param_3);
undefined JASystem__HardStream__TControl__startSecond(TControl * this, ushort param_1, DVDFileInfo * param_2, ulong * param_3);
undefined JASystem__HardStream__TControl__resetFader(TControl * this);
undefined JASystem__HardStream__TControl__getCurVol(TControl * this);
undefined JASystem__HardStream__TControl__calcCurVolume(TControl * this);
undefined JASystem__HardStream__TControl__volFloatToU8(TControl * this, float param_1);
undefined JAudio____sinit_JASHardStream_cpp();
void JASystem__HardStream__TControl__TControl_destructor(TControl * this);
void JASystem__Kernel__THeap__THeap(THeap * this, TDisposer * param_1);
undefined JASystem__Kernel__THeap__initRootHeap(THeap * this, void * param_1, ulong param_2, Type param_3);
undefined JASystem__Kernel__THeap__alloc(THeap * this, THeap * param_1, ulong param_2);
void JASystem__Kernel__THeap__free(THeap * this, void * __ptr);
undefined JASystem__Kernel__THeap__insertChild(THeap * this, THeap * param_1, THeap * param_2, void * param_3, ulong param_4, bool param_5);
undefined JASystem__Kernel__THeap__getTailHeap(THeap * this);
undefined JASystem__Kernel__THeap__getTailOffset(THeap * this);
undefined JASystem__Kernel__THeap__getCurOffset(THeap * this);
void JASystem__Kernel__TSolidHeap__TSolidHeap(TSolidHeap * this);
undefined JASystem__Kernel__TSolidHeap__alloc(TSolidHeap * this, long param_1);
undefined JASystem__Kernel__TSolidHeap__freeAll(TSolidHeap * this);
int JASystem__Kernel__TSolidHeap__init(TSolidHeap * this, EVP_PKEY_CTX * ctx);
undefined JASystem__Kernel__TSolidHeap__getRemain(TSolidHeap * this);
undefined JASystem__Kernel__TDisposer__onDispose(TDisposer * this);
undefined JASystem__ResArcLoader__getResSize(ResArcLoader * this, JKRArchive * param_1, ushort param_2);
undefined JASystem__ResArcLoader__loadResourceCallback(ResArcLoader * this, void * param_1);
undefined JASystem__ResArcLoader__loadResource(ResArcLoader * this, JKRArchive * param_1, ushort param_2, uchar * param_3, ulong param_4);
undefined JASystem__ResArcLoader__loadResourceAsync(ResArcLoader * this, JKRArchive * param_1, ushort param_2, uchar * param_3, ulong param_4, void * param_5, ulong param_6);
undefined JASystem__Kernel__probeStart(Kernel * this, long param_1, char * param_2);
undefined JASystem__Kernel__probeFinish(Kernel * this, long param_1);
undefined JASystem__Kernel__stackInit(Kernel * this, long_long * param_1, ulong param_2);
void JASystem__Kernel__TPortCmd__TPortCmd(TPortCmd * this);
undefined JASystem__Kernel__TPortCmd__addPortCmdOnce(TPortCmd * this);
undefined JASystem__Kernel__TPortCmd__setPortCmd(TPortCmd * this, void * param_1, TPortArgs * param_2);
undefined JASystem__Kernel__TPortCmd__addPortCmd(TPortCmd * this, TPortHead * param_1);
undefined JASystem__Kernel__portCmdProcOnce(Kernel * this, TPortHead * param_1);
undefined JASystem__Kernel__portCmdProcStay(Kernel * this, TPortHead * param_1);
undefined JASystem__Kernel__portHeadInit(Kernel * this, TPortHead * param_1);
undefined JASystem__Kernel__portCmdInit(Kernel * this);
undefined JASystem__Kernel__getPortCmd(Kernel * this, TPortHead * param_1);
undefined JASystem__Kernel__portCmdMain(Kernel * this, void * param_1);
undefined JASystem__Kernel__sysDramSetup(Kernel * this, JKRSolidHeap * param_1);
undefined JASystem__Kernel__allocFromSysDram(Kernel * this, ulong param_1);
undefined JASystem__Kernel__sysAramSetup(Kernel * this, ulong param_1);
undefined JASystem__Kernel__allocFromSysAramFull(Kernel * this, ulong * param_1);
undefined JAudio____sinit_JASSystemHeap_cpp();
void JASystem__Kernel__TSolidHeap__TSolidHeap_destructor(TSolidHeap * this);
int JASystem__TTrack__TNoteMgr__init(TNoteMgr * this, EVP_PKEY_CTX * ctx);
undefined JASystem__TTrack__TNoteMgr__endProcess(TNoteMgr * this);
undefined JASystem__TTrack__TNoteMgr__setChannel(TNoteMgr * this, int param_1, TChannel * param_2);
undefined JASystem__TTrack__TNoteMgr__releaseChannel(TNoteMgr * this, int param_1);
undefined JASystem__TTrack__TNoteMgr__getChannel(TNoteMgr * this, int param_1);
void JASystem__TTrack__TOuterParam__TOuterParam(TOuterParam * this);
undefined JASystem__TTrack__TOuterParam__initExtBuffer(TOuterParam * this);
undefined JASystem__TTrack__TOuterParam__setOuterSwitch(TOuterParam * this, ushort param_1);
undefined JASystem__TTrack__TOuterParam__checkOuterSwitch(TOuterParam * this, ushort param_1);
undefined JASystem__TTrack__TOuterParam__setOuterUpdate(TOuterParam * this, ushort param_1);
undefined JASystem__TTrack__TOuterParam__getOuterUpdate(TOuterParam * this);
undefined JASystem__TTrack__TOuterParam__getIntFirFilter(TOuterParam * this, uchar param_1);
undefined JASystem__TTrack__TOuterParam__setParam(TOuterParam * this, uchar param_1, float param_2);
undefined JASystem__TTrack__TOuterParam__onSwitch(TOuterParam * this, ushort param_1);
undefined JASystem__TTrack__TOuterParam__setFirFilter(TOuterParam * this, short * param_1);
undefined JASystem__Player__extend8to16(Player * this, uchar param_1);
undefined JASystem__Player__pitchToCent(Player * this, float param_1, float param_2);
undefined JASystem__Player__getRandomS32(Player * this);
void JASystem__TRegisterParam__TRegisterParam(TRegisterParam * this);
int JASystem__TRegisterParam__init(TRegisterParam * this, EVP_PKEY_CTX * ctx);
undefined JASystem__TRegisterParam__inherit(TRegisterParam * this, TRegisterParam * param_1);
undefined JASystem__TRegisterParam__getBankNumber(TRegisterParam * this);
undefined JASystem__TRegisterParam__getProgramNumber(TRegisterParam * this);
int JASystem__TSeqCtrl__init(TSeqCtrl * this, EVP_PKEY_CTX * ctx);
undefined JASystem__TSeqCtrl__start(TSeqCtrl * this, void * param_1, ulong param_2);
undefined JASystem__TSeqCtrl__loopEnd(TSeqCtrl * this);
undefined JASystem__TSeqCtrl__waitCountDown(TSeqCtrl * this);
undefined JASystem__TSeqCtrl__callIntr(TSeqCtrl * this, void * param_1);
undefined JASystem__TSeqCtrl__retIntr(TSeqCtrl * this);
undefined JASystem__TSeqCtrl__get16(TSeqCtrl * this, ulong param_1);
undefined JASystem__TSeqCtrl__get24(TSeqCtrl * this, ulong param_1);
undefined JASystem__TSeqCtrl__get32(TSeqCtrl * this, ulong param_1);
undefined JASystem__TSeqCtrl__read16(TSeqCtrl * this);
undefined JASystem__TSeqCtrl__read24(TSeqCtrl * this);
undefined JASystem__TSeqParser__cmdOpenTrack(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdOpenTrackBros(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdCall(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdRet(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdJmp(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdLoopS(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdLoopE(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdReadPort(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdWritePort(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdParentWritePort(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdChildWritePort(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdCheckPortImport(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdCheckPortExport(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdWait(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdSetLastNote(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdTimeRelate(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdSimpleOsc(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdSimpleEnv(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdSimpleADSR(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdTranspose(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdCloseTrack(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdOutSwitch(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdUpdateSync(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdBusConnect(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdPauseStatus(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdVolumeMode(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdSetInterrupt(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdDisInterrupt(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdClrI(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdSetI(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdRetI(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdIntTimer(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdSyncCPU(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdFlushAll(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdFlushRelease(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdTimeBase(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdTempo(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdFinish(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdNop(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdPanPowSet(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdFIRSet(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdEXTSet(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdPanSwSet(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdOscRoute(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdVibDepth(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdVibDepthMidi(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdVibPitch(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdIIRSet(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdIIRCutOff(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdOscFull(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdCheckWave(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__cmdPrintf(TSeqParser * this, TTrack * param_1, ulong * param_2);
undefined JASystem__TSeqParser__Cmd_Process(TSeqParser * this, TTrack * param_1, uchar param_2, ushort param_3);
undefined JASystem__TSeqParser__RegCmd_Process(TSeqParser * this, TTrack * param_1, int param_2, int param_3);
undefined JASystem__TSeqParser__cmdSetParam(TSeqParser * this, TTrack * param_1, uchar param_2);
// undefined JASystem__TSeqParser__cmdWait(TSeqParser * this, TTrack * param_1, uchar param_2);
undefined JASystem__TSeqParser__cmdNoteOff(TSeqParser * this, TTrack * param_1, uchar param_2);
undefined JASystem__TSeqParser__cmdNoteOn(TSeqParser * this, TTrack * param_1, uchar param_2);
undefined JASystem__TSeqParser__conditionCheck(TSeqParser * this, TTrack * param_1, uchar param_2);
undefined JASystem__TSeqParser__parseSeq(TSeqParser * this, TTrack * param_1);
undefined JAudio____sinit_JASSeqParser_cpp();
void JASystem__TTrack__TTrack(TTrack * this);
void JASystem__TTrack__TimedParam___TimedParam_(TimedParam_ * this);
int JASystem__TTrack__init(TTrack * this, EVP_PKEY_CTX * ctx);
undefined JASystem__TTrack__inherit(TTrack * this);
undefined JASystem__TTrack__mainProc(TTrack * this);
undefined JASystem__TTrack__setInterrupt(TTrack * this, ushort param_1);
undefined JASystem__TTrack__tryInterrupt(TTrack * this);
undefined JASystem__TTrack__assignExtBuffer(TTrack * this, TOuterParam * param_1);
undefined JASystem__TTrack__releaseChannelAll(TTrack * this);
undefined JASystem__TTrack__flushAll(TTrack * this);
undefined JASystem__TTrack__moveFreeChannel(TTrack * this, TChannelMgr * param_1, TChannelMgr * param_2, int param_3);
undefined JASystem__TTrack__initTimed(TTrack * this);
undefined JASystem__TTrack__connectBus(TTrack * this, int param_1, int param_2);
undefined JASystem__TTrack__noteOn(TTrack * this, uchar param_1, long param_2, long param_3, long param_4, ulong param_5);
undefined JASystem__TTrack__overwriteOsc(TTrack * this, TChannel * param_1);
undefined JASystem__TTrack__noteOff(TTrack * this, uchar param_1, ushort param_2);
undefined JASystem__TTrack__gateOn(TTrack * this, uchar param_1, long param_2, long param_3, long param_4);
undefined JASystem__TTrack__checkNoteStop(TTrack * this, long param_1);
undefined JASystem__TTrack__oscSetupFull(TTrack * this, uchar param_1, ulong param_2, ulong param_3);
undefined JASystem__TTrack__oscSetupSimpleEnv(TTrack * this, uchar param_1, ulong param_2);
undefined JASystem__TTrack__updateOscParam(TTrack * this, int param_1, float param_2);
undefined JASystem__TTrack__oscSetupSimple(TTrack * this, uchar param_1);
undefined JASystem__TTrack__updateTimedParam(TTrack * this);
undefined JASystem__TTrack__updateTrackAll(TTrack * this);
undefined JASystem__TTrack__updateTrack(TTrack * this, ulong param_1);
undefined JASystem__TTrack__updateTempo(TTrack * this);
undefined JASystem__TTrack__updateSeq(TTrack * this, ulong param_1, bool param_2);
undefined JASystem__TTrack__seqTimeToDspTime(TTrack * this, long param_1, uchar param_2);
undefined JASystem__TTrack__setParam(TTrack * this, int param_1, float param_2, int param_3);
undefined JASystem__TTrack__setSeqData(TTrack * this, uchar * param_1, long param_2, int param_3);
undefined JASystem__TTrack__startSeq(TTrack * this);
undefined JASystem__TTrack__stopSeq(TTrack * this);
undefined JASystem__TTrack__stopSeqMain(TTrack * this);
undefined JASystem__TTrack__noteOffAll(TTrack * this);
int JASystem__TTrack__close(TTrack * this, int __fd);
undefined JASystem__TTrack__muteTrack(TTrack * this, bool param_1);
undefined JASystem__TTrack__start(TTrack * this, void * param_1, ulong param_2);
undefined JASystem__TTrack__openChild(TTrack * this, uchar param_1, uchar param_2);
undefined JASystem__TTrack__loadTbl(TTrack * this, ulong param_1, ulong param_2, ulong param_3);
undefined JASystem__TTrack__exchangeRegisterValue(TTrack * this, uchar param_1);
undefined JASystem__TTrack__readReg32(TTrack * this, uchar param_1);
undefined JASystem__TTrack__readReg16(TTrack * this, uchar param_1);
undefined JASystem__TTrack__writeRegDirect(TTrack * this, uchar param_1, ushort param_2);
undefined JASystem__TTrack__writeRegParam(TTrack * this, uchar param_1);
undefined JASystem__TTrack__readSelfPort(TTrack * this, int param_1);
undefined JASystem__TTrack__writeSelfPort(TTrack * this, int param_1, ushort param_2);
undefined JASystem__TTrack__writePortAppDirect(TTrack * this, ulong param_1, ushort param_2);
undefined JASystem__TTrack__readPortAppDirect(TTrack * this, ulong param_1, ushort * param_2);
undefined JASystem__TTrack__routeTrack(TTrack * this, ulong param_1);
undefined JASystem__TTrack__writePortApp(TTrack * this, ulong param_1, ushort param_2);
undefined JASystem__TTrack__readPortApp(TTrack * this, ulong param_1, ushort * param_2);
int JASystem__TTrack__pause(TTrack * this);
undefined JASystem__TTrack__getTranspose(TTrack * this);
undefined JASystem__TTrack__setTempo(TTrack * this, ushort param_1);
undefined JASystem__TTrack__setTimebase(TTrack * this, ushort param_1);
undefined JASystem__TTrack__panCalc(TTrack * this, float param_1, float param_2, float param_3, uchar param_4);
undefined JASystem__TTrack__rootCallback(TTrack * this, void * param_1);
undefined JASystem__TTrack__registerSeqCallback(TTrack * this, void * param_1);
undefined JASystem__TTrack__newMemPool(TTrack * this, int param_1);
void JASystem__TVibrate__TVibrate(TVibrate * this);
int JASystem__TVibrate__init(TVibrate * this, EVP_PKEY_CTX * ctx);
undefined JASystem__TVibrate__incCounter(TVibrate * this);
undefined JASystem__TVibrate__getValue(TVibrate * this);
void JASystem__TTrack__MoveParam___MoveParam_(MoveParam_ * this);
void JASystem__TTrack__AInnerParam___AInnerParam_(AInnerParam_ * this);
int JASystem__TIntrMgr__init(TIntrMgr * this, EVP_PKEY_CTX * ctx);
undefined JASystem__TIntrMgr__request(TIntrMgr * this, ulong param_1);
undefined JASystem__TIntrMgr__setIntr(TIntrMgr * this, ulong param_1, void * param_2);
undefined JASystem__TIntrMgr__resetInter(TIntrMgr * this, ulong param_1);
undefined JASystem__TIntrMgr__checkIntr(TIntrMgr * this);
undefined JASystem__TIntrMgr__timerProcess(TIntrMgr * this);
int JASystem__TTrackPort__init(TTrackPort * this, EVP_PKEY_CTX * ctx);
undefined JASystem__TTrackPort__readImport(TTrackPort * this, int param_1);
undefined JASystem__TTrackPort__readExport(TTrackPort * this, int param_1);
undefined JASystem__TTrackPort__writeImport(TTrackPort * this, int param_1, ushort param_2);
undefined JASystem__TTrackPort__writeExport(TTrackPort * this, int param_1, ushort param_2);
undefined JASystem__TBank__getCurrentHeap(TBank * this);
undefined JASystem__TWaveBank__getCurrentHeap(TWaveBank * this);
void JASystem__TBasicBank__TBasicBank(TBasicBank * this);
void JASystem__TBasicBank__TBasicBank_destructor(TBasicBank * this);
undefined JASystem__TBasicBank__setInstCount(TBasicBank * this, ulong param_1);
undefined JASystem__TBasicBank__setInst(TBasicBank * this, int param_1, TInst * param_2);
undefined JASystem__TBasicBank__getInst(TBasicBank * this, int param_1);
void JASystem__TBank__TBank_destructor(TBank * this);
undefined JASystem__TBasicBank__getType(TBasicBank * this);
void JASystem__TBasicInst__TBasicInst(TBasicInst * this);
void JASystem__TBasicInst__TBasicInst_destructor(TBasicInst * this);
undefined JASystem__TBasicInst__getParam(TBasicInst * this, int param_1, int param_2, TInstParam * param_3);
undefined JASystem__TBasicInst__getKeymapIndex(TBasicInst * this, int param_1);
undefined JASystem__TBasicInst__setKeyRegionCount(TBasicInst * this, ulong param_1);
undefined JASystem__TBasicInst__setEffectCount(TBasicInst * this, ulong param_1);
undefined JASystem__TBasicInst__setEffect(TBasicInst * this, int param_1, TInstEffect * param_2);
undefined JASystem__TBasicInst__setOscCount(TBasicInst * this, ulong param_1);
undefined JASystem__TBasicInst__setOsc(TBasicInst * this, int param_1, Osc_ * param_2);
undefined JASystem__TBasicInst__getKeyRegion(TBasicInst * this, int param_1);
void JASystem__TBasicInst__TKeymap__TKeymap_destructor(TKeymap * this);
undefined JASystem__TBasicInst__TKeymap__setVeloRegionCount(TKeymap * this, ulong param_1);
undefined JASystem__TBasicInst__TKeymap__getVeloRegion(TKeymap * this, int param_1);
// undefined JASystem__TBasicInst__TKeymap__getVeloRegion(TKeymap * this, int param_1);
void JASystem__TInst__TInst_destructor(TInst * this);
void JASystem__TBasicInst__TKeymap__TKeymap(TKeymap * this);
undefined JASystem__TBasicInst__getType(TBasicInst * this);
undefined JASystem__TDrumSet__getParam(TDrumSet * this, int param_1, int param_2, TInstParam * param_3);
undefined JASystem__TDrumSet__getPerc(TDrumSet * this, int param_1);
void JASystem__TDrumSet__TPerc__TPerc(TPerc * this);
void JASystem__TDrumSet__TPerc__TPerc_destructor(TPerc * this);
undefined JASystem__TDrumSet__TPerc__setEffectCount(TPerc * this, ulong param_1);
undefined JASystem__TDrumSet__TPerc__setVeloRegionCount(TPerc * this, ulong param_1);
undefined JASystem__TDrumSet__TPerc__getVeloRegion(TPerc * this, int param_1);
undefined JASystem__TDrumSet__TPerc__setEffect(TPerc * this, int param_1, TInstEffect * param_2);
undefined JASystem__TDrumSet__TPerc__setRelease(TPerc * this, ulong param_1);
void JASystem__TDrumSet__TDrumSet_destructor(TDrumSet * this);
undefined JASystem__TDrumSet__getType(TDrumSet * this);
void JASystem__TBasicWaveBank__TBasicWaveBank(TBasicWaveBank * this);
void JASystem__TBasicWaveBank__TBasicWaveBank_destructor(TBasicWaveBank * this);
undefined JASystem__TBasicWaveBank__getWaveGroup(TBasicWaveBank * this, int param_1);
undefined JASystem__TBasicWaveBank__setGroupCount(TBasicWaveBank * this, ulong param_1);
undefined JASystem__TBasicWaveBank__setWaveTableSize(TBasicWaveBank * this, ulong param_1);
undefined JASystem__TBasicWaveBank__incWaveTable(TBasicWaveBank * this, TWaveGroup * param_1);
undefined JASystem__TBasicWaveBank__decWaveTable(TBasicWaveBank * this, TWaveGroup * param_1);
undefined JASystem__TBasicWaveBank__getWaveHandle(TBasicWaveBank * this, ulong param_1);
void JASystem__TBasicWaveBank__TWaveGroup__TWaveGroup(TWaveGroup * this, TBasicWaveBank * param_1);
void JASystem__TBasicWaveBank__TWaveGroup__TWaveGroup_destructor(TWaveGroup * this);
void JASystem__TBasicWaveBank__TWaveInfo__TWaveInfo_destructor(TWaveInfo * this);
undefined JASystem__TBasicWaveBank__TWaveGroup__setWaveCount(TWaveGroup * this, ulong param_1);
undefined JASystem__TBasicWaveBank__TWaveGroup__setWaveInfo(TWaveGroup * this, int param_1, ulong param_2, TWaveInfo * param_3);
undefined JASystem__TBasicWaveBank__TWaveGroup__onLoadDone(TWaveGroup * this);
undefined JASystem__TBasicWaveBank__TWaveGroup__onEraseDone(TWaveGroup * this);
undefined JASystem__TBasicWaveBank__TWaveGroup__getWaveID(TWaveGroup * this, int param_1);
void JASystem__TWaveBank__TWaveBank_destructor(TWaveBank * this);
void JASystem__TWaveHandle__TWaveHandle_destructor(TWaveHandle * this);
void JASystem__TBasicWaveBank__TWaveInfo__TWaveInfo(TWaveInfo * this);
void JASystem__TBasicWaveBank__TWaveHandle__TWaveHandle_destructor(TWaveHandle * this);
undefined JASystem__TBasicWaveBank__TWaveHandle__getWaveInfo(TWaveHandle * this);
undefined JASystem__TBasicWaveBank__TWaveHandle__getWavePtr(TWaveHandle * this);
undefined JASystem__TBasicWaveBank__getWaveArc(TBasicWaveBank * this, int param_1);
void JASystem__TSimpleWaveBank__TSimpleWaveBank(TSimpleWaveBank * this);
void JASystem__TSimpleWaveBank__TSimpleWaveBank_destructor(TSimpleWaveBank * this);
void JASystem__TSimpleWaveBank__TWaveHandle__TWaveHandle_destructor(TWaveHandle * this);
undefined JASystem__TSimpleWaveBank__setWaveTableSize(TSimpleWaveBank * this, ulong param_1);
undefined JASystem__TSimpleWaveBank__getWaveHandle(TSimpleWaveBank * this, ulong param_1);
undefined JASystem__TSimpleWaveBank__setWaveInfo(TSimpleWaveBank * this, ulong param_1, TWaveInfo * param_2);
undefined JASystem__TSimpleWaveBank__getWaveArc(TSimpleWaveBank * this, int param_1);
void JASystem__TSimpleWaveBank__TWaveHandle__TWaveHandle(TWaveHandle * this);
undefined JASystem__TSimpleWaveBank__TWaveHandle__getWaveInfo(TWaveHandle * this);
undefined JASystem__TSimpleWaveBank__TWaveHandle__getWavePtr(TWaveHandle * this);
undefined JASystem__TWaveArc__onLoadDone(TWaveArc * this);
undefined JASystem__TWaveArc__onEraseDone(TWaveArc * this);
undefined JASystem__TInstEffect__setTarget(TInstEffect * this, int param_1);
undefined JASystem__TInstSense__getY(TInstSense * this, int param_1, int param_2);
undefined JASystem__TInstSense__setParams(TInstSense * this, int param_1, int param_2, float param_3, float param_4);
undefined JASystem__TInstRand__getY(TInstRand * this, int param_1, int param_2);
undefined JASystem__WSParser__getGroupCount(WSParser * this, void * param_1);
undefined JASystem__WSParser__createBasicWaveBank(WSParser * this, void * param_1);
undefined JASystem__WSParser__createSimpleWaveBank(WSParser * this, void * param_1);
undefined JAudio__JSUConvertOffsetToPtr();
// undefined JAudio__JSUConvertOffsetToPtr();
// undefined JAudio__JSUConvertOffsetToPtr();
// undefined JAudio__JSUConvertOffsetToPtr();
// undefined JAudio__JSUConvertOffsetToPtr();
// undefined JAudio__JSUConvertOffsetToPtr();
// undefined JAudio__JSUConvertOffsetToPtr();
undefined JASystem__BNKParser__createBasicBank(BNKParser * this, void * param_1);
undefined JASystem__BNKParser__findOscPtr(BNKParser * this, TBasicBank * param_1, THeader * param_2, TOsc * param_3);
undefined JASystem__BNKParser__getOscTableEndPtr(BNKParser * this, short * param_1);
// undefined JAudio__JSUConvertOffsetToPtr();
// undefined JAudio__JSUConvertOffsetToPtr();
// undefined JAudio__JSUConvertOffsetToPtr();
// undefined JAudio__JSUConvertOffsetToPtr();
// undefined JAudio__JSUConvertOffsetToPtr();
// undefined JAudio__JSUConvertOffsetToPtr();
// undefined JAudio__JSUConvertOffsetToPtr();
// undefined JAudio__JSUConvertOffsetToPtr();
// undefined JAudio__JSUConvertOffsetToPtr();
int JASystem__WaveArcLoader__init(WaveArcLoader * this, EVP_PKEY_CTX * ctx);
undefined JASystem__WaveArcLoader__getRootHeap(WaveArcLoader * this);
undefined JASystem__WaveArcLoader__setCurrentDir(WaveArcLoader * this, char * param_1);
undefined JASystem__WaveArcLoader__getCurrentDir(WaveArcLoader * this);
void JASystem__TWaveArc__TWaveArc(TWaveArc * this);
undefined JASystem__TWaveArc__loadSetup(TWaveArc * this, ulong param_1);
undefined JASystem__TWaveArc__eraseSetup(TWaveArc * this);
undefined JASystem__TWaveArc__loadToAramCallback(TWaveArc * this, void * param_1);
undefined JASystem__TWaveArc__sendLoadCmd(TWaveArc * this);
undefined JASystem__TWaveArc__load(TWaveArc * this, THeap * param_1);
undefined JASystem__TWaveArc__erase(TWaveArc * this);
undefined JASystem__TWaveArc__onDispose(TWaveArc * this);
undefined JASystem__TWaveArc__setEntryNum(TWaveArc * this, long param_1);
undefined JASystem__TWaveArc__setFileName(TWaveArc * this, char * param_1);
void JASystem__Kernel__THeap__THeap_destructor(THeap * this);
undefined JAudio____sinit_JASWaveArcLoader_cpp();
int JASystem__WaveBankMgr__init(WaveBankMgr * this, EVP_PKEY_CTX * ctx);
undefined JASystem__WaveBankMgr__getWaveBank(WaveBankMgr * this, int param_1);
undefined JASystem__WaveBankMgr__registWaveBank(WaveBankMgr * this, int param_1, TWaveBank * param_2);
undefined JASystem__WaveBankMgr__registWaveBankWS(WaveBankMgr * this, int param_1, void * param_2);
undefined JASystem__WaveBankMgr__getWaveArc(WaveBankMgr * this, int param_1, int param_2);
undefined JASystem__WaveBankMgr__loadWave(WaveBankMgr * this, int param_1, int param_2, THeap * param_3);
undefined JASystem__WaveBankMgr__eraseWave(WaveBankMgr * this, int param_1, int param_2);
int JASystem__BankMgr__init(BankMgr * this, EVP_PKEY_CTX * ctx);
undefined JASystem__BankMgr__registBank(BankMgr * this, int param_1, TBank * param_2);
undefined JASystem__BankMgr__registBankBNK(BankMgr * this, int param_1, void * param_2);
undefined JASystem__BankMgr__getBank(BankMgr * this, int param_1);
undefined JASystem__BankMgr__getPhysicalNumber(BankMgr * this, ushort param_1);
undefined JASystem__BankMgr__setVir2PhyTable(BankMgr * this, ulong param_1, int param_2);
undefined JASystem__BankMgr__assignWaveBank(BankMgr * this, int param_1, int param_2);
undefined JASystem__BankMgr__clamp01(BankMgr * this, float param_1);
undefined JASystem__BankMgr__noteOn(BankMgr * this, TChannelMgr * param_1, int param_2, int param_3, uchar param_4, uchar param_5, ulong param_6);
undefined JASystem__BankMgr__noteOnOsc(BankMgr * this, TChannelMgr * param_1, int param_2, uchar param_3, uchar param_4, ulong param_5);
undefined JASystem__BankMgr__gateOn(BankMgr * this, TChannel * param_1, uchar param_2, uchar param_3, ulong param_4);
undefined JASystem__TAudioThread__syncAudio(TAudioThread * this);
undefined JASystem__TAudioThread__audioproc(TAudioThread * this, void * param_1);
undefined JASystem__TAudioThread__syncDSP(TAudioThread * this, void * param_1);
undefined JASystem__TAudioThread__setPriority(TAudioThread * this, uchar param_1, uchar param_2);
undefined JASystem__TAudioThread__start(TAudioThread * this, JKRSolidHeap * param_1, ulong param_2, ulong param_3);
int JASystem__TDSP_DACBuffer__init(TDSP_DACBuffer * this, EVP_PKEY_CTX * ctx);
undefined JASystem__TDSP_DACBuffer__updateDSP(TDSP_DACBuffer * this);
undefined JASystem__TDSP_DACBuffer__mixDSP(TDSP_DACBuffer * this, long param_1);
undefined JASystem__TDSP_DACBuffer__finishDSPFrame(TDSP_DACBuffer * this);
int JASystem__TDSPChannel__init(TDSPChannel * this, EVP_PKEY_CTX * ctx);
undefined JASystem__TDSPChannel__allocate(TDSPChannel * this, ulong param_1);
void JASystem__TDSPChannel__free(TDSPChannel * this, void * __ptr);
undefined JASystem__TDSPChannel__forceStop(TDSPChannel * this);
undefined JASystem__TDSPChannel__forceDelete(TDSPChannel * this);
undefined JASystem__TDSPChannel__play(TDSPChannel * this);
undefined JASystem__TDSPChannel__stop(TDSPChannel * this);
undefined JASystem__TDSPChannel__initAll(TDSPChannel * this);
undefined JASystem__TDSPChannel__alloc(TDSPChannel * this, ulong param_1, ulong param_2);
// void JASystem__TDSPChannel__free(TDSPChannel * this, void * __ptr);
undefined JASystem__TDSPChannel__getLower(TDSPChannel * this);
undefined JASystem__TDSPChannel__getLowerActive(TDSPChannel * this);
undefined JASystem__TDSPChannel__breakLower(TDSPChannel * this, uchar param_1);
undefined JASystem__TDSPChannel__breakLowerActive(TDSPChannel * this, uchar param_1);
undefined JASystem__TDSPChannel__updateAll(TDSPChannel * this);
undefined JASystem__TDSPChannel__onUpdate(TDSPChannel * this, ulong param_1);
undefined JASystem__TDSPChannel__getNumBreak(TDSPChannel * this);
void JASystem__TDSPChannel__TDSPChannel_destructor(TDSPChannel * this);
void JASystem__TDSPChannel__TDSPChannel(TDSPChannel * this);
undefined JASystem__DSPInterface__setDSPMixerLevel(DSPInterface * this, float param_1);
undefined JASystem__DSPInterface__getDSPHandle(DSPInterface * this, uchar param_1);
undefined JASystem__DSPInterface__setFilterTable(DSPInterface * this, short * param_1, short * param_2, ulong param_3);
undefined JASystem__DSPInterface__flushBuffer(DSPInterface * this);
undefined JASystem__DSPInterface__invalChannelAll(DSPInterface * this);
undefined JASystem__DSPInterface__clearBuffer(DSPInterface * this);
undefined JASystem__DSPInterface__setupBuffer(DSPInterface * this);
undefined JASystem__DSPInterface__initBuffer(DSPInterface * this);
undefined JASystem__DSPInterface__getFXHandle(DSPInterface * this, uchar param_1);
undefined JASystem__DSPInterface__FXBuffer__setFXLine(FXBuffer * this, short * param_1, FxlineConfig_ * param_2);
undefined JASystem__DSPInterface__DSPBuffer__allocInit(DSPBuffer * this);
undefined JASystem__DSPInterface__DSPBuffer__playStart(DSPBuffer * this);
undefined JASystem__DSPInterface__DSPBuffer__setWaveInfo(DSPBuffer * this, Wave_ * param_1, ulong param_2, ulong param_3);
undefined JASystem__DSPInterface__DSPBuffer__setOscInfo(DSPBuffer * this, ulong param_1);
undefined JASystem__DSPInterface__DSPBuffer__initAutoMixer(DSPBuffer * this);
undefined JASystem__DSPInterface__DSPBuffer__setAutoMixer(DSPBuffer * this, ushort param_1, uchar param_2, uchar param_3, uchar param_4, uchar param_5);
undefined JASystem__DSPInterface__DSPBuffer__setPitch(DSPBuffer * this, ushort param_1);
undefined JASystem__DSPInterface__DSPBuffer__setMixerInitDelayMax(DSPBuffer * this, uchar param_1);
undefined JASystem__DSPInterface__DSPBuffer__setMixerInitVolume(DSPBuffer * this, uchar param_1, short param_2, uchar param_3);
undefined JASystem__DSPInterface__DSPBuffer__setMixerVolume(DSPBuffer * this, uchar param_1, short param_2, uchar param_3);
undefined JASystem__DSPInterface__DSPBuffer__setMixerVolumeOnly(DSPBuffer * this, uchar param_1, short param_2);
undefined JASystem__DSPInterface__DSPBuffer__setPauseFlag(DSPBuffer * this, uchar param_1);
undefined JASystem__DSPInterface__DSPBuffer__flushChannel(DSPBuffer * this);
undefined JASystem__DSPInterface__DSPBuffer__initFilter(DSPBuffer * this);
undefined JASystem__DSPInterface__DSPBuffer__setFilterMode(DSPBuffer * this, ushort param_1);
undefined JASystem__DSPInterface__DSPBuffer__setIIRFilterParam(DSPBuffer * this, short * param_1);
undefined JASystem__DSPInterface__DSPBuffer__setFIR8FilterParam(DSPBuffer * this, short * param_1);
undefined JASystem__DSPInterface__DSPBuffer__setDistFilter(DSPBuffer * this, short param_1);
undefined JASystem__DSPInterface__DSPBuffer__setBusConnect(DSPBuffer * this, uchar param_1, uchar param_2);
undefined JAudio__DSP_CreateMap2();
int JASystem__Driver__init(Driver * this, EVP_PKEY_CTX * ctx);
undefined JASystem__Driver__setMixerLevel(Driver * this, float param_1, float param_2);
undefined JASystem__Driver__getChannelLevel(Driver * this);
undefined JASystem__Driver__getAutoLevel(Driver * this);
undefined JASystem__Driver__setOutputMode(Driver * this, ulong param_1);
undefined JASystem__Driver__getOutputMode(Driver * this);
undefined JASystem__Driver__getUpdateInterval(Driver * this);
undefined JASystem__TGlobalChannel__getChannelHandle(TGlobalChannel * this, ulong param_1);
int JASystem__TGlobalChannel__init(TGlobalChannel * this, EVP_PKEY_CTX * ctx);
undefined JASystem__TGlobalChannel__alloc(TGlobalChannel * this, TChannelMgr * param_1, ulong param_2);
undefined JASystem__TGlobalChannel__release(TGlobalChannel * this, TChannel * param_1);
undefined JASystem__TGlobalChannel__releaseAll(TGlobalChannel * this, TChannelMgr * param_1);
void JASystem__TOscillator__TOscillator_destructor(TOscillator * this);
void JASystem__TOscillator__TOscillator(TOscillator * this);
void JASystem__TChannel__TChannel_destructor(TChannel * this);
void JASystem__TChannel__TChannel(TChannel * this);
undefined JASystem__TDSPQueue__deQueue(TDSPQueue * this);
undefined JASystem__TDSPQueue__enQueue(TDSPQueue * this, TChannel * param_1);
undefined JASystem__TDSPQueue__deleteQueue(TDSPQueue * this, TChannel * param_1);
undefined JASystem__TDSPQueue__checkQueue(TDSPQueue * this);
undefined JAudio____sinit_JASChAllocQueue_cpp();
undefined JSUList__JASystem__TChannel____JSUList_destructor(JSUList__JASystem__TChannel__ * this);
int JASystem__TChannel__init(TChannel * this, EVP_PKEY_CTX * ctx);
undefined JASystem__TChannel__setOscillator(TChannel * this, ulong param_1, TOscillator * param_2);
undefined JASystem__TChannel__setOscInit(TChannel * this, ulong param_1, Osc_ * param_2);
undefined JASystem__TChannel__forceStopOsc(TChannel * this, ulong param_1);
undefined JASystem__TChannel__releaseOsc(TChannel * this, ulong param_1);
undefined JASystem__TChannel__directReleaseOsc(TChannel * this, ulong param_1, ushort param_2);
undefined JASystem__TChannel__bankOscToOfs(TChannel * this, ulong param_1);
undefined JASystem__TChannel__effectOsc(TChannel * this, ulong param_1, float param_2);
undefined JASystem__TChannel__getOscState(TChannel * this, ulong param_1);
undefined JASystem__TChannel__isOsc(TChannel * this, ulong param_1);
undefined JASystem__TChannel__copyOsc(TChannel * this, ulong param_1, Osc_ * param_2);
undefined JASystem__TChannel__overwriteOsc(TChannel * this, ulong param_1, Osc_ * param_2);
undefined JASystem__TChannel__setKeySweepTarget(TChannel * this, uchar param_1, ulong param_2);
undefined JASystem__TChannel__setPauseFlag(TChannel * this, uchar param_1);
undefined JASystem__TChannel__setPauseFlagReq(TChannel * this, uchar param_1);
undefined JASystem__TChannel__setPanPower(TChannel * this, float param_1, float param_2, float param_3, float param_4);
undefined JASystem__TChannel__checkLogicalChannel(TChannel * this);
undefined JASystem__TChannel__play(TChannel * this, ulong param_1);
undefined JASystem__TChannel__stop(TChannel * this, ushort param_1);
undefined JASystem__TChannel__updateJcToDSP(TChannel * this);
undefined JASystem__TChannel__forceStopLogicalChannel(TChannel * this);
undefined JASystem__TChannel__stopLogicalChannel(TChannel * this);
undefined JASystem__TChannel__playLogicalChannel(TChannel * this);
undefined JASystem__TChannel__updateEffectorParam(TChannel * this);
undefined JASystem__TChannel__killBrokenLogicalChannels(TChannel * this, TDSPChannel * param_1);
undefined JASystem__TChannel__updatecallDSPChannel(TChannel * this, TDSPChannel * param_1, ulong param_2);
undefined JASystem__TChannel__calcEffect(TChannel * this, PanMatrix_ * param_1, PanMatrix_ * param_2, uchar param_3);
undefined JASystem__TChannel__calcPan(TChannel * this, PanMatrix_ * param_1, PanMatrix_ * param_2, uchar param_3);
undefined JASystem__TChannel__updateJcToDSPInit(TChannel * this);
undefined JASystem__TChannel__updateAutoMixer(TChannel * this, float param_1, float param_2, float param_3, float param_4);
undefined JASystem__TChannel__updateMixer(TChannel * this, float param_1, float param_2, float param_3, float param_4);
undefined JASystem__TChannel__extraUpdate(TChannel * this, TChannel * param_1, ulong param_2);
undefined JASystem__TChannel__updatecallLogicalChannel(TChannel * this, TChannel * param_1, ulong param_2);
int JASystem__TChannelMgr__init(TChannelMgr * this, EVP_PKEY_CTX * ctx);
undefined JASystem__TChannelMgr__stopAll(TChannelMgr * this);
undefined JASystem__TChannelMgr__stopAllRelease(TChannelMgr * this);
undefined JASystem__TChannelMgr__initAllocChannel(TChannelMgr * this, ulong param_1);
undefined JASystem__TChannelMgr__getLogicalChannel(TChannelMgr * this, ulong param_1);
undefined JASystem__TChannelMgr__moveListHead(TChannelMgr * this, TChannel * param_1, ulong param_2);
undefined JASystem__TChannelMgr__moveListTail(TChannelMgr * this, TChannel * param_1, ulong param_2);
undefined JASystem__TChannelMgr__addListHead(TChannelMgr * this, TChannel * param_1, ulong param_2);
undefined JASystem__TChannelMgr__addListTail(TChannelMgr * this, TChannel * param_1, ulong param_2);
undefined JASystem__TChannelMgr__getListHead(TChannelMgr * this, ulong param_1);
undefined JASystem__TChannelMgr__cutList(TChannelMgr * this, TChannel * param_1);
undefined JASystem__TChannelMgr__receiveAllChannels(TChannelMgr * this, TChannelMgr * param_1);
undefined JASystem__TChannelMgr__checkLimitStart(TChannelMgr * this, ulong param_1);
undefined JASystem__TChannelMgr__checkLimitStop(TChannelMgr * this, TChannel * param_1, ulong param_2);
int JASystem__TOscillator__init(TOscillator * this, EVP_PKEY_CTX * ctx);
undefined JASystem__TOscillator__initStart(TOscillator * this);
undefined JASystem__TOscillator__getOffset(TOscillator * this);
undefined JASystem__TOscillator__forceStop(TOscillator * this);
undefined JASystem__TOscillator__release(TOscillator * this);
undefined JASystem__TOscillator__calc(TOscillator * this, short * param_1);
undefined JAudio__DSPReleaseHalt2();
undefined JAudio__DSPReleaseHalt();
undefined JAudio__setup_callback();
undefined JAudio__DsetupTable();
undefined JAudio__DsetMixerLevel();
undefined JAudio__DsyncFrame();
undefined JAudio__dummy_callback();
undefined JAudio__DsetDolbyDelay();
undefined JAudio__DspHandShake();
undefined JAudio__DspBoot();
undefined JAudio__DSPSendCommands2();
undefined JAudio__DspInitWork();
undefined JAudio__DspStartWork();
undefined JAudio__DspFinishWork();
undefined JAudio__DSPAddTask();
undefined JAudio__DSPAddPriorTask();
undefined JAudio____DSPHandler();
undefined JAudio__DsyncFrame2();
undefined JAudio__Dsp_Update_Request();
undefined JAudio__Dsp_Running_Check();
undefined JAudio__Dsp_Running_Start();
void JAIAnimeSound__JAIAnimeSound(JAIAnimeSound * this);
undefined JAIAnimeSound__initActorAnimSound(JAIAnimeSound * this, void * param_1, ulong param_2, float param_3);
undefined JAIAnimeSound__setAnimSoundVec(JAIAnimeSound * this, JAIBasic * param_1, cXyz * param_2, float param_3, float param_4, ulong param_5, uchar param_6);
undefined JAIAnimeSound__setAnimSoundActor(JAIAnimeSound * this, JAIBasic * param_1, Actor * param_2, float param_3, float param_4, uchar param_5);
undefined JAIAnimeSound__playActorAnimSound(JAIAnimeSound * this, JAIBasic * param_1, Actor * param_2, float param_3, uchar param_4);
undefined JAIAnimeSound__startAnimSound(JAIAnimeSound * this, void * param_1, ulong param_2, JAISound * * param_3, Actor * param_4, uchar param_5);
undefined JAIAnimeSound__setSpeedModifySound(JAIAnimeSound * this, JAISound * param_1, JAIAnimeFrameSoundData * param_2, float param_3);
undefined JAIAnimeSound__stop(JAIAnimeSound * this);
void JAIBasic__JAIBasic(JAIBasic * this);
undefined JAIBasic__initDriver(JAIBasic * this, JKRSolidHeap * param_1, ulong param_2, uchar param_3);
undefined JAIBasic__initInterface(JAIBasic * this, uchar param_1);
undefined JAIBasic__initInterfaceMain(JAIBasic * this);
undefined JAIBasic__initHeap(JAIBasic * this);
undefined JAIBasic__initArchive(JAIBasic * this);
undefined JAIBasic__initResourcePath(JAIBasic * this);
undefined JAIBasic__setCameraInfo(JAIBasic * this, Vec * param_1, Vec * param_2, float * param_3, ulong param_4);
undefined JAIBasic__initStream(JAIBasic * this);
undefined JAIBasic__setRegisterTrackCallback(JAIBasic * this);
undefined JAIBasic__initAudioThread(JAIBasic * this, JKRSolidHeap * param_1, ulong param_2, uchar param_3);
undefined JAIBasic__initCamera(JAIBasic * this);
undefined JAInter__Camera____defctor(Camera * this);
undefined JAIBasic__initReadFile(JAIBasic * this);
undefined JAIBasic__processFrameWork(JAIBasic * this);
undefined JAIBasic__startSoundVec(JAIBasic * this, ulong param_1, JAISound * * param_2, Vec * param_3, ulong param_4, ulong param_5, uchar param_6);
undefined JAIBasic__startSoundActor(JAIBasic * this, ulong param_1, JAISound * * param_2, Actor * param_3, ulong param_4, uchar param_5);
undefined JAIBasic__startSoundDirectID(JAIBasic * this, ulong param_1, JAISound * * param_2, Actor * param_3, ulong param_4, uchar param_5);
undefined JAIBasic__startSoundBasic(JAIBasic * this, ulong param_1, JAISound * * param_2, Actor * param_3, ulong param_4, uchar param_5, void * param_6);
undefined JAIBasic__stopSoundHandle(JAIBasic * this, JAISound * param_1, ulong param_2);
undefined JAIBasic__stopPlayingCategoryObjectSe(JAIBasic * this, uchar param_1, void * param_2);
undefined JAIBasic__stopAllSe(JAIBasic * this, uchar param_1, void * param_2);
undefined JAIBasic__stopActorSoundOneBuffer(JAIBasic * this, void * param_1, JAISound * param_2);
undefined JAIBasic__stopIDSoundOneBuffer(JAIBasic * this, ulong param_1, JAISound * param_2);
undefined JAIBasic__stopIDActorSoundOneBuffer(JAIBasic * this, ulong param_1, void * param_2, JAISound * param_3);
undefined JAIBasic__stopAllSound(JAIBasic * this, void * param_1);
// undefined JAIBasic__stopAllSound(JAIBasic * this, ulong param_1);
// undefined JAIBasic__stopAllSound(JAIBasic * this, ulong param_1, void * param_2);
undefined JAIBasic__deleteObject(JAIBasic * this, void * param_1);
undefined JAIBasic__getMapInfoFxline(JAIBasic * this, ulong param_1);
undefined JAIBasic__getMapInfoGround(JAIBasic * this, ulong param_1);
undefined JAIBasic__getMapInfoFxParameter(JAIBasic * this, ulong param_1);
undefined JAIBasic__getSoundOffsetNumberFromID(JAIBasic * this, ulong param_1);
undefined JAIBasic__setSeCategoryVolume(JAIBasic * this, uchar param_1, uchar param_2);
undefined JAIBasic__setParameterSeqSync(JAIBasic * this, TTrack * param_1, ushort param_2);
undefined JAIBasic__setSeExtParameter(JAIBasic * this, JAISound * param_1);
undefined JAIBasic__makeSound(JAIBasic * this, ulong param_1);
undefined JAIBasic__allocStreamBuffer(JAIBasic * this, void * param_1, long param_2);
undefined JAIBasic__deallocStreamBuffer(JAIBasic * this);
undefined JAInter__BankWave__setWsGroupNumber(BankWave * this, long param_1, long param_2);
undefined JAInter__BankWave__setWsLoadStatus(BankWave * this, long param_1, long param_2);
int JAInter__BankWave__init(BankWave * this, EVP_PKEY_CTX * ctx);
undefined JAInter__BankWave__setWaveScene(BankWave * this);
undefined JAInter__BankWave__loadSecondStayWave(BankWave * this);
undefined JAInter__BankWave__setSceneSetFinishCallback(BankWave * this, long param_1, long param_2);
undefined JAInter__BankWave__finishSceneSet(BankWave * this, ulong param_1);
undefined JAInter__BankWave__loadSceneWave(BankWave * this, long param_1, long param_2);
undefined JAInter__BankWave__loadGroupWave(BankWave * this, long param_1, long param_2);
undefined JAInter__BankWave__getWaveLoadStatus(BankWave * this, long param_1);
undefined4 JAInter__BankWave__checkAllWaveLoadStatus(void);
undefined JAInter__transInitDataFile(JAInter * this, uchar * param_1, ulong param_2);
undefined JAInter__loadTmpDVDFile(JAInter * this, char * param_1, uchar * * param_2);
undefined JAInter__deleteTmpDVDFile(JAInter * this, uchar * * param_1);
undefined JAInter__routeToTrack(JAInter * this, ulong param_1);
undefined JAudio____sinit_JAIConst_cpp();
int JAInter__DummyObjectMgr__init(DummyObjectMgr * this, EVP_PKEY_CTX * ctx);
undefined JAInter__DummyObjectMgr__getPointer(DummyObjectMgr * this, ulong param_1, bool param_2);
undefined JAInter__DummyObjectMgr__releasePointer(DummyObjectMgr * this, DummyVec * param_1);
undefined JAInter__DummyObjectMgr__check(DummyObjectMgr * this);
int JAInter__Fx__init(Fx * this, EVP_PKEY_CTX * ctx);
undefined JAInter__Fx__setSceneMax(Fx * this, uchar param_1);
undefined JAInter__Fx__setBufferMax(Fx * this, ulong param_1, ulong param_2, ulong param_3, ulong param_4);
undefined JAInter__Fx__setTablePointer(Fx * this, void * * param_1);
undefined JAInter__Fx__setBufferPointer(Fx * this, uchar param_1, short * param_2);
undefined JAInter__Fx__setScenePointer(Fx * this, uchar param_1, void * param_2);
undefined JAInter__Fx__getSceneMax(Fx * this);
undefined JAInter__Fx__getBufferSizeMax(Fx * this, uchar param_1);
undefined JAInter__Fx__getBufferPointer(Fx * this, uchar param_1);
undefined JAInter__Fx__getFxconfigTable(Fx * this);
undefined JAIGlobalParameter__setParamInitDataPointer(JAIGlobalParameter * this, void * param_1);
undefined JAIGlobalParameter__setParamInterfaceHeapSize(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__setParamSoundSceneMax(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__setParamSeRegistMax(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__setParamSeTrackMax(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__setParamSeqPlayTrackMax(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__setParamSeqControlBufferMax(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__setParamStreamControlBufferMax(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__setParamAutoHeapMax(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__setParamStayHeapMax(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__setParamInputGainDown(JAIGlobalParameter * this, float param_1);
undefined JAIGlobalParameter__setParamOutputGainUp(JAIGlobalParameter * this, float param_1);
undefined JAIGlobalParameter__setParamDistanceMax(JAIGlobalParameter * this, float param_1);
undefined JAIGlobalParameter__setParamMaxVolumeDistance(JAIGlobalParameter * this, float param_1);
undefined JAIGlobalParameter__setParamMinDistanceVolume(JAIGlobalParameter * this, float param_1);
undefined JAIGlobalParameter__setParamSeDistanceFxParameter(JAIGlobalParameter * this, ushort param_1);
undefined JAIGlobalParameter__setParamStreamDecodedBufferBlocks(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__setParamStreamInsideBufferCut(JAIGlobalParameter * this, bool param_1);
undefined JAIGlobalParameter__setParamAutoHeapRoomSize(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__setParamStayHeapSize(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__setParamSeDolbyCenterValue(JAIGlobalParameter * this, uchar param_1);
undefined JAIGlobalParameter__setParamSeDolbyFrontDistanceMax(JAIGlobalParameter * this, float param_1);
undefined JAIGlobalParameter__setParamSeDolbyBehindDistanceMax(JAIGlobalParameter * this, float param_1);
undefined JAIGlobalParameter__setParamInitDataFileName(JAIGlobalParameter * this, char * param_1);
undefined JAIGlobalParameter__setParamWavePath(JAIGlobalParameter * this, char * param_1);
undefined JAIGlobalParameter__setParamSequenceArchivesPath(JAIGlobalParameter * this, char * param_1);
undefined JAIGlobalParameter__setParamStreamPath(JAIGlobalParameter * this, char * param_1);
undefined JAIGlobalParameter__setParamAudioResPath(JAIGlobalParameter * this, char * param_1);
undefined JAIGlobalParameter__setParamSequenceArchivesFileName(JAIGlobalParameter * this, char * param_1);
undefined JAIGlobalParameter__setParamDummyObjectLifeTime(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__setParamDummyObjectMax(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__setParamAudioCameraMax(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__setParamSystemTrackMax(JAIGlobalParameter * this, long param_1);
undefined JAIGlobalParameter__setParamSoundOutputMode(JAIGlobalParameter * this, ulong param_1);
undefined JAIGlobalParameter__getParamSeCategoryMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamSoundSceneMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamSeRegistMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamSeTrackMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamSeqTrackMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamSeqControlBufferMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamStreamControlBufferMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamStreamParameterBufferMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamAutoHeapMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamStayHeapMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamSeqPlayTrackMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamDistanceMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamMaxVolumeDistance(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamMinDistanceVolume(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamAutoHeapRoomSize(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamStayHeapSize(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamSeDolbyCenterValue(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamSeDolbyFrontDistanceMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamSeDolbyBehindDistanceMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamInitDataFileName(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamWavePath(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamSequenceArchivesPath(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamStreamPath(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamAudioResPath(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamSequenceArchivesFileName(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamDopplarMoveTime(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamDistanceParameterMoveTime(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamDummyObjectMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamSeqMuteVolumeSePlay(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamSeqMuteMoveSpeedSePlay(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamAudioCameraMax(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamSeqParameterLines(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamStreamParameterLines(JAIGlobalParameter * this);
undefined JAIGlobalParameter__getParamSeDistanceWaitMax(JAIGlobalParameter * this);
undefined JAInter__InitData__checkInitDataFile(InitData * this);
undefined JAInter__InitData__checkInitDataOnMemory(InitData * this);
int JAInter__SeMgr__init(SeMgr * this, EVP_PKEY_CTX * ctx);
void JAInter__SeParameter__SeParameter(SeParameter * this);
undefined JAInter__SeMgr__startSeSequence(SeMgr * this);
undefined JAInter__SeMgr__processGFrameSe(SeMgr * this);
undefined JAInter__SeMgr__checkNextFrameSe(SeMgr * this);
undefined JAInter__SeMgr__checkPlayingSe(SeMgr * this);
undefined JAInter__SeMgr__setSeqMuteFromSeStart(SeMgr * this, JAISound * param_1);
undefined JAInter__SeMgr__clearSeqMuteFromSeStop(SeMgr * this, JAISound * param_1);
undefined JAInter__SeMgr__checkSeMovePara(SeMgr * this);
undefined JAInter__SeMgr__sendSeAllParameter(SeMgr * this, JAISound * param_1);
undefined JAInter__SeMgr__checkPlayingSeUpdateMultiplication(SeMgr * this, JAISound * param_1, SeqUpdateData * param_2, float * param_3, MoveParaSet * param_4, float param_5, uchar param_6, float * param_7);
undefined JAInter__SeMgr__checkPlayingSeUpdateAddition(SeMgr * this, JAISound * param_1, SeqUpdateData * param_2, float * param_3, MoveParaSet * param_4, uchar param_5, float * param_6, float param_7);
undefined JAInter__SeMgr__changeIDToCategory(SeMgr * this, ulong param_1);
undefined JAInter__SeMgr__releaseSeRegist(SeMgr * this, JAISound * param_1);
undefined JAInter__SeMgr__getSeParametermeterPointer(SeMgr * this);
undefined JAInter__SeMgr__releaseSeParameterPointer(SeMgr * this, SeParameter * param_1);
undefined JAInter__SeMgr__storeSeBuffer(SeMgr * this, JAISound * * param_1, Actor * param_2, ulong param_3, ulong param_4, uchar param_5, void * param_6);
undefined JAInter__SeMgr__releaseSeBuffer(SeMgr * this, JAISound * param_1, ulong param_2);
void JAInter__MoveParaSetInitZero__MoveParaSetInitZero(MoveParaSetInitZero * this);
void JAInter__MoveParaSetInitHalf__MoveParaSetInitHalf(MoveParaSetInitHalf * this);
undefined JAInter__MoveParaSet____defctor(MoveParaSet * this);
int JAInter__HeapMgr__init(HeapMgr * this, EVP_PKEY_CTX * ctx);
undefined JAInter__HeapMgr__getAutoHeapPointer(HeapMgr * this);
undefined JAInter__HeapMgr__checkOnMemory(HeapMgr * this, ulong param_1, uchar * param_2);
undefined JAInter__HeapMgr__releaseAutoHeapPointer(HeapMgr * this, uchar param_1);
undefined JAInter__HeapMgr__checkUsefulAutoHeapPosition(HeapMgr * this);
undefined JAInter__HeapMgr__getFreeAutoHeapPointer(HeapMgr * this, uchar param_1, ulong param_2);
undefined JAInter__HeapMgr__getFreeStayHeapPointer(HeapMgr * this, ulong param_1, ulong param_2);
undefined JAInter__HeapMgr__setAutoHeapLoadedFlag(HeapMgr * this, uchar param_1, uchar param_2);
void JAInter__HeapBlock__HeapBlock(HeapBlock * this);
int JAInter__SequenceMgr__init(SequenceMgr * this, EVP_PKEY_CTX * ctx);
void JAInter__SeqUpdateData__SeqUpdateData(SeqUpdateData * this);
void JAInter__PlayerParameter__PlayerParameter_destructor(PlayerParameter * this);
void JAInter__PlayerParameter__PlayerParameter(PlayerParameter * this);
undefined JAInter__SequenceMgr__getArchiveName(SequenceMgr * this, char * param_1);
undefined JAInter__SequenceMgr__setArchivePointer(SequenceMgr * this, JKRArchive * param_1);
undefined JAInter__SequenceMgr__processGFrameSequence(SequenceMgr * this);
undefined JAInter__SequenceMgr__checkEntriedSeq(SequenceMgr * this);
undefined JAInter__SequenceMgr__checkFadeoutSeq(SequenceMgr * this);
undefined JAInter__SequenceMgr__checkStoppedSeq(SequenceMgr * this);
undefined JAInter__SequenceMgr__checkPlayingSeq(SequenceMgr * this);
undefined JAInter__SequenceMgr__checkStartedSeq(SequenceMgr * this);
undefined JAInter__SequenceMgr__checkReadSeq(SequenceMgr * this);
undefined JAInter__SequenceMgr__checkSeqWave(SequenceMgr * this);
undefined JAInter__SequenceMgr__checkPlayingSeqUpdateMultiplication(SequenceMgr * this, ulong param_1, uchar param_2, ulong param_3, MoveParaSet * param_4, ulong * param_5, uchar param_6, float * param_7);
undefined JAInter__SequenceMgr__checkPlayingSeqUpdateAddition(SequenceMgr * this, ulong param_1, uchar param_2, ulong param_3, MoveParaSet * param_4, ulong * param_5, uchar param_6, float * param_7, float param_8);
undefined JAInter__SequenceMgr__checkPlayingSeqUpdateTrack(SequenceMgr * this, ulong param_1, ulong param_2, MoveParaSet * param_3, ulong * param_4, uchar param_5, float * param_6);
undefined JAInter__SequenceMgr__checkPlayingSeqTrack(SequenceMgr * this, ulong param_1);
undefined JAInter__SequenceMgr__stopSeq(SequenceMgr * this, JAISound * param_1);
undefined JAInter__SequenceMgr__checkDvdLoadArc(SequenceMgr * this, ulong param_1, ulong param_2);
undefined JAInter__SequenceMgr__storeSeqBuffer(SequenceMgr * this, JAISound * * param_1, Actor * param_2, ulong param_3, ulong param_4, uchar param_5, void * param_6);
undefined JAInter__SequenceMgr__releaseSeqBuffer(SequenceMgr * this, JAISound * param_1, ulong param_2);
undefined JAInter__SequenceMgr__getPlayTrackInfo(SequenceMgr * this, ulong param_1);
void JAInter__MuteBit__MuteBit(MuteBit * this);
void JASystem__Kernel__TPortCmd__TPortCmd_destructor(TPortCmd * this);
undefined JAIBasic__getInterface(JAIBasic * this);
int JAInter__SeqParameter__init(SeqParameter * this, EVP_PKEY_CTX * ctx);
void JAISound__JAISound(JAISound * this);
undefined JAISound__getSeCategoryNumber(JAISound * this);
undefined JAISound__getSwBit(JAISound * this);
undefined JAISound__checkSwBit(JAISound * this, ulong param_1);
undefined JAISound__getInfoPriority(JAISound * this);
undefined JAISound__clearMainSoundPPointer(JAISound * this);
undefined JAISound__start(JAISound * this, ulong param_1);
undefined JAISound__stop(JAISound * this, ulong param_1);
undefined JAISound__setVolume(JAISound * this, float param_1, ulong param_2, uchar param_3);
undefined JAISound__setPan(JAISound * this, float param_1, ulong param_2, uchar param_3);
undefined JAISound__setPitch(JAISound * this, float param_1, ulong param_2, uchar param_3);
undefined JAISound__setFxmix(JAISound * this, float param_1, ulong param_2, uchar param_3);
undefined JAISound__setDolby(JAISound * this, float param_1, ulong param_2, uchar param_3);
undefined JAISound__setTempoProportion(JAISound * this, float param_1, ulong param_2);
undefined JAISound__setPortData(JAISound * this, uchar param_1, ushort param_2);
undefined JAISound__setPrepareFlag(JAISound * this, uchar param_1);
undefined JAISound__setDistanceVolumeCommon(JAISound * this, float param_1, uchar param_2);
undefined JAISound__setDistancePanCommon(JAISound * this);
undefined JAISound__setPositionDopplarCommon(JAISound * this, ulong param_1);
undefined JAISound__setSeqInterVolume(JAISound * this, uchar param_1, float param_2, ulong param_3);
undefined JAISound__setSeqInterPan(JAISound * this, uchar param_1, float param_2, ulong param_3);
undefined JAISound__setSeqInterPitch(JAISound * this, uchar param_1, float param_2, ulong param_3);
undefined JAISound__setSeqInterFxmix(JAISound * this, uchar param_1, float param_2, ulong param_3);
undefined JAISound__setSeqInterDolby(JAISound * this, uchar param_1, float param_2, ulong param_3);
undefined JAISound__setSeqTempoProportion(JAISound * this, float param_1, ulong param_2);
undefined JAISound__setSeqPortData(JAISound * this, uchar param_1, ushort param_2, ulong param_3);
undefined JAISound__setTrackVolume(JAISound * this, uchar param_1, float param_2, ulong param_3);
undefined JAISound__setTrackInterruptSwitch(JAISound * this, uchar param_1, uchar param_2);
undefined JAISound__setTrackPortData(JAISound * this, uchar param_1, uchar param_2, ushort param_3);
undefined JAISound__setSeInterRandomPara(JAISound * this, float * param_1, ulong param_2, float param_3, float param_4);
undefined JAISound__setSeInterVolume(JAISound * this, uchar param_1, float param_2, ulong param_3, uchar param_4);
undefined JAISound__setSeInterPan(JAISound * this, uchar param_1, float param_2, ulong param_3, uchar param_4);
undefined JAISound__setSeInterPitch(JAISound * this, uchar param_1, float param_2, ulong param_3, float param_4);
undefined JAISound__setSeInterFxmix(JAISound * this, uchar param_1, float param_2, ulong param_3, uchar param_4);
undefined JAISound__setSeInterDolby(JAISound * this, uchar param_1, float param_2, ulong param_3, uchar param_4);
undefined JAISound__setSePortData(JAISound * this, uchar param_1, ushort param_2);
undefined JAISound__setSeDistanceParameters(JAISound * this);
undefined JAISound__setSeDistanceVolume(JAISound * this, uchar param_1);
undefined JAISound__setSeDistancePan(JAISound * this, uchar param_1);
undefined JAISound__setSeDistancePitch(JAISound * this, uchar param_1);
undefined JAISound__setSePositionDopplar(JAISound * this);
undefined JAISound__setSeDistanceFxmix(JAISound * this, uchar param_1);
undefined JAISound__setSeDistanceFir(JAISound * this, uchar param_1);
undefined JAISound__setSeDistanceDolby(JAISound * this, uchar param_1);
undefined JAISound__setStreamInterVolume(JAISound * this, uchar param_1, float param_2, ulong param_3);
undefined JAISound__setStreamInterPitch(JAISound * this, uchar param_1, float param_2, ulong param_3);
undefined JAISound__setStreamInterPan(JAISound * this, uchar param_1, float param_2, ulong param_3);
undefined JAISound__setStreamPrepareFlag(JAISound * this, uchar param_1);
undefined JAISound__setPauseMode(JAISound * this, uchar param_1, uchar param_2);
undefined JAISound__setSeqPrepareFlag(JAISound * this, uchar param_1);
undefined JAISound__getSeqInterVolume(JAISound * this, uchar param_1);
undefined JAISound__getStreamInterVolume(JAISound * this, uchar param_1);
undefined JAISound__getSeqParameter(JAISound * this);
undefined JAISound__getSeParameter(JAISound * this);
undefined JAISound__getStreamParameter(JAISound * this);
undefined JAISound__getTrackPortRoute(JAISound * this, uchar param_1, uchar param_2);
undefined JAISound__checkSoundHandle(JAISound * this, ulong param_1, void * param_2);
undefined JAISound__initParameter(JAISound * this, JAISound * * param_1, Actor * param_2, ulong param_3, ulong param_4, uchar param_5, void * param_6);
undefined JAInter__MoveParaSet__set(MoveParaSet * this, float param_1, ulong param_2);
undefined JAInter__MoveParaSet__move(MoveParaSet * this);
int JAInter__LinkSound__init(LinkSound * this, EVP_PKEY_CTX * ctx);
undefined JAInter__LinkSound__getSound(LinkSound * this);
undefined JAInter__LinkSound__releaseSound(LinkSound * this, JAISound * param_1);
int JAInter__SoundTable__init(SoundTable * this, EVP_PKEY_CTX * ctx);
undefined JAInter__SoundTable__getInfoPointer(SoundTable * this, ulong param_1);
undefined JAInter__SoundTable__getInfoFormat(SoundTable * this, ulong param_1);
undefined JAInter__SoundTable__getCategotyMax(SoundTable * this);
int JAInter__StreamMgr__init(StreamMgr * this, EVP_PKEY_CTX * ctx);
undefined JAInter__StreamMgr__storeStreamBuffer(StreamMgr * this, JAISound * * param_1, Actor * param_2, ulong param_3, ulong param_4, uchar param_5, void * param_6);
undefined JAInter__StreamMgr__releaseStreamBuffer(StreamMgr * this, JAISound * param_1, ulong param_2);
undefined JAInter__StreamMgr__processGFrameStream(StreamMgr * this);
undefined JAInter__StreamMgr__checkEntriedStream(StreamMgr * this);
undefined JAInter__StreamMgr__checkWaitStream(StreamMgr * this);
undefined JAInter__StreamMgr__checkRequestStream(StreamMgr * this);
undefined JAInter__StreamMgr__checkPlayingStream(StreamMgr * this);
undefined JAInter__StreamLib__Play_DirectPCM(StreamLib * this, TDSPChannel * param_1, short * param_2, ushort param_3, ulong param_4, short param_5, ushort param_6);
undefined JAInter__StreamLib__Get_DirectPCM_LoopRemain(StreamLib * this, DSPBuffer * param_1);
undefined JAInter__StreamLib__Get_DirectPCM_Remain(StreamLib * this, DSPBuffer * param_1);
int JAInter__StreamLib__init(StreamLib * this, EVP_PKEY_CTX * ctx);
undefined JAInter__StreamLib__allocBuffer(StreamLib * this, void * param_1, long param_2);
undefined JAInter__StreamLib__deallocBuffer(StreamLib * this);
undefined JAInter__StreamLib__getNeedBufferSize(StreamLib * this);
undefined JAInter__StreamLib__setAllocBufferCallback(StreamLib * this, void * param_1);
undefined JAInter__StreamLib__setDeallocBufferCallback(StreamLib * this, void * param_1);
void JAInter__StreamLib__sync(StreamLib * this);
undefined JAInter__StreamLib____DecodePCM(StreamLib * this);
undefined JAInter__StreamLib____DecodeADPCM(StreamLib * this);
undefined JAInter__StreamLib____Decode(StreamLib * this);
undefined JAInter__StreamLib____LoadFin(StreamLib * this, long param_1, DVDFileInfo * param_2);
undefined JAInter__StreamLib__LoadADPCM(StreamLib * this);
undefined JAInter__StreamLib__setVolume(StreamLib * this, float param_1);
undefined JAInter__StreamLib__setPitch(StreamLib * this, float param_1);
undefined JAInter__StreamLib__setPan(StreamLib * this, float param_1);
undefined JAInter__StreamLib__stop(StreamLib * this);
undefined JAInter__StreamLib__setPauseFlag(StreamLib * this, uchar param_1);
undefined JAInter__StreamLib__clearPauseFlag(StreamLib * this, uchar param_1);
undefined JAInter__StreamLib__setPrepareFlag(StreamLib * this, uchar param_1);
undefined JAInter__StreamLib__setOutputMode(StreamLib * this, ulong param_1);
undefined JAInter__StreamLib__getPlayingFlag(StreamLib * this);
undefined JAInter__StreamLib__setDecodedBufferBlocks(StreamLib * this, ulong param_1);
undefined JAInter__StreamLib__LoopInit(StreamLib * this);
undefined JAInter__StreamLib__directPlayWait(StreamLib * this, void * param_1);
undefined JAInter__StreamLib__start(StreamLib * this, char * param_1, ulong param_2, void * param_3);
undefined JAInter__StreamLib____start(StreamLib * this);
undefined JAInter__StreamLib__callBack(StreamLib * this, void * param_1);
undefined JAudio____sinit_JAIStreamMgr_cpp();
undefined JAInter__SystemInterface__checkFileExsistence(SystemInterface * this, char * param_1);
undefined JAInter__SystemInterface__checkSeqActiveFlag(SystemInterface * this, TTrack * param_1);
undefined JAInter__SystemInterface__trackToSeqp(SystemInterface * this, JAISound * param_1, uchar param_2);
undefined JAInter__SystemInterface__setSeqPortargsF32(SystemInterface * this, SeqUpdateData * param_1, ulong param_2, uchar param_3, float param_4);
undefined JAInter__SystemInterface__setSeqPortargsU32(SystemInterface * this, SeqUpdateData * param_1, ulong param_2, uchar param_3, ulong param_4);
undefined JAInter__SystemInterface__rootInit(SystemInterface * this, SeqUpdateData * param_1);
undefined JAInter__SystemInterface__trackInit(SystemInterface * this, SeqUpdateData * param_1);
undefined JAInter__SystemInterface__outerInit(SystemInterface * this, SeqUpdateData * param_1, void * param_2, ulong param_3, ushort param_4, uchar param_5);
undefined JAInter__SystemInterface__setPortParameter(SystemInterface * this, TPortArgs * param_1, TTrack * param_2, ulong param_3, ulong param_4);
undefined JAInter__SystemInterface__setSePortParameter(SystemInterface * this, TPortArgs * param_1);
undefined JAudio____sinit_JAISystemInterface_cpp();
void JMessage__TControl__TControl(TControl * this);
void JMessage__TControl__TControl_destructor(TControl * this);
undefined JMessage__TControl__getResource_groupID(TControl * this, ushort param_1);
undefined JMessage__TControl__getMessageData(TControl * this, ushort param_1, ushort param_2);
undefined JMessage__TControl__reset(TControl * this);
undefined JMessage__TControl__update(TControl * this);
undefined JMessage__TControl__render(TControl * this);
undefined JMessage__TControl__do_word(TControl * this, ulong param_1);
undefined JMessage__TControl__setMessageCode_flush_(TControl * this);
undefined JMessage__TControl__reset_(TControl * this);
undefined JMessage___unnamed_processor_cpp___process_setMessageIndex_reserved_(_unnamed_processor_cpp_ * this, ushort param_1);
undefined JMessage___unnamed_processor_cpp___process_setMessage_index_(_unnamed_processor_cpp_ * this, TControl * param_1, ushort param_2);
undefined JMessage___unnamed_processor_cpp___process_setMessage_code_(_unnamed_processor_cpp_ * this, TControl * param_1, ulong param_2);
undefined JMessage__TProcessor__pushCurrent(TProcessor * this, char * param_1);
undefined JMessage__TProcessor__popCurrent(TProcessor * this);
undefined JMessage__TProcessor__on_select_begin(TProcessor * this, void * param_1, void * param_2, char * param_3, ulong param_4);
undefined JMessage__TProcessor__on_select_end(TProcessor * this);
undefined JMessage__TProcessor__on_select_separate(TProcessor * this);
undefined JMessage__TProcessor__do_character(TProcessor * this, int param_1);
undefined JMessage__TProcessor__do_tag(TProcessor * this, ulong param_1, void * param_2, ulong param_3);
undefined JMessage__TProcessor__do_systemTagCode(TProcessor * this, ushort param_1, void * param_2, ulong param_3);
undefined JMessage__TProcessor__do_select_begin(TProcessor * this, ulong param_1);
undefined JMessage__TProcessor__do_select_end(TProcessor * this);
undefined JMessage__TProcessor__do_select_separate(TProcessor * this);
void JMessage__TProcessor__TProcessor_destructor(TProcessor * this);
undefined JMessage__TProcessor__reset_(TProcessor * this, char * param_1);
undefined JMessage__TProcessor__on_tag_(TProcessor * this);
undefined JMessage__TProcessor__do_tag_(TProcessor * this, ulong param_1, void * param_2, ulong param_3);
undefined JMessage__TProcessor__do_systemTagCode_(TProcessor * this, ushort param_1, void * param_2, ulong param_3);
undefined JMessage__TProcessor__process_character_(TProcessor * this);
undefined JMessage__TProcessor__process_onCharacterEnd_normal_(TProcessor * this, TProcessor * param_1);
undefined JMessage__TProcessor__process_onCharacterEnd_select_(TProcessor * this, TProcessor * param_1);
undefined JMessage__TProcessor__process_select_limited_(TProcessor * this, TProcessor * param_1);
undefined JMessage__TProcessor__process_select_(TProcessor * this, TProcessor * param_1);
void JMessage__TSequenceProcessor__TSequenceProcessor(TSequenceProcessor * this, TControl * param_1);
void JMessage__TSequenceProcessor__TSequenceProcessor_destructor(TSequenceProcessor * this);
undefined JMessage__TSequenceProcessor__process(TSequenceProcessor * this, char * param_1);
undefined JMessage__TSequenceProcessor__on_isReady(TSequenceProcessor * this);
undefined JMessage__TSequenceProcessor__on_jump_register(TSequenceProcessor * this, void * param_1, ulong param_2);
undefined JMessage__TSequenceProcessor__on_jump_isReady(TSequenceProcessor * this);
undefined JMessage__TSequenceProcessor__on_jump(TSequenceProcessor * this, void * param_1, char * param_2);
undefined JMessage__TSequenceProcessor__on_branch_register(TSequenceProcessor * this, void * param_1, void * param_2, ulong param_3);
undefined JMessage__TSequenceProcessor__on_branch_query(TSequenceProcessor * this, ushort param_1);
undefined JMessage__TSequenceProcessor__on_branch_queryResult(TSequenceProcessor * this);
undefined JMessage__TSequenceProcessor__on_branch(TSequenceProcessor * this, void * param_1, char * param_2);
undefined JMessage__TSequenceProcessor__do_begin(TSequenceProcessor * this, void * param_1, char * param_2);
undefined JMessage__TSequenceProcessor__do_end(TSequenceProcessor * this);
undefined JMessage__TSequenceProcessor__do_isReady(TSequenceProcessor * this);
undefined JMessage__TSequenceProcessor__do_jump_isReady(TSequenceProcessor * this);
undefined JMessage__TSequenceProcessor__do_jump(TSequenceProcessor * this, void * param_1, char * param_2);
undefined JMessage__TSequenceProcessor__do_branch_query(TSequenceProcessor * this, ushort param_1);
undefined JMessage__TSequenceProcessor__do_branch_queryResult(TSequenceProcessor * this);
undefined JMessage__TSequenceProcessor__do_branch(TSequenceProcessor * this, void * param_1, char * param_2);
undefined JMessage__TSequenceProcessor__reset_(TSequenceProcessor * this, char * param_1);
undefined JMessage__TSequenceProcessor__do_begin_(TSequenceProcessor * this, void * param_1, char * param_2);
undefined JMessage__TSequenceProcessor__do_end_(TSequenceProcessor * this);
undefined JMessage__TSequenceProcessor__do_tag_(TSequenceProcessor * this, ulong param_1, void * param_2, ulong param_3);
undefined JMessage__TSequenceProcessor__do_systemTagCode_(TSequenceProcessor * this, ushort param_1, void * param_2, ulong param_3);
undefined JMessage__TSequenceProcessor__process_jump_limited_(TSequenceProcessor * this, TSequenceProcessor * param_1);
undefined JMessage__TSequenceProcessor__process_jump_(TSequenceProcessor * this, TSequenceProcessor * param_1);
undefined JMessage__TSequenceProcessor__process_branch_limited_(TSequenceProcessor * this, TSequenceProcessor * param_1, ulong param_2);
undefined JMessage__TSequenceProcessor__process_branch_(TSequenceProcessor * this, TSequenceProcessor * param_1, ulong param_2);
void JMessage__TRenderingProcessor__TRenderingProcessor(TRenderingProcessor * this, TControl * param_1);
void JMessage__TRenderingProcessor__TRenderingProcessor_destructor(TRenderingProcessor * this);
undefined JMessage__TRenderingProcessor__process(TRenderingProcessor * this, char * param_1);
undefined JMessage__TRenderingProcessor__do_begin(TRenderingProcessor * this, void * param_1, char * param_2);
undefined JMessage__TRenderingProcessor__do_end(TRenderingProcessor * this);
undefined JMessage__TRenderingProcessor__do_begin_(TRenderingProcessor * this, void * param_1, char * param_2);
undefined JMessage__TRenderingProcessor__do_end_(TRenderingProcessor * this);
undefined JMessage__TRenderingProcessor__do_tag_(TRenderingProcessor * this, ulong param_1, void * param_2, ulong param_3);
undefined JMessage__TRenderingProcessor__do_systemTagCode_(TRenderingProcessor * this, ushort param_1, void * param_2, ulong param_3);
void JMessage__TResourceContainer__TResourceContainer(TResourceContainer * this);
undefined JMessage__TResourceContainer__Get_groupID(TResourceContainer * this, ushort param_1);
undefined JMessage__TResourceContainer__SetEncoding(TResourceContainer * this, uchar param_1);
undefined JMessage__TResourceContainer__Do_create(TResourceContainer * this);
undefined JMessage__TResourceContainer__Do_destroy(TResourceContainer * this, TResource * param_1);
undefined JMessage__TResourceContainer__SetEncoding_(TResourceContainer * this, uchar param_1);
void JMessage__TParse__TParse(TParse * this, TResourceContainer * param_1);
void JMessage__TParse__TParse_destructor(TParse * this);
undefined JMessage__TParse__parseHeader_next(TParse * this, void * * param_1, ulong * param_2, ulong param_3);
undefined JMessage__TParse__parseBlock_next(TParse * this, void * * param_1, ulong * param_2, ulong param_3);
undefined JUTFont__isLeadByte_1Byte(JUTFont * this, int param_1);
undefined JUTFont__isLeadByte_2Byte(JUTFont * this, int param_1);
undefined JUTFont__isLeadByte_ShiftJIS(JUTFont * this, int param_1);
undefined gba__ShortCommandProc();
undefined gba__GBAInit();
undefined gba__GBAGetStatusAsync();
undefined gba__GBAGetStatus();
undefined gba__GBAResetAsync();
undefined gba__GBAReset();
undefined gba__OnReset();
undefined gba__GBAGetProcessStatus();
undefined gba__GBAJoyBootAsync();
undefined gba__F23();
undefined gba__F25();
undefined gba__F27();
undefined gba__F29();
undefined gba__F31();
undefined gba__F33();
undefined gba__F35();
undefined gba__F37();
undefined gba__F39();
undefined gba__GBAJoyBoot();
undefined gba__ReadProc();
undefined gba__GBAReadAsync();
undefined gba__GBARead();
undefined gba__WriteProc();
undefined gba__GBAWriteAsync();
undefined gba__GBAWrite();
undefined gba____GBAHandler();
undefined gba____GBASyncCallback();
undefined gba____GBASync();
undefined gba__TypeAndStatusCallback();
undefined gba____GBATransfer();
undefined gba____GBASetDelay();
void JAIZelBasic__JAIZelBasic(JAIZelBasic * this);
undefined JAIZelBasic__zeldaGFrameWork(JAIZelBasic * this);
undefined JAIZelBasic__heartGaugeOn(JAIZelBasic * this);
undefined JAIZelBasic__processHeartGaugeSound(JAIZelBasic * this);
undefined JAIZelBasic__gframeProcess(JAIZelBasic * this);
undefined JAIZelBasic__resetProcess(JAIZelBasic * this);
undefined JAIZelBasic__resetRecover(JAIZelBasic * this);
undefined JAIZelBasic__bgmStreamPrepare(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__bgmStreamPlay(JAIZelBasic * this);
undefined JAIZelBasic__bgmStart(JAIZelBasic * this, uint bgmId, ulong param_2, long param_3);
undefined JAIZelBasic__bgmStop(JAIZelBasic * this, ulong param_1, long param_2);
undefined JAIZelBasic__mainBgmStopOnly(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__subBgmStart(JAIZelBasic * this, ulong bgmId);
undefined JAIZelBasic__subBgmStop(JAIZelBasic * this);
undefined JAIZelBasic__subBgmStopInner(JAIZelBasic * this);
undefined JAIZelBasic__bgmNowBattle(JAIZelBasic * this, float param_1);
undefined JAIZelBasic__bgmBattleGFrame(JAIZelBasic * this);
undefined JAIZelBasic__stopBattleBgm(JAIZelBasic * this);
undefined JAIZelBasic__bgmNowKaitengiri(JAIZelBasic * this);
undefined JAIZelBasic__bgmHitSound(JAIZelBasic * this, long param_1);
undefined JAIZelBasic__bgmSetSwordUsing(JAIZelBasic * this, long param_1);
undefined JAIZelBasic__onEnemyDamage(JAIZelBasic * this);
undefined JAIZelBasic__mbossBgmMuteProcess(JAIZelBasic * this);
undefined JAIZelBasic__mbossBgmNearByProcess(JAIZelBasic * this, float param_1);
undefined JAIZelBasic__checkBgmPlaying(JAIZelBasic * this);
undefined JAIZelBasic__checkPlayingMainBgmFlag(JAIZelBasic * this);
undefined JAIZelBasic__checkSubBgmPlaying(JAIZelBasic * this);
undefined JAIZelBasic__checkPlayingSubBgmFlag(JAIZelBasic * this);
undefined JAIZelBasic__checkPlayingStreamBgmFlag(JAIZelBasic * this);
undefined JAIZelBasic__changeBgmStatus(JAIZelBasic * this, long param_1);
undefined JAIZelBasic__changeSubBgmStatus(JAIZelBasic * this, long param_1);
undefined JAIZelBasic__bgmMuteMtDragon(JAIZelBasic * this);
undefined JAIZelBasic__enemyNearBy(JAIZelBasic * this);
undefined JAIZelBasic__enemyNearByGFrame(JAIZelBasic * this);
undefined JAIZelBasic__bgmAllMute(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__taktModeMute(JAIZelBasic * this);
undefined JAIZelBasic__taktModeMuteOff(JAIZelBasic * this);
undefined JAIZelBasic__cbPracticePlay(JAIZelBasic * this, Vec * param_1);
undefined JAIZelBasic__cbPracticeProcess(JAIZelBasic * this);
undefined JAIZelBasic__cbPracticeStop(JAIZelBasic * this);
undefined JAIZelBasic__checkCbPracticePlay(JAIZelBasic * this);
undefined JAIZelBasic__prepareLandingDemo(JAIZelBasic * this, long param_1);
undefined JAIZelBasic__startLandingDemo(JAIZelBasic * this);
undefined JAIZelBasic__endLandingDemo(JAIZelBasic * this);
undefined JAIZelBasic__initSe(JAIZelBasic * this);
undefined JAIZelBasic__seStart(JAIZelBasic * this, ulong param_1, Vec * param_2, ulong param_3, char param_4, float param_5, float param_6, float param_7, float param_8, uchar param_9);
undefined JAIZelBasic__seStop(JAIZelBasic * this, ulong param_1, long param_2);
undefined JAIZelBasic__checkSePlaying(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__seStopActor(JAIZelBasic * this, Vec * param_1, ulong param_2);
undefined JAIZelBasic__seDeleteObject(JAIZelBasic * this, Vec * param_1);
undefined JAIZelBasic__getLinkVoiceVowel(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__linkVoiceStart(JAIZelBasic * this, ulong param_1, Vec * param_2, uchar param_3, char param_4);
undefined JAIZelBasic__monsSeInit(JAIZelBasic * this);
undefined JAIZelBasic__monsSeStart(JAIZelBasic * this, ulong param_1, Vec * param_2, ulong param_3, ulong param_4, char param_5);
undefined JAIZelBasic__kuroboMotionPlay(JAIZelBasic * this, ulong param_1, Vec * param_2, ulong param_3, char param_4);
undefined JAIZelBasic__kuroboVoicePlay(JAIZelBasic * this, ulong param_1, Vec * param_2, char param_3);
undefined JAIZelBasic__setLevObjSE(JAIZelBasic * this, ulong param_1, Vec * param_2, char param_3);
undefined JAIZelBasic__processLevObjSE(JAIZelBasic * this);
undefined JAIZelBasic__initLevObjSE(JAIZelBasic * this);
undefined JAIZelBasic__charVoicePlay(JAIZelBasic * this, long param_1, long param_2, Vec * param_3, char param_4);
undefined JAIZelBasic__messageSePlay(JAIZelBasic * this, ushort param_1, Vec * param_2, char param_3);
undefined JAIZelBasic__shipCruiseSePlay(JAIZelBasic * this, Vec * param_1, float param_2);
undefined JAIZelBasic__setShipSailState(JAIZelBasic * this, long param_1);
int JAIZelBasic__init(JAIZelBasic * this, EVP_PKEY_CTX * ctx);
undefined JAIZelBasic__setOutputMode(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__talkIn(JAIZelBasic * this);
undefined JAIZelBasic__talkOut(JAIZelBasic * this);
undefined JAIZelBasic__menuIn(JAIZelBasic * this);
undefined JAIZelBasic__menuOut(JAIZelBasic * this);
undefined JAIZelBasic__getCameraInfo(JAIZelBasic * this, Vec * param_1, float * param_2, ulong param_3);
undefined JAIZelBasic__getCameraMapInfo(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__setCameraPolygonPos(JAIZelBasic * this, Vec * param_1);
undefined JAIZelBasic__setCameraGroupInfo(JAIZelBasic * this, uchar param_1);
undefined JAIZelBasic__changeSeaBgm(JAIZelBasic * this);
undefined JAIZelBasic__startIsleBgm(JAIZelBasic * this);
undefined JAIZelBasic__setLinkGroupInfo(JAIZelBasic * this, uchar param_1);
undefined JAIZelBasic__getMapInfoFxline(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__getMapInfoFxParameter(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__getMapInfoGround(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__setScene(JAIZelBasic * this, long param_1, long param_2, long param_3, long param_4);
undefined JAIZelBasic__expandSceneBgmNum(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__checkLinkOnSea(JAIZelBasic * this);
undefined JAIZelBasic__checkLinkOnBoardSea(JAIZelBasic * this);
undefined JAIZelBasic__setSceneName(JAIZelBasic * this, char * param_1, long param_2, long param_3);
undefined JAIZelBasic__spotNameToId(JAIZelBasic * this, char * param_1);
undefined JAIZelBasic__sceneChange(JAIZelBasic * this, ulong param_1, ulong param_2, ulong param_3, long param_4);
undefined JAIZelBasic__sceneBgmStart(JAIZelBasic * this);
undefined JAIZelBasic__load1stDynamicWave(JAIZelBasic * this);
undefined JAIZelBasic__check1stDynamicWave(JAIZelBasic * this);
undefined JAIZelBasic__load2ndDynamicWave(JAIZelBasic * this);
undefined JAIZelBasic__loadStaticWaves(JAIZelBasic * this);
undefined JAIZelBasic__checkFirstWaves(JAIZelBasic * this);
undefined JAIZelBasic__setLinkHp(JAIZelBasic * this, long param_1, long param_2);
undefined JAIZelBasic__setLinkSwordType(JAIZelBasic * this, long param_1, long param_2);
undefined JAIZelBasic__setLinkShieldType(JAIZelBasic * this, long param_1, long param_2);
undefined JAIZelBasic__setLinkBootsType(JAIZelBasic * this, long param_1);
undefined JAIZelBasic__setLinkOnBoard(JAIZelBasic * this, long param_1);
undefined JAIZelBasic__bgmMute(JAIZelBasic * this, JAISound * * param_1, ulong param_2, long param_3, ulong param_4);
undefined JAIZelBasic__checkStreamPlaying(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__stWaterLevelUp(JAIZelBasic * this);
undefined JAIZelBasic__stWaterLevelDown(JAIZelBasic * this);
undefined JAIZelBasic__stSkyCloisters(JAIZelBasic * this);
undefined JAIZelBasic__stSkyCloistersProcess(JAIZelBasic * this);
undefined JAIZelBasic__getRandomU32(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__setEventBit(JAIZelBasic * this, void * param_1);
undefined JAIZelBasic__checkEventBit(JAIZelBasic * this, ushort param_1);
undefined JAIZelBasic__checkDayTime(JAIZelBasic * this);
undefined JAIZelBasic__processTime(JAIZelBasic * this);
undefined JAIZelBasic__processMorningToNormal(JAIZelBasic * this);
undefined JAIZelBasic__checkOnOuterSea(JAIZelBasic * this, float * param_1);
undefined JAIZelBasic__makeSound(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__checkSeqIDDemoPlaying(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__checkDemoFanfarePlaying(JAIZelBasic * this);
undefined JAIZelBasic__processDemoFanfareMute(JAIZelBasic * this);
undefined JAIZelBasic__muteMainBgmAll(JAIZelBasic * this);
undefined JAIZelBasic__unmuteMainBgmAll(JAIZelBasic * this);
undefined JAIZelBasic__demoBgmStop(JAIZelBasic * this, ulong param_1);
undefined JAIZelBasic__isDemo(JAIZelBasic * this);
undefined JAIZelBasic__checkSeaBgmID(JAIZelBasic * this);
void JAIZelSound__JAIZelSound_destructor(JAIZelSound * this);
undefined JAIZelAnime__setAnimSound(JAIZelAnime * this, cXyz * param_1, float param_2, float param_3, ulong param_4, char param_5);
undefined JAIZelAnime__startAnimSound(JAIZelAnime * this, void * param_1, ulong param_2, JAISound * * param_3, Actor * param_4, uchar param_5);
undefined JAIZelAnime__setSpeedModifySound(JAIZelAnime * this, JAISound * param_1, JAIAnimeFrameSoundData * param_2, float param_3);
undefined JAIZelAnime__setPlayPosition(JAIZelAnime * this, float param_1);
undefined JAIZelBasic__initSeaEnvPos(JAIZelBasic * this);
undefined JAIZelBasic__registSeaEnvPos(JAIZelBasic * this, Vec * param_1);
undefined JAIZelBasic__seaEnvSePlay(JAIZelBasic * this, ulong param_1, char param_2);
undefined JAIZelBasic__calcPosPanLR(JAIZelBasic * this, Vec * param_1);
undefined JAIZelBasic__calcPosPanSR(JAIZelBasic * this, Vec * param_1, float param_2);
undefined JAIZelBasic__calcPosVolume(JAIZelBasic * this, Vec * param_1, float param_2);
undefined JAIZelBasic__seaShoreSE(JAIZelBasic * this, ulong param_1, Vec * param_2, ulong param_3, char param_4);
undefined JAIZelBasic__initRiverPos(JAIZelBasic * this);
undefined JAIZelBasic__registRiverPos(JAIZelBasic * this, Vec * param_1);
undefined JAIZelBasic__riverSePlay(JAIZelBasic * this, uchar param_1, char param_2);
undefined JAIZelBasic__waterfallSePlay(JAIZelBasic * this, uchar param_1, Vec * param_2, char param_3);
undefined JAIZelBasic__initWindowPos(JAIZelBasic * this);
undefined JAIZelBasic__registWindowPos(JAIZelBasic * this, Vec * param_1);
undefined JAIZelBasic__rainPlay(JAIZelBasic * this, long param_1);
void JAIZelInst__JAIZelInst(JAIZelInst * this);
undefined JAIZelInst__reset(JAIZelInst * this);
undefined JAIZelInst__playArmSwing(JAIZelInst * this, long param_1, long param_2);
undefined JAIZelInst__stopArmSwing(JAIZelInst * this);
undefined JAIZelInst__setStickPos(JAIZelInst * this, long param_1, long param_2);
undefined JAIZelInst__play(JAIZelInst * this);
undefined JAIZelInst__setBeat(JAIZelInst * this, long param_1);
undefined JAIZelInst__setVolume(JAIZelInst * this, float param_1);
undefined JAIZelInst__metronomePlay(JAIZelInst * this, long param_1, long param_2);
undefined JAIZelInst__judge(JAIZelInst * this, long param_1, long param_2);
undefined JAIZelInst__ambientPlay(JAIZelInst * this);
undefined JAIZelInst__armSoundPlay(JAIZelInst * this, long param_1);
undefined JAIZelInst__getMelodyPattern(JAIZelInst * this, long param_1, long param_2, long * param_3);
undefined JAIZelInst__getMelodyBeat(JAIZelInst * this, long param_1);
undefined JAIZelInst__getMelodyGFrames(JAIZelInst * this, long param_1);
undefined JAIZelInst__melodyPlay(JAIZelInst * this, long param_1);
undefined JAIZelInst__melodyStop(JAIZelInst * this);
void JAIZelSound__JAIZelSound(JAIZelSound * this);
undefined JAIZelSound__setDistanceVolumeCommon(JAIZelSound * this, float param_1, uchar param_2);
undefined JAIZelSound__setSeDistanceVolume(JAIZelSound * this, uchar param_1);
undefined JAIZelSound__setSeDistancePan(JAIZelSound * this, uchar param_1);
undefined JAIZelSound__setSeDistanceDolby(JAIZelSound * this, uchar param_1);
undefined gf__GFSetVtxDescv();
undefined gf__GFSetVtxAttrFmtv();
undefined gf__GFSetArray();
undefined gf__GFSetCullMode();
undefined gf__GFSetChanMatColor();
undefined gf__GFSetFog();
undefined gf__GFSetBlendModeEtc();
undefined gf__GFSetTevColor();
undefined gf__GFSetTevColorS10();
undefined gf__GFSetAlphaCompare();
undefined gf__GFLoadPosMtxImm(MTX34 * param_1, undefined4 param_2);
undefined gf__GFLoadNrmMtxImm();
undefined gf__GFSetCurrentMtx(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined4 param_9);
void JKRHeap__JKRHeap(JKRHeap * this, void * param_1, ulong param_2, JKRHeap * param_3, bool param_4);
void JKRHeap__JKRHeap_destructor(JKRHeap * this);
undefined JKRHeap__initArena(JKRHeap * this, char * * param_1, ulong * param_2, int param_3);
undefined JKRHeap__becomeSystemHeap(JKRHeap * this);
undefined JKRHeap__becomeCurrentHeap(JKRHeap * this);
undefined JKRHeap__destroy(JKRHeap * this);
undefined JKRHeap__alloc(ulong size, int param_2, JKRHeap * heap);
// JKRHeap * JKRHeap__alloc(JKRHeap * this, ulong size, int param_2);
void JKRHeap__free(JKRHeap * this, void * __ptr);
// void JKRHeap__free(JKRHeap * this, void * __ptr);
undefined JKRHeap__callAllDisposer(JKRHeap * this);
undefined JKRHeap__freeAll(JKRHeap * this);
undefined JKRHeap__freeTail(JKRHeap * this);
undefined JKRHeap__resize(JKRHeap * this, void * param_1, ulong param_2, JKRHeap * param_3);
// undefined JKRHeap__resize(JKRHeap * this, void * param_1, ulong param_2);
undefined JKRHeap__getSize(JKRHeap * this, void * param_1, JKRHeap * param_2);
// undefined JKRHeap__getSize(JKRHeap * this, void * param_1);
undefined JKRHeap__getFreeSize(JKRHeap * this);
undefined JKRHeap__getMaxFreeBlock(JKRHeap * this);
undefined JKRHeap__getTotalFreeSize(JKRHeap * this);
int JKRHeap__getCurrentGroupId(JKRHeap * this);
undefined JKRHeap__getMaxAllocatableSize(JKRHeap * this, int param_1);
JKRHeap * JKRHeap__findFromRoot(void * param_1);
undefined JKRHeap__find(JKRHeap * this, void * param_1);
undefined JKRHeap__dispose_subroutine(JKRHeap * this, ulong param_1, ulong param_2);
undefined JKRHeap__dispose(JKRHeap * this, void * param_1, ulong param_2);
// undefined JKRHeap__dispose(JKRHeap * this, void * param_1, void * param_2);
// undefined JKRHeap__dispose(JKRHeap * this);
undefined JKRHeap__copyMemory(JKRHeap * this, void * param_1, void * param_2, ulong param_3);
undefined JKernel__JKRDefaultMemoryErrorRoutine();
undefined JKRHeap__setErrorFlag(JKRHeap * this, bool param_1);
undefined JKRHeap__setErrorHandler(JKRHeap * this, void * param_1);
void * JKernel__operator_new(ulong size);
// void * JKernel__operator_new(ulong size, undefined4 param_2);
// void * JKernel__operator_new(ulong size, JKRHeap * heap, undefined4 param_3);
undefined JKernel__operator_new_array();
// undefined JKernel__operator_new_array();
// undefined JKernel__operator_new_array();
undefined JKernel__operator_delete();
undefined JKernel__operator_delete_array();
undefined JKRHeap__state_register(JKRHeap * this, TState * param_1, ulong param_2);
undefined JKRHeap__state_compare(JKRHeap * this, TState * param_1, TState * param_2);
undefined JKRHeap__state_dump(JKRHeap * this, TState * param_1);
undefined JKRHeap__do_changeGroupID(JKRHeap * this, uchar param_1);
undefined JKRHeap__do_getCurrentGroupId(JKRHeap * this);
undefined JKRStdHeap__create(JKRStdHeap * this, ulong param_1, JKRHeap * param_2, bool param_3);
undefined JKRStdHeap__do_destroy(JKRStdHeap * this);
void JKRStdHeap__JKRStdHeap(JKRStdHeap * this, void * param_1, ulong param_2, JKRHeap * param_3, bool param_4);
void JKRStdHeap__JKRStdHeap_destructor(JKRStdHeap * this);
undefined JKRStdHeap__do_alloc(JKRStdHeap * this, ulong param_1, int param_2);
undefined JKRStdHeap__do_free(JKRStdHeap * this, void * param_1);
undefined JKRStdHeap__do_freeAll(JKRStdHeap * this);
undefined JKRStdHeap__do_freeTail(JKRStdHeap * this);
undefined JKRStdHeap__do_resize(JKRStdHeap * this, void * param_1, ulong param_2);
undefined JKRStdHeap__do_getFreeSize(JKRStdHeap * this);
undefined JKRStdHeap__do_getMaxFreeBlock(JKRStdHeap * this);
undefined JKRStdHeap__state_register(JKRStdHeap * this, TState * param_1, ulong param_2);
undefined JKRStdHeap__state_compare(JKRStdHeap * this, TState * param_1, TState * param_2);
undefined JKRStdHeap__do_freeFill(JKRStdHeap * this);
undefined JKRStdHeap__getHeapType(JKRStdHeap * this);
undefined JKRStdHeap__check(JKRStdHeap * this);
undefined JKRStdHeap__dump(JKRStdHeap * this);
undefined JKRStdHeap__do_getSize(JKRStdHeap * this, void * param_1);
undefined JKRStdHeap__do_getTotalFreeSize(JKRStdHeap * this);
undefined JKRExpHeap__createRoot(JKRExpHeap * this, int param_1, bool param_2);
JKRExpHeap * JKRExpHeap__create(ulong param_1, JKRHeap * param_2, bool param_3);
undefined JKRExpHeap__do_destroy(JKRExpHeap * this);
void JKRExpHeap__JKRExpHeap(JKRExpHeap * this, void * param_1, ulong param_2, JKRHeap * param_3, bool param_4);
void JKRExpHeap__JKRExpHeap_destructor(JKRExpHeap * this);
undefined JKRExpHeap__do_alloc(JKRExpHeap * this, ulong param_1, int param_2);
undefined JKRExpHeap__allocFromHead(JKRExpHeap * this, ulong param_1, int param_2);
// undefined JKRExpHeap__allocFromHead(JKRExpHeap * this, ulong param_1);
undefined JKRExpHeap__allocFromTail(JKRExpHeap * this, ulong param_1, int param_2);
// undefined JKRExpHeap__allocFromTail(JKRExpHeap * this, ulong param_1);
undefined JKRExpHeap__do_free(JKRExpHeap * this, void * param_1);
undefined JKRExpHeap__do_freeAll(JKRExpHeap * this);
undefined JKRExpHeap__do_freeTail(JKRExpHeap * this);
undefined JKRExpHeap__do_changeGroupID(JKRExpHeap * this, uchar param_1);
undefined JKRExpHeap__do_resize(JKRExpHeap * this, void * param_1, ulong param_2);
undefined JKRExpHeap__do_getSize(JKRExpHeap * this, void * param_1);
undefined JKRExpHeap__do_getFreeSize(JKRExpHeap * this);
undefined JKRExpHeap__do_getMaxFreeBlock(JKRExpHeap * this);
undefined JKRExpHeap__do_getTotalFreeSize(JKRExpHeap * this);
undefined JKRExpHeap__getUsedSize(JKRExpHeap * this, uchar param_1);
undefined JKRExpHeap__getTotalUsedSize(JKRExpHeap * this);
undefined JKRExpHeap__appendUsedList(JKRExpHeap * this, CMemBlock * param_1);
undefined JKRExpHeap__setFreeBlock(JKRExpHeap * this, CMemBlock * param_1, CMemBlock * param_2, CMemBlock * param_3);
undefined JKRExpHeap__removeFreeBlock(JKRExpHeap * this, CMemBlock * param_1);
undefined JKRExpHeap__removeUsedBlock(JKRExpHeap * this, CMemBlock * param_1);
undefined JKRExpHeap__recycleFreeBlock(JKRExpHeap * this, CMemBlock * param_1);
undefined JKRExpHeap__joinTwoBlocks(JKRExpHeap * this, CMemBlock * param_1);
undefined JKRExpHeap__check(JKRExpHeap * this);
undefined JKRExpHeap__do_freeFill(JKRExpHeap * this);
undefined JKRExpHeap__dump(JKRExpHeap * this);
undefined JKRExpHeap__dump_sort_by_address(JKRExpHeap * this);
undefined JKRExpHeap__dump_sort(JKRExpHeap * this);
undefined JKRExpHeap__CMemBlock__initiate(CMemBlock * this, CMemBlock * param_1, CMemBlock * param_2, ulong param_3, uchar param_4, uchar param_5);
undefined JKRExpHeap__CMemBlock__allocFore(CMemBlock * this, ulong param_1, uchar param_2, uchar param_3, uchar param_4, uchar param_5);
undefined JKRExpHeap__CMemBlock__allocBack(CMemBlock * this, ulong param_1, uchar param_2, uchar param_3, uchar param_4, uchar param_5);
void JKRExpHeap__CMemBlock__free(CMemBlock * this, void * __ptr);
undefined JKRExpHeap__CMemBlock__getHeapBlock(CMemBlock * this, void * param_1);
undefined JKRExpHeap__state_register(JKRExpHeap * this, TState * param_1, ulong param_2);
undefined JKRExpHeap__state_compare(JKRExpHeap * this, TState * param_1, TState * param_2);
undefined JKRExpHeap__getHeapType(JKRExpHeap * this);
undefined JKRExpHeap__do_getCurrentGroupId(JKRExpHeap * this);
JKRSolidHeap * JKRSolidHeap__create(ulong param_1, JKRHeap * param_2, bool param_3);
undefined JKRSolidHeap__do_destroy(JKRSolidHeap * this);
void JKRSolidHeap__JKRSolidHeap(JKRSolidHeap * this, void * param_1, ulong param_2, JKRHeap * param_3, bool param_4);
void JKRSolidHeap__JKRSolidHeap_destructor(JKRSolidHeap * this);
undefined JKRSolidHeap__adjustSize(JKRSolidHeap * this);
undefined JKRSolidHeap__do_alloc(JKRSolidHeap * this, ulong param_1, int param_2);
undefined JKRSolidHeap__allocFromHead(JKRSolidHeap * this, ulong param_1, int param_2);
undefined JKRSolidHeap__allocFromTail(JKRSolidHeap * this, ulong param_1, int param_2);
undefined JKRSolidHeap__do_free(JKRSolidHeap * this, void * param_1);
undefined JKRSolidHeap__do_freeAll(JKRSolidHeap * this);
undefined JKRSolidHeap__do_freeTail(JKRSolidHeap * this);
undefined JKRSolidHeap__do_resize(JKRSolidHeap * this, void * param_1, ulong param_2);
undefined JKRSolidHeap__do_getSize(JKRSolidHeap * this, void * param_1);
undefined JKRSolidHeap__check(JKRSolidHeap * this);
undefined JKRSolidHeap__do_freeFill(JKRSolidHeap * this);
undefined JKRSolidHeap__dump(JKRSolidHeap * this);
undefined JKRSolidHeap__state_register(JKRSolidHeap * this, TState * param_1, ulong param_2);
undefined JKRSolidHeap__state_compare(JKRSolidHeap * this, TState * param_1, TState * param_2);
undefined JKRSolidHeap__getHeapType(JKRSolidHeap * this);
undefined JKRSolidHeap__do_getFreeSize(JKRSolidHeap * this);
undefined JKRSolidHeap__do_getMaxFreeBlock(JKRSolidHeap * this);
undefined JKRSolidHeap__do_getTotalFreeSize(JKRSolidHeap * this);
void JKRDisposer__JKRDisposer(JKRDisposer * this);
void JKRDisposer__JKRDisposer_destructor(JKRDisposer * this);
void JKRThread__JKRThread(JKRThread * this, ulong param_1, int param_2, int param_3);
// void JKRThread__JKRThread(JKRThread * this, OSThread * param_1, int param_2);
void JKRThread__JKRThread_destructor(JKRThread * this);
undefined JKRThread__start(JKRThread * this, void * param_1);
void JKRThreadSwitch__JKRThreadSwitch(JKRThreadSwitch * this, JKRHeap * param_1);
undefined JKRThreadSwitch__createManager(JKRThreadSwitch * this, JKRHeap * param_1);
undefined JKRThreadSwitch__callback(JKRThreadSwitch * this, OSThread * param_1, OSThread * param_2);
undefined JKRThread__run(JKRThread * this);
void JKRThreadSwitch__JKRThreadSwitch_destructor(JKRThreadSwitch * this);
undefined JKernel____sinit_JKRThread_cpp();
undefined JSUList__JKRThread____JSUList_destructor(JSUList__JKRThread__ * this);
undefined JKRAram__create(JKRAram * this, ulong param_1, ulong param_2, long param_3, long param_4, long param_5);
void JKRAram__JKRAram(JKRAram * this, ulong param_1, ulong param_2, long param_3);
void JKRAram__JKRAram_destructor(JKRAram * this);
undefined JKRAram__run(JKRAram * this);
undefined JKRAram__checkOkAddress(JKRAram * this, uchar * param_1, ulong param_2, JKRAramBlock * param_3, ulong param_4);
undefined JKRAram__changeGroupIdIfNeed(JKRAram * this, uchar * param_1, int param_2);
undefined JKRAram__mainRamToAram(JKRAram * this, uchar * param_1, ulong param_2, ulong param_3, JKRExpandSwitch param_4, ulong param_5, JKRHeap * param_6, int param_7);
// undefined JKRAram__mainRamToAram(JKRAram * this, uchar * param_1, JKRAramBlock * param_2, ulong param_3, JKRExpandSwitch param_4, ulong param_5, JKRHeap * param_6, int param_7);
undefined JKRAram__aramToMainRam(JKRAram * this, ulong param_1, uchar * param_2, ulong param_3, JKRExpandSwitch param_4, ulong param_5, JKRHeap * param_6, int param_7, ulong * param_8);
// undefined JKRAram__aramToMainRam(JKRAram * this, JKRAramBlock * param_1, uchar * param_2, ulong param_3, ulong param_4, JKRExpandSwitch param_5, ulong param_6, JKRHeap * param_7, int param_8, ulong * param_9);
undefined JKernel__JKRDecompressFromAramToMainRam();
undefined JKernel__decompSZS_subroutine();
undefined JKernel__firstSrcData();
undefined JKernel__nextSrcData();
undefined JKernel____sinit_JKRAram_cpp();
undefined JSUList__JKRAMCommand____JSUList_destructor(JSUList__JKRAMCommand__ * this);
void JKRAramHeap__JKRAramHeap(JKRAramHeap * this, ulong param_1, ulong param_2);
void JKRAramHeap__JKRAramHeap_destructor(JKRAramHeap * this);
undefined JKRAramHeap__alloc(JKRAramHeap * this, ulong size, EAllocMode mode);
undefined JKRAramHeap__allocFromHead(JKRAramHeap * this, ulong size);
undefined JKRAramHeap__allocFromTail(JKRAramHeap * this, ulong param_1);
undefined JKRAramHeap__getFreeSize(JKRAramHeap * this);
undefined JKRAramHeap__getTotalFreeSize(JKRAramHeap * this);
undefined JKRAramHeap__dump(JKRAramHeap * this);
undefined JKernel____sinit_JKRAramHeap_cpp();
undefined JSUList__JKRAramBlock____JSUList_destructor(JSUList__JKRAramBlock__ * this);
void JKRAramBlock__JKRAramBlock(JKRAramBlock * this, ulong param_1, ulong param_2, ulong param_3, uchar param_4, bool param_5);
void JKRAramBlock__JKRAramBlock_destructor(JKRAramBlock * this);
undefined JKRAramBlock__allocHead(JKRAramBlock * this, ulong param_1, uchar param_2, JKRAramHeap * param_3);
undefined JKRAramBlock__allocTail(JKRAramBlock * this, ulong param_1, uchar param_2, JKRAramHeap * param_3);
undefined JKRAramPiece__prepareCommand(JKRAramPiece * this, int param_1, ulong param_2, ulong param_3, ulong param_4, JKRAramBlock * param_5, void * param_6);
undefined JKRAramPiece__sendCommand(JKRAramPiece * this, JKRAMCommand * param_1);
undefined JKRAramPiece__orderAsync(JKRAramPiece * this, int param_1, ulong param_2, ulong param_3, ulong param_4, JKRAramBlock * param_5, void * param_6);
void JKRAramPiece__sync(JKRAramPiece * this);
undefined JKRAramPiece__orderSync(JKRAramPiece * this, int param_1, ulong param_2, ulong param_3, ulong param_4, JKRAramBlock * param_5);
undefined JKRAramPiece__startDMA(JKRAramPiece * this, JKRAMCommand * param_1);
undefined JKRAramPiece__doneDMA(JKRAramPiece * this, ulong param_1);
void JKRAMCommand__JKRAMCommand(JKRAMCommand * this);
void JKRAMCommand__JKRAMCommand_destructor(JKRAMCommand * this);
undefined JKernel____sinit_JKRAramPiece_cpp();
undefined JKRAramStream__create(JKRAramStream * this, long param_1);
void JKRAramStream__JKRAramStream(JKRAramStream * this, long param_1);
void JKRAramStream__JKRAramStream_destructor(JKRAramStream * this);
undefined JKRAramStream__run(JKRAramStream * this);
undefined JKRAramStream__readFromAram(JKRAramStream * this);
undefined JKRAramStream__writeToAram(JKRAramStream * this, JKRAramStreamCommand * param_1);
undefined JKRAramStream__write_StreamToAram_Async(JKRAramStream * this, JSUFileInputStream * param_1, ulong param_2, ulong param_3, ulong param_4);
void JKRAramStream__sync(JKRAramStream * this);
undefined JKRAramStream__setTransBuffer(JKRAramStream * this, uchar * param_1, ulong param_2, JKRHeap * param_3);
void JKRAramStreamCommand__JKRAramStreamCommand(JKRAramStreamCommand * this);
undefined JSURandomInputStream__getAvailable(JSURandomInputStream * this);
void JKRFileLoader__JKRFileLoader(JKRFileLoader * this);
void JKRFileLoader__JKRFileLoader_destructor(JKRFileLoader * this);
undefined JKRFileLoader__unmount(JKRFileLoader * this);
undefined4 JKRFileLoader__getGlbResource(char * param_1);
// undefined JKRFileLoader__getGlbResource(JKRFileLoader * this, char * param_1, JKRFileLoader * param_2);
undefined JKRFileLoader__removeResource(JKRFileLoader * this, void * param_1, JKRFileLoader * param_2);
undefined JKRFileLoader__detachResource(JKRFileLoader * this, void * param_1, JKRFileLoader * param_2);
int JKRFileLoader__findVolume(char * * param_1);
char * JKRFileLoader__fetchVolumeName(char * param_1, long param_2, char * param_3);
undefined JKernel____sinit_JKRFileLoader_cpp();
undefined JSUList__JKRFileLoader____JSUList_destructor(JSUList__JKRFileLoader__ * this);
void JKRArcFinder__JKRArcFinder(JKRArcFinder * this, JKRArchive * param_1, long param_2, long param_3);
undefined JKRArcFinder__findNextFile(JKRArcFinder * this);
void JKRDvdFinder__JKRDvdFinder(JKRDvdFinder * this, char * param_1);
void JKRDvdFinder__JKRDvdFinder_destructor(JKRDvdFinder * this);
undefined JKRDvdFinder__findNextFile(JKRDvdFinder * this);
void JKRArcFinder__JKRArcFinder_destructor(JKRArcFinder * this);
int JKRFileCache__mount(JKRFileCache * this, char * __special_file, char * __dir, char * __fstype, ulong __rwflag, void * __data);
void JKRFileCache__JKRFileCache(JKRFileCache * this, char * param_1, char * param_2);
void JKRFileCache__JKRFileCache_destructor(JKRFileCache * this);
undefined JKRFileCache__becomeCurrent(JKRFileCache * this, char * param_1);
undefined JKRFileCache__getResource(JKRFileCache * this, char * param_1);
// undefined JKRFileCache__getResource(JKRFileCache * this, ulong param_1, char * param_2);
undefined JKRFileCache__readResource(JKRFileCache * this, void * param_1, ulong param_2, char * param_3);
// undefined JKRFileCache__readResource(JKRFileCache * this, void * param_1, ulong param_2, ulong param_3, char * param_4);
undefined JKRFileCache__removeResourceAll(JKRFileCache * this);
undefined JKRFileCache__removeResource(JKRFileCache * this, void * param_1);
undefined JKRFileCache__detachResource(JKRFileCache * this, void * param_1);
undefined JKRFileCache__getResSize(JKRFileCache * this, void * param_1);
undefined JKRFileCache__countFile(JKRFileCache * this, char * param_1);
undefined JKRFileCache__getFirstFile(JKRFileCache * this, char * param_1);
undefined JKRFileCache__findCacheBlock(JKRFileCache * this, void * param_1);
// undefined JKRFileCache__findCacheBlock(JKRFileCache * this, ulong param_1);
undefined JKRFileCache__findFile(JKRFileCache * this, char * param_1, char * param_2);
undefined JKRFileCache__getDvdPathName(JKRFileCache * this, char * param_1);
undefined JKRFileCache__convStrLower(JKRFileCache * this, char * param_1);
void JKRFileCache__CCacheBlock__CCacheBlock(CCacheBlock * this, ulong param_1, ulong param_2, void * param_3);
undefined JKRFileCache__getFsResource(JKRFileCache * this, char * param_1);
undefined JKRFileCache__getNameResource(JKRFileCache * this, ulong param_1, char * param_2);
undefined JKRFileCache__readFsResource(JKRFileCache * this, void * param_1, ulong param_2, char * param_3);
undefined JKRFileCache__readNameResource(JKRFileCache * this, void * param_1, ulong param_2, ulong param_3, char * param_4);
undefined JKRArchive__check_mount_already(long param_1);
int JKRArchive__mount(JKRArchive * this, char * __special_file, char * __dir, char * __fstype, ulong __rwflag, void * __data);
// int JKRArchive__mount(long param_1, EMountMode mountMode, JKRHeap * param_3, EMountDirection param_4);
undefined JKRArchive__becomeCurrent(JKRArchive * this, char * param_1);
undefined JKRArchive__getDirEntry(JKRArchive * this, SDirEntry * param_1, ulong param_2);
int JKRArchive__getGlbResource(ulong param_1, char * param_2, JKRArchive * param_3);
undefined JKRArchive__getResource(JKRArchive * this, char * param_1);
// undefined JKRArchive__getResource(JKRArchive * this, ulong param_1, char * param_2);
undefined JKRArchive__readTypeResource(JKRArchive * this, void * param_1, ulong param_2, ulong param_3, char * param_4, JKRArchive * param_5);
undefined JKRArchive__readResource(JKRArchive * this, void * param_1, ulong param_2, ulong param_3, char * param_4);
// undefined JKRArchive__readResource(JKRArchive * this, void * param_1, ulong param_2, char * param_3);
undefined JKRArchive__readIdxResource(JKRArchive * this, void * param_1, ulong param_2, ulong param_3);
// undefined JKRArchive__readResource(JKRArchive * this, void * param_1, ulong param_2, ushort param_3);
undefined JKRArchive__removeResourceAll(JKRArchive * this);
undefined JKRArchive__removeResource(JKRArchive * this, void * param_1);
undefined JKRArchive__detachResource(JKRArchive * this, void * param_1);
undefined JKRArchive__getResSize(JKRArchive * this, void * param_1);
undefined JKRArchive__countResource(JKRArchive * this, ulong param_1);
undefined JKRArchive__countFile(JKRArchive * this, char * param_1);
undefined JKRArchive__getFirstFile(JKRArchive * this, char * param_1);
undefined JKRArchive__getFirstResource(JKRArchive * this, ulong param_1);
undefined JKRArchive__getFileAttribute(JKRArchive * this, ulong param_1);
void JKRArchive__JKRArchive(JKRArchive * this);
// void JKRArchive__JKRArchive(JKRArchive * this, long param_1, EMountMode param_2);
void JKRArchive__JKRArchive_destructor(JKRArchive * this);
undefined JKRArchive__isSameName(JKRArchive * this, CArcName * param_1, ulong param_2, ushort param_3);
undefined JKRArchive__findResType(JKRArchive * this, ulong param_1);
undefined JKRArchive__findDirectory(JKRArchive * this, char * param_1, ulong param_2);
undefined JKRArchive__findTypeResource(JKRArchive * this, ulong param_1, char * param_2);
undefined JKRArchive__findFsResource(JKRArchive * this, char * param_1, ulong param_2);
undefined JKRArchive__findIdxResource(JKRArchive * this, ulong param_1);
undefined JKRArchive__findNameResource(JKRArchive * this, char * param_1);
SDIFileEntry * JKRArchive__findPtrResource(JKRArchive * this, void * dataPtr);
undefined JKRArchive__findIdResource(JKRArchive * this, ushort param_1);
undefined JKRArchive__CArcName__store(CArcName * this, char * param_1);
// undefined JKRArchive__CArcName__store(CArcName * this, char * param_1, char param_2);
undefined JKRArchive__setExpandSize(JKRArchive * this, SDIFileEntry * param_1, ulong param_2);
undefined JKRArchive__getExpandSize(JKRArchive * this, SDIFileEntry * param_1);
void JKRMemArchive__JKRMemArchive(JKRMemArchive * this);
// void JKRMemArchive__JKRMemArchive(JKRMemArchive * this, long param_1, EMountDirection param_2);
void JKRMemArchive__JKRMemArchive_destructor(JKRMemArchive * this);
undefined JKRMemArchive__fixedInit(JKRMemArchive * this, long param_1);
undefined JKRMemArchive__mountFixed(JKRMemArchive * this, void * param_1, JKRMemBreakFlag param_2);
undefined JKRMemArchive__unmountFixed(JKRMemArchive * this);
int JKRMemArchive__open(JKRMemArchive * this, long param_1, EMountDirection param_2);
// int JKRMemArchive__open(JKRMemArchive * this, char * __file, int __oflag, ...);
undefined JKRMemArchive__fetchResource(JKRMemArchive * this, SDIFileEntry * param_1, ulong * param_2);
// undefined JKRMemArchive__fetchResource(JKRMemArchive * this, void * param_1, ulong param_2, SDIFileEntry * param_3, ulong * param_4);
undefined JKRMemArchive__removeResourceAll(JKRMemArchive * this);
undefined JKRMemArchive__removeResource(JKRMemArchive * this, void * param_1);
undefined JKRMemArchive__fetchResource_subroutine(JKRMemArchive * this, uchar * param_1, ulong param_2, uchar * param_3, ulong param_4, int param_5);
undefined JKRMemArchive__getExpandedResSize(JKRMemArchive * this, void * param_1);
void JKRAramArchive__JKRAramArchive(JKRAramArchive * this, long param_1, EMountDirection param_2);
void JKRAramArchive__JKRAramArchive_destructor(JKRAramArchive * this);
int JKRAramArchive__open(JKRAramArchive * this, char * __file, int __oflag, ...);
undefined JKRAramArchive__fetchResource(JKRAramArchive * this, SDIFileEntry * param_1, ulong * param_2);
// undefined JKRAramArchive__fetchResource(JKRAramArchive * this, void * param_1, ulong param_2, SDIFileEntry * param_3, ulong * param_4);
undefined JKRAramArchive__fetchResource_subroutine(JKRAramArchive * this, ulong param_1, ulong param_2, uchar * param_3, ulong param_4, int param_5);
// undefined JKRAramArchive__fetchResource_subroutine(JKRAramArchive * this, ulong param_1, ulong param_2, JKRHeap * param_3, int param_4, uchar * * param_5);
undefined JKRAramArchive__getExpandedResSize(JKRAramArchive * this, void * param_1);
void JKRFile__JKRFile_destructor(JKRFile * this);
void JKRDvdArchive__JKRDvdArchive(JKRDvdArchive * this, long param_1, EMountDirection param_2);
void JKRDvdArchive__JKRDvdArchive_destructor(JKRDvdArchive * this);
int JKRDvdArchive__open(JKRDvdArchive * this, char * __file, int __oflag, ...);
undefined JKRDvdArchive__fetchResource(JKRDvdArchive * this, SDIFileEntry * fileEntry, ulong * param_2);
// undefined JKRDvdArchive__fetchResource(JKRDvdArchive * this, void * param_1, ulong param_2, SDIFileEntry * fileEntry, ulong * param_4);
undefined JKRDvdArchive__fetchResource_subroutine(JKRDvdArchive * this, long param_1, ulong param_2, ulong param_3, uchar * param_4, ulong param_5, int param_6, int param_7);
// undefined JKRDvdArchive__fetchResource_subroutine(JKRDvdArchive * this, long param_1, ulong param_2, ulong param_3, JKRHeap * param_4, int param_5, int param_6, uchar * * param_7);
undefined JKRDvdArchive__getExpandedResSize(JKRDvdArchive * this, void * param_1);
void JKRCompArchive__JKRCompArchive(JKRCompArchive * this, long param_1, EMountDirection param_2);
void JKRCompArchive__JKRCompArchive_destructor(JKRCompArchive * this);
int JKRCompArchive__open(JKRCompArchive * this, char * __file, int __oflag, ...);
undefined JKRCompArchive__fetchResource(JKRCompArchive * this, SDIFileEntry * param_1, ulong * param_2);
// undefined JKRCompArchive__fetchResource(JKRCompArchive * this, void * param_1, ulong param_2, SDIFileEntry * param_3, ulong * param_4);
undefined JKRCompArchive__removeResourceAll(JKRCompArchive * this);
undefined JKRCompArchive__removeResource(JKRCompArchive * this, void * param_1);
undefined JKRCompArchive__getExpandedResSize(JKRCompArchive * this, void * dataPtr);
ssize_t JKRFile__read(JKRFile * this, int __fd, void * __buf, size_t __nbytes);
void JKRDvdFile__JKRDvdFile(JKRDvdFile * this);
// void JKRDvdFile__JKRDvdFile(JKRDvdFile * this, char * param_1);
// void JKRDvdFile__JKRDvdFile(JKRDvdFile * this, long param_1);
void JKRDvdFile__JKRDvdFile_destructor(JKRDvdFile * this);
undefined JKRDvdFile__initiate(JKRDvdFile * this);
int JKRDvdFile__open(JKRDvdFile * this, char * filename);
// int JKRDvdFile__open(JKRDvdFile * this, char * __file, int __oflag, ...);
int JKRDvdFile__close(JKRDvdFile * this, int __fd);
undefined JKRDvdFile__readData(JKRDvdFile * this, void * param_1, long param_2, long param_3);
undefined JKRDvdFile__writeData(JKRDvdFile * this, void * param_1, long param_2, long param_3);
void JKRDvdFile__sync(JKRDvdFile * this);
undefined JKRDvdFile__doneProcess(JKRDvdFile * this, long param_1, DVDFileInfo * param_2);
undefined JKRDvdFile__getFileSize(JKRDvdFile * this);
undefined JKernel____sinit_JKRDvdFile_cpp();
undefined JSUList__JKRDvdFile____JSUList_destructor(JSUList__JKRDvdFile__ * this);
undefined4 JKRDvdRipper__loadToMainRAM(char * param_1, uchar * param_2, JKRExpandSwitch param_3, ulong param_4, JKRHeap * param_5, EAllocDirection param_6, ulong param_7, int * param_8);
// JKRArchive__Header * JKRDvdRipper__loadToMainRAM(long param_1, uchar * param_2, JKRExpandSwitch param_3, ulong param_4, JKRHeap * param_5, EAllocDirection param_6, ulong param_7, int * param_8);
// undefined JKRDvdRipper__loadToMainRAM(JKRDvdFile * param_1, uchar * param_2, JKRExpandSwitch param_3, ulong param_4, JKRHeap * param_5, EAllocDirection param_6, ulong param_7, int * outCompType);
undefined JKernel__JKRDecompressFromDVD();
// undefined JKernel__decompSZS_subroutine();
// undefined JKernel__firstSrcData();
// undefined JKernel__nextSrcData();
undefined JKRDvdRipper__isErrorRetry(JKRDvdRipper * this);
undefined JKernel____sinit_JKRDvdRipper_cpp();
undefined JSUList__JKRDMCommand____JSUList_destructor(JSUList__JKRDMCommand__ * this);
undefined JKRDvdAramRipper__loadToAram(JKRDvdAramRipper * this, long param_1, ulong param_2, JKRExpandSwitch param_3, ulong param_4, ulong param_5);
// undefined JKRDvdAramRipper__loadToAram(JKRDvdAramRipper * this, JKRDvdFile * param_1, ulong param_2, JKRExpandSwitch param_3, ulong param_4, ulong param_5);
undefined JKRDvdAramRipper__loadToAram_Async(JKRDvdAramRipper * this, JKRDvdFile * param_1, ulong param_2, JKRExpandSwitch param_3, void * param_4, ulong param_5, ulong param_6);
undefined JKRDvdAramRipper__callCommand_Async(JKRDvdAramRipper * this, JKRADCommand * param_1);
void JSUFileInputStream__JSUFileInputStream_destructor(JSUFileInputStream * this);
undefined JKRDvdAramRipper__syncAram(JKRDvdAramRipper * this, JKRADCommand * param_1, int param_2);
void JKRADCommand__JKRADCommand(JKRADCommand * this);
void JKRADCommand__JKRADCommand_destructor(JKRADCommand * this);
undefined JKernel__JKRDecompressFromDVDToAram();
// undefined JKernel__decompSZS_subroutine();
// undefined JKernel__firstSrcData();
// undefined JKernel__nextSrcData();
undefined JKernel__dmaBufferFlush();
undefined JKernel____sinit_JKRDvdAramRipper_cpp();
undefined JSUList__JKRADCommand____JSUList_destructor(JSUList__JKRADCommand__ * this);
undefined JKRDecomp__create(JKRDecomp * this, long param_1);
void JKRDecomp__JKRDecomp(JKRDecomp * this, long param_1);
void JKRDecomp__JKRDecomp_destructor(JKRDecomp * this);
undefined JKRDecomp__run(JKRDecomp * this);
undefined JKRDecomp__prepareCommand(JKRDecomp * this, uchar * param_1, uchar * param_2, ulong param_3, ulong param_4, void * param_5);
undefined JKRDecomp__sendCommand(JKRDecomp * this, JKRDecompCommand * param_1);
undefined JKRDecomp__orderAsync(JKRDecomp * this, uchar * param_1, uchar * param_2, ulong param_3, ulong param_4, void * param_5);
void JKRDecomp__sync(JKRDecomp * this);
undefined JKRDecomp__orderSync(JKRDecomp * this, uchar * param_1, uchar * param_2, ulong param_3, ulong param_4);
undefined JKRDecomp__decode(JKRDecomp * this, uchar * param_1, uchar * param_2, ulong param_3, ulong param_4);
undefined JKRDecomp__decodeSZP(JKRDecomp * this, uchar * param_1, uchar * param_2, ulong param_3, ulong param_4);
undefined JKRDecomp__decodeSZS(JKRDecomp * this, uchar * param_1, uchar * param_2, ulong param_3, ulong param_4);
JKRDecomp__CompressionType JKRDecomp__checkCompressed(JKRDecomp * this, uchar * param_1);
void JKRDecompCommand__JKRDecompCommand(JKRDecompCommand * this);
void JKRDecompCommand__JKRDecompCommand_destructor(JKRDecompCommand * this);
void JSUPtrLink__JSUPtrLink(JSUPtrLink * this, void * param_1);
void JSUPtrLink__JSUPtrLink_destructor(JSUPtrLink * this);
void JSUPtrList__JSUPtrList(JSUPtrList * this, bool param_1);
void JSUPtrList__JSUPtrList_destructor(JSUPtrList * this);
undefined JSUPtrList__initiate(JSUPtrList * this);
undefined JSUPtrList__setFirst(JSUPtrList * this, JSUPtrLink * param_1);
undefined JSUPtrList__append(JSUPtrList * this, JSUPtrLink * param_1);
undefined JSUPtrList__prepend(JSUPtrList * this, JSUPtrLink * param_1);
undefined JSUPtrList__insert(JSUPtrList * this, JSUPtrLink * param_1, JSUPtrLink * param_2);
int JSUPtrList__remove(JSUPtrList * this, JSUPtrLink * param_1);
void JSUInputStream__JSUInputStream_destructor(JSUInputStream * this);
ssize_t JSUInputStream__read(JSUInputStream * this, int __fd, void * __buf, size_t __nbytes);
undefined JSUInputStream__skip(JSUInputStream * this, long param_1);
undefined JSURandomInputStream__align(JSURandomInputStream * this, long param_1);
undefined JSURandomInputStream__skip(JSURandomInputStream * this, long param_1);
undefined JSURandomInputStream__peek(JSURandomInputStream * this, void * param_1, long param_2);
undefined JSURandomInputStream__seek(JSURandomInputStream * this, long param_1, JSUStreamSeekFrom param_2);
undefined JSUMemoryInputStream__setBuffer(JSUMemoryInputStream * this, void * param_1, long param_2);
undefined JSUMemoryInputStream__readData(JSUMemoryInputStream * this, void * param_1, long param_2);
undefined JSUMemoryInputStream__seekPos(JSUMemoryInputStream * this, long param_1, JSUStreamSeekFrom param_2);
undefined JSUMemoryInputStream__getLength(JSUMemoryInputStream * this);
undefined JSUMemoryInputStream__getPosition(JSUMemoryInputStream * this);
void JSUFileInputStream__JSUFileInputStream(JSUFileInputStream * this, JKRFile * param_1);
undefined JSUFileInputStream__readData(JSUFileInputStream * this, void * param_1, long param_2);
undefined JSUFileInputStream__seekPos(JSUFileInputStream * this, long param_1, JSUStreamSeekFrom param_2);
undefined JSUFileInputStream__getLength(JSUFileInputStream * this);
undefined JSUFileInputStream__getPosition(JSUFileInputStream * this);
undefined JGadget__binary__parseVariableUInt_16_32_following(binary * this, void * param_1, ulong * param_2, ulong * param_3, TEBit * param_4);
void JGadget__binary__TParse_header_block__TParse_header_block_destructor(TParse_header_block * this);
undefined JGadget__binary__TParse_header_block__parse_next(TParse_header_block * this, void * * param_1, ulong param_2);
void JGadget__TNodeLinkList__TNodeLinkList_destructor(TNodeLinkList * this);
undefined JGadget__TNodeLinkList__erase(TNodeLinkList * this, iterator param_1);
// undefined JGadget__TNodeLinkList__erase(TNodeLinkList * this, iterator param_1, iterator param_2);
ssize_t JGadget__TNodeLinkList__splice(TNodeLinkList * this, int __fdin, __off64_t * __offin, int __fdout, __off64_t * __offout, size_t __len, uint __flags);
undefined JGadget__TNodeLinkList__Find(TNodeLinkList * this, TLinkListNode * param_1);
undefined JGadget__TNodeLinkList__Insert(TNodeLinkList * this, iterator param_1, TLinkListNode * param_2);
undefined JGadget__TNodeLinkList__Erase(TNodeLinkList * this, TLinkListNode * param_1);
undefined JGadget__TNodeLinkList__Remove(TNodeLinkList * this, TLinkListNode * param_1);
undefined JGadget__vector__extend_default(vector * this, ulong param_1, ulong param_2, ulong param_3);
void JGadget__TVector_pointer_void__TVector_pointer_void(TVector_pointer_void * this, TAllocator * param_1);
void JGadget__TVector_pointer_void__TVector_pointer_void_destructor(TVector_pointer_void * this);
undefined JGadget__TVector_pointer_void__insert(TVector_pointer_void * this, void * * param_1, void * * param_2);
undefined JGadget__TVector_pointer_void__erase(TVector_pointer_void * this, void * * param_1, void * * param_2);
undefined JGadget__TVector__void_star_JGadget__TAllocator__void_star______insert(TVector__void_star_JGadget__TAllocator__void_star____ * this, void * * param_1, ulong param_2, void * * param_3);
undefined JGadget__TVector__void_star_JGadget__TAllocator__void_star______Insert_raw(TVector__void_star_JGadget__TAllocator__void_star____ * this, void * * param_1, ulong param_2);
// undefined JGadget__TVector__void_star_JGadget__TAllocator__void_star______insert(TVector__void_star_JGadget__TAllocator__void_star____ * this, void * * param_1, void * * param_2);
void JUTCacheFont__JUTCacheFont(JUTCacheFont * this, ResFONT * param_1, ulong param_2, JKRHeap * param_3);
void JUTCacheFont__JUTCacheFont_destructor(JUTCacheFont * this);
undefined JUTCacheFont__deleteMemBlocks_CacheFont(JUTCacheFont * this);
undefined JUTCacheFont__initialize_state(JUTCacheFont * this);
undefined JUTCacheFont__getMemorySize(JUTCacheFont * this, ResFONT * param_1, ushort * param_2, ulong * param_3, ushort * param_4, ulong * param_5, ushort * param_6, ulong * param_7, ulong * param_8);
undefined JUTCacheFont__initiate(JUTCacheFont * this, ResFONT * param_1, void * param_2, ulong param_3, JKRHeap * param_4);
undefined JUTCacheFont__internal_initiate(JUTCacheFont * this, ResFONT * param_1, void * param_2, ulong param_3, JKRHeap * param_4);
undefined JUTCacheFont__allocArea(JUTCacheFont * this, void * param_1, ulong param_2, JKRHeap * param_3);
undefined JUTCacheFont__allocArray(JUTCacheFont * this, JKRHeap * param_1);
undefined JUTCacheFont__setBlock(JUTCacheFont * this);
undefined JUTCacheFont__determineBlankPage(JUTCacheFont * this);
undefined JUTCacheFont__getGlyphFromAram(JUTCacheFont * this, TGlyphCacheInfo * param_1, TCachePage * param_2, int * param_3, int * param_4);
undefined JUTCacheFont__loadImage(JUTCacheFont * this, int param_1, _GXTexMapID param_2);
undefined JUTCacheFont__loadCache_char_subroutine(JUTCacheFont * this, int * param_1, bool param_2);
undefined JUTCacheFont__invalidiateAllCache(JUTCacheFont * this);
int JUTCacheFont__unlink(JUTCacheFont * this, char * __name);
undefined JUTCacheFont__prepend(JUTCacheFont * this, TGlyphCacheInfo * param_1);
undefined JUTResReference__getResource(JUTResReference * this, JSUInputStream * param_1, ulong param_2, JKRArchive * param_3);
// undefined JUTResReference__getResource(JUTResReference * this, ulong param_1, JKRArchive * param_2);
void JUTTexture__JUTTexture_destructor(JUTTexture * this);
undefined JUTTexture__storeTIMG(JUTTexture * this, ResTIMG * param_1, uchar param_2);
undefined JUTTexture__attachPalette(JUTTexture * this, JUTPalette * param_1);
undefined JUTTexture__initTexObj(JUTTexture * this);
// undefined JUTTexture__initTexObj(JUTTexture * this, _GXTlut param_1);
undefined JUTTexture__load(JUTTexture * this, _GXTexMapID param_1);
undefined JUTPalette__storeTLUT(JUTPalette * this, _GXTlut param_1, ResTLUT * param_2);
// undefined JUTPalette__storeTLUT(JUTPalette * this, _GXTlut param_1, _GXTlutFmt param_2, JUTTransparency param_3, ushort param_4, void * param_5);
undefined JUTPalette__load(JUTPalette * this);
void JUTNameTab__JUTNameTab(JUTNameTab * this);
// void JUTNameTab__JUTNameTab(JUTNameTab * this, ResNTAB * param_1);
undefined JUTNameTab__setResource(JUTNameTab * this, ResNTAB * param_1);
undefined JUTNameTab__getIndex(JUTNameTab * this, char * param_1);
undefined JUTNameTab__getName(JUTNameTab * this, ushort param_1);
undefined JUTNameTab__calcKeyCode(JUTNameTab * this, char * param_1);
void JUTGraphFifo__JUTGraphFifo(JUTGraphFifo * this, ulong param_1);
void JUTGraphFifo__JUTGraphFifo_destructor(JUTGraphFifo * this);
void JUTFont__JUTFont(JUTFont * this);
undefined JUTFont__initialize_state(JUTFont * this);
undefined JUTFont__setCharColor(JUTFont * this, TColor param_1);
undefined JUTFont__setGradColor(JUTFont * this, TColor param_1, TColor param_2);
undefined JUTFont__drawString_size_scale(JUTFont * this, float param_1, float param_2, float param_3, float param_4, char * param_5, ulong param_6, bool param_7);
void JUTResFont__JUTResFont(JUTResFont * this);
// void JUTResFont__JUTResFont(JUTResFont * this, ResFONT * param_1, JKRHeap * param_2);
void JUTResFont__JUTResFont_destructor(JUTResFont * this);
undefined JUTResFont__deleteMemBlocks_ResFont(JUTResFont * this);
undefined JUTResFont__initialize_state(JUTResFont * this);
undefined JUTResFont__initiate(JUTResFont * this, ResFONT * param_1, JKRHeap * param_2);
undefined JUTResFont__protected_initiate(JUTResFont * this, ResFONT * param_1, JKRHeap * param_2);
undefined JUTResFont__countBlock(JUTResFont * this);
undefined JUTResFont__setBlock(JUTResFont * this);
undefined JUTResFont__setGX(JUTResFont * this);
// undefined JUTResFont__setGX(JUTResFont * this, TColor param_1, TColor param_2);
undefined JUTResFont__drawChar_scale(JUTResFont * this, float param_1, float param_2, float param_3, float param_4, int param_5, bool param_6);
undefined JUTResFont__loadFont(JUTResFont * this, int param_1, _GXTexMapID param_2, TWidth * param_3);
undefined JUTResFont__getWidthEntry(JUTResFont * this, int param_1, TWidth * param_2);
undefined JUTResFont__getCellWidth(JUTResFont * this);
undefined JUTResFont__getCellHeight(JUTResFont * this);
undefined JUTResFont__isLeadByte(JUTResFont * this, int param_1);
undefined JUTResFont__getFontCode(JUTResFont * this, int param_1);
undefined JUTResFont__loadImage(JUTResFont * this, int param_1, _GXTexMapID param_2);
undefined JUTResFont__convertSjis(JUTResFont * this, int param_1, ushort * param_2);
void JUTDbPrint__JUTDbPrint(JUTDbPrint * this, JUTFont * param_1, JKRHeap * param_2);
undefined JUTDbPrint__start(JUTDbPrint * this, JUTFont * param_1, JKRHeap * param_2);
undefined JUTDbPrint__changeFont(JUTDbPrint * this, JUTFont * param_1);
undefined JUTDbPrint__enter(JUTDbPrint * this, int param_1, int param_2, int param_3, char * param_4, int param_5);
undefined JUTDbPrint__flush(JUTDbPrint * this);
undefined JUTDbPrint__drawString(JUTDbPrint * this, int param_1, int param_2, int param_3, uchar * param_4);
undefined JUtility__JUTReport();
// undefined JUtility__JUTReport();
void JUTGamePad__JUTGamePad(JUTGamePad * this, EPadPort param_1);
void JUTGamePad__JUTGamePad_destructor(JUTGamePad * this);
undefined JUTGamePad__initList(JUTGamePad * this);
int JUTGamePad__init(JUTGamePad * this, EVP_PKEY_CTX * ctx);
ssize_t JUTGamePad__read(JUTGamePad * this, int __fd, void * __buf, size_t __nbytes);
undefined JUTGamePad__assign(JUTGamePad * this);
undefined JUTGamePad__checkResetCallback(JUTGamePad * this, long_long param_1);
undefined JUTGamePad__update(JUTGamePad * this);
undefined JUTGamePad__checkResetSwitch(JUTGamePad * this);
undefined JUTGamePad__clearForReset(JUTGamePad * this);
undefined JUTGamePad__CButton__clear(CButton * this);
undefined JUTGamePad__CButton__update(CButton * this, PADStatus * param_1, ulong param_2);
undefined JUTGamePad__CStick__clear(CStick * this);
undefined JUTGamePad__CStick__update(CStick * this, char param_1, char param_2, EStickMode param_3, EWhichStick param_4);
undefined JUTGamePad__CStick__getButton(CStick * this);
undefined JUTGamePad__CRumble__clear(CRumble * this);
// undefined JUTGamePad__CRumble__clear(CRumble * this, JUTGamePad * param_1);
undefined JUTGamePad__CRumble__startMotor(CRumble * this, int param_1);
undefined JUTGamePad__CRumble__stopMotor(CRumble * this, int param_1);
undefined JUTGamePad__CRumble__stopMotorHard(CRumble * this, int param_1);
undefined JUTGamePad__CRumble__update(CRumble * this, short param_1);
undefined JUTGamePad__CRumble__triggerPatternedRumble(CRumble * this, ulong param_1);
undefined JUTGamePad__CRumble__startPatternedRumble(CRumble * this, uchar * param_1, ERumble param_2, ulong param_3);
undefined JUTGamePad__CRumble__stopPatternedRumble(CRumble * this, short param_1);
undefined JUTGamePad__CRumble__stopPatternedRumbleAtThePeriod(CRumble * this);
undefined JUTGamePad__getGamePad(JUTGamePad * this, int param_1);
undefined JUTGamePad__CRumble__setEnabled(CRumble * this, ulong param_1);
undefined JUTGamePad__CButton__setRepeat(CButton * this, ulong param_1, ulong param_2, ulong param_3);
undefined JUTGamePad__recalibrate(JUTGamePad * this, ulong param_1);
undefined JUtility____sinit_JUTGamePad_cpp();
void JUTGamePad__CStick__CStick(CStick * this);
void JUTGamePad__CButton__CButton(CButton * this);
undefined JSUList__JUTGamePad____JSUList_destructor(JSUList__JUTGamePad__ * this);
void JUTException__JUTException(JUTException * this, JUTDirectPrint * param_1);
undefined JUTException__create(JUTException * this, JUTDirectPrint * param_1);
undefined JUTException__run(JUTException * this);
undefined JUTException__errorHandler(JUTException * this, ushort param_1, OSContext * param_2, ulong param_3, ulong param_4);
undefined JUTException__setFPException(JUTException * this, ulong param_1);
undefined JUTException__showFloatSub(JUTException * this, int param_1, float param_2);
undefined JUTException__showFloat(JUTException * this, OSContext * param_1);
undefined JUTException__searchPartialModule(JUTException * this, ulong param_1, ulong * param_2, ulong * param_3, ulong * param_4, ulong * param_5);
undefined JUtility__search_name_part();
undefined JUTException__showStack(JUTException * this, OSContext * param_1);
undefined JUTException__showMainInfo(JUTException * this, ushort param_1, OSContext * param_2, ulong param_3, ulong param_4);
undefined JUTException__showGPR(JUTException * this, OSContext * param_1);
undefined JUTException__showMapInfo_subroutine(JUTException * this, ulong param_1, bool param_2);
undefined JUTException__showGPRMap(JUTException * this, OSContext * param_1);
undefined JUTException__showSRR0Map(JUTException * this, OSContext * param_1);
undefined JUTException__printDebugInfo(JUTException * this, EInfoPage param_1, ushort param_2, OSContext * param_3, ulong param_4, ulong param_5);
undefined JUTException__isEnablePad(JUTException * this);
undefined JUTException__readPad(JUTException * this, ulong * param_1, ulong * param_2);
undefined JUTException__printContext(JUTException * this, ushort param_1, OSContext * param_2, ulong param_3, ulong param_4);
undefined JUTException__waitTime(JUTException * this, long param_1);
undefined JUTException__createFB(JUTException * this);
undefined JUTException__setPreUserCallback(void * param_1);
undefined JUTException__setPostUserCallback(void * param_1);
undefined JUTException__appendMapFile(char * param_1);
undefined JUTException__queryMapAddress(JUTException * this, char * param_1, ulong param_2, long param_3, ulong * param_4, ulong * param_5, char * param_6, ulong param_7, bool param_8, bool param_9);
undefined JUTException__queryMapAddress_single(JUTException * this, char * param_1, ulong param_2, long param_3, ulong * param_4, ulong * param_5, char * param_6, ulong param_7, bool param_8, bool param_9);
undefined JUTException__createConsole(JUTException * this, void * param_1, ulong param_2);
void JUTExternalFB__JUTExternalFB(JUTExternalFB * this, _GXRenderModeObj * param_1, _GXGamma param_2, void * param_3, ulong param_4);
void JUTException__JUTException_destructor(JUTException * this);
undefined JUtility____sinit_JUTException_cpp();
undefined JSUList__JUTException__JUTExMapFile____JSUList_destructor(JSUList__JUTException__JUTExMapFile__ * this);
void JUTDirectPrint__JUTDirectPrint(JUTDirectPrint * this);
undefined JUTDirectPrint__start(JUTDirectPrint * this);
undefined JUTDirectPrint__erase(JUTDirectPrint * this, int param_1, int param_2, int param_3, int param_4);
undefined JUTDirectPrint__drawChar(JUTDirectPrint * this, int param_1, int param_2, int param_3);
undefined JUTDirectPrint__changeFrameBuffer(JUTDirectPrint * this, void * param_1, ushort param_2, ushort param_3);
undefined JUTDirectPrint__printSub(JUTDirectPrint * this, ushort param_1, ushort param_2, char * param_3, __tag_va_List * param_4, bool param_5);
undefined JUTDirectPrint__drawString(JUTDirectPrint * this, ushort param_1, ushort param_2, char * param_3);
undefined JUTDirectPrint__drawString_f(JUTDirectPrint * this, ushort param_1, ushort param_2, char * param_3, ...);
undefined JUTAssertion__create(JUTAssertion * this);
undefined JUTAssertion__flush_subroutine(JUTAssertion * this);
undefined JUTAssertion__flushMessage(JUTAssertion * this);
undefined JUTAssertion__flushMessage_dbPrint(JUTAssertion * this);
undefined4 JUTAssertion__getSDevice(void);
undefined JUTAssertion__setConfirmMessage(JUTAssertion * this, ulong param_1, char * param_2, int param_3, bool param_4, char * param_5);
undefined JUTAssertion__showAssert(ulong param_1, char * param_2, int param_3, char * param_4);
undefined JUtility__setWarningMessage_f_va();
undefined JUTAssertion__setWarningMessage_f(JUTAssertion * this, ulong param_1, char * param_2, int param_3, char * param_4, ...);
undefined JUtility__setLogMessage_f_va();
undefined JUTAssertion__setLogMessage_f(JUTAssertion * this, ulong param_1, char * param_2, int param_3, char * param_4, ...);
undefined JUTAssertion__setVisible(JUTAssertion * this, bool param_1);
undefined JUTAssertion__setMessageCount(JUTAssertion * this, int param_1);
undefined JUTVideo__createManager(JUTVideo * this, _GXRenderModeObj * param_1);
undefined JUTVideo__destroyManager(JUTVideo * this);
void JUTVideo__JUTVideo(JUTVideo * this, _GXRenderModeObj * param_1);
void JUTVideo__JUTVideo_destructor(JUTVideo * this);
undefined JUTVideo__preRetraceProc(JUTVideo * this, ulong param_1);
undefined JUTVideo__drawDoneStart(JUTVideo * this);
undefined JUTVideo__dummyNoDrawWait(JUTVideo * this);
undefined JUTVideo__drawDoneCallback(JUTVideo * this);
undefined JUTVideo__postRetraceProc(JUTVideo * this, ulong param_1);
undefined JUTVideo__setRenderMode(JUTVideo * this, _GXRenderModeObj * param_1);
undefined JUTVideo__waitRetraceIfNeed(JUTVideo * this);
undefined JUTXfb__clearIndex(JUTXfb * this);
undefined JUTXfb__common_init(JUTXfb * this, int param_1);
void JUTXfb__JUTXfb(JUTXfb * this, _GXRenderModeObj * param_1, JKRHeap * param_2, EXfbNumber param_3);
void JUTXfb__JUTXfb_destructor(JUTXfb * this);
undefined JUTXfb__delXfb(JUTXfb * this, int param_1);
undefined JUTXfb__createManager(JUTXfb * this, _GXRenderModeObj * param_1, JKRHeap * param_2, EXfbNumber param_3);
undefined JUTXfb__destroyManager(JUTXfb * this);
undefined JUTXfb__initiate(JUTXfb * this, ushort param_1, ushort param_2, JKRHeap * param_3, EXfbNumber param_4);
void JUTFader__JUTFader(JUTFader * this, int param_1, int param_2, int param_3, int param_4, TColor param_5);
undefined JUTFader__control(JUTFader * this);
undefined JUTFader__draw(JUTFader * this);
undefined JUTFader__startFadeIn(JUTFader * this, int param_1);
undefined JUTFader__startFadeOut(JUTFader * this, int param_1);
void JUTFader__JUTFader_destructor(JUTFader * this);
void JUTProcBar__JUTProcBar(JUTProcBar * this);
void JUTProcBar__JUTProcBar_destructor(JUTProcBar * this);
undefined JUTProcBar__create(JUTProcBar * this);
undefined JUTProcBar__destroy(JUTProcBar * this);
undefined JUTProcBar__clear(JUTProcBar * this);
undefined JUTProcBar__bar_subroutine(JUTProcBar * this, int param_1, int param_2, int param_3, int param_4, int param_5, int param_6, int param_7, TColor param_8, TColor param_9);
undefined JUTProcBar__adjustMeterLength(JUTProcBar * this, ulong param_1, float * param_2, float param_3, float param_4, int * param_5);
undefined JUTProcBar__draw(JUTProcBar * this);
undefined JUTProcBar__drawProcessBar(JUTProcBar * this);
undefined JUtility__addrToXPos();
undefined JUtility__byteToXLen();
undefined JUtility__heapBar();
undefined JUTProcBar__drawHeapBar(JUTProcBar * this);
void JUTProcBar__CTime__CTime(CTime * this);
undefined JUTConsole__create(JUTConsole * this, uint param_1, uint param_2, JKRHeap * param_3);
// undefined JUTConsole__create(JUTConsole * this, uint param_1, void * param_2, ulong param_3);
void JUTConsole__JUTConsole(JUTConsole * this, uint param_1, uint param_2, bool param_3);
void JUTConsole__JUTConsole_destructor(JUTConsole * this);
undefined JUTConsole__getObjectSizeFromBufferSize(JUTConsole * this, uint param_1, uint param_2);
undefined JUTConsole__getLineFromObjectSize(JUTConsole * this, ulong param_1, uint param_2);
undefined JUTConsole__clear(JUTConsole * this);
undefined JUTConsole__doDraw(JUTConsole * this, EConsoleType param_1);
undefined JUTConsole__print_f(JUTConsole * this, char * param_1, ...);
undefined JUTConsole__print(JUTConsole * this, char * param_1);
undefined JUtility__JUTConsole_print_f_va_();
undefined JUTConsole__dumpToTerminal(JUTConsole * this, uint param_1);
undefined JUTConsole__scroll(JUTConsole * this, int param_1);
undefined JUTConsole__getUsedLine(JUTConsole * this);
undefined JUTConsole__getLineOffset(JUTConsole * this);
void JUTConsoleManager__JUTConsoleManager(JUTConsoleManager * this);
undefined JUTConsoleManager__createManager(JUTConsoleManager * this, JKRHeap * param_1);
undefined JUTConsoleManager__appendConsole(JUTConsoleManager * this, JUTConsole * param_1);
undefined JUTConsoleManager__removeConsole(JUTConsoleManager * this, JUTConsole * param_1);
undefined JUTConsoleManager__draw(JUTConsoleManager * this);
undefined JUTConsoleManager__drawDirect(JUTConsoleManager * this, bool param_1);
undefined JUTConsoleManager__setDirectConsole(JUTConsoleManager * this, JUTConsole * param_1);
undefined JUtility__JUTSetReportConsole();
undefined JUtility__JUTGetReportConsole();
undefined JUtility__JUTSetWarningConsole();
undefined JUtility__JUTGetWarningConsole();
undefined JUtility__JUTReportConsole_f_va();
undefined JUtility__JUTReportConsole_f();
undefined JUtility__JUTReportConsole();
undefined JUtility__JUTWarningConsole_f_va();
undefined JUtility__JUTWarningConsole_f();
undefined JUtility__JUTWarningConsole();
undefined JUTDirectFile__fetch32byte(JUTDirectFile * this);
void JUTDirectFile__JUTDirectFile(JUTDirectFile * this);
void JUTDirectFile__JUTDirectFile_destructor(JUTDirectFile * this);
FILE * JUTDirectFile__fopen(JUTDirectFile * this, char * __filename, char * __modes);
int JUTDirectFile__fclose(JUTDirectFile * this, FILE * __stream);
char * JUTDirectFile__fgets(JUTDirectFile * this, char * __s, int __n, FILE * __stream);
void JUTGba__JUTGba(JUTGba * this);
undefined JUTGba__create(JUTGba * this);
undefined JUTGba__result_common(JUTGba * this, int param_1, ulong param_2, ulong * param_3);
undefined JUTGba__resultStatus_common(JUTGba * this, int param_1, ulong param_2, uchar * param_3);
undefined JUTGba__doJoyBoot(JUTGba * this, int param_1, long param_2, long param_3, uchar * param_4, ulong param_5, void * param_6, void * param_7);
undefined JUTGba__resultJoyBoot(JUTGba * this, int param_1, uchar * param_2);
undefined JUTGba__doInitProbe(JUTGba * this, int param_1, void * param_2, void * param_3);
undefined JUTGba__resultInitProbe(JUTGba * this, int param_1, ulong * param_2);
undefined JUTGba__doProbe(JUTGba * this, int param_1, void * param_2, void * param_3);
undefined JUTGba__resultProbe(JUTGba * this, int param_1, ulong * param_2);
undefined JUTGba__doReset(JUTGba * this, int param_1, void * param_2, void * param_3);
undefined JUTGba__resultReset(JUTGba * this, int param_1, uchar * param_2);
undefined JUTGba__doRead(JUTGba * this, int param_1, uchar * param_2, void * param_3, void * param_4);
undefined JUTGba__resultRead(JUTGba * this, int param_1, uchar * param_2);
undefined JUTGba__doWrite(JUTGba * this, int param_1, uchar * param_2, void * param_3, void * param_4);
undefined JUTGba__resultWrite(JUTGba * this, int param_1, uchar * param_2);
undefined JUTGba__doGetStatus(JUTGba * this, int param_1, void * param_2, void * param_3);
undefined JUTGba__resultGetStatus(JUTGba * this, int param_1, uchar * param_2);
undefined JUTGba__gbaThreadMain(JUTGba * this, void * param_1);
undefined JUtility__JUTGBAThreadAlarmHandler();
undefined JUTGba__gbaThread_sleep(JUTGba * this, long_long param_1);
undefined JUTGba__gbaThread_Destroy(JUTGba * this, JUTGbaThreadVar * param_1);
undefined JUTGba__gbaThread_JoyBoot(JUTGba * this, JUTGbaThreadVar * param_1);
undefined JUTGba__gbaThread_InitProbe(JUTGba * this, JUTGbaThreadVar * param_1);
undefined JUTGba__gbaThread_Probe(JUTGba * this, JUTGbaThreadVar * param_1);
undefined JUTGba__gbaThread_Reset(JUTGba * this, JUTGbaThreadVar * param_1);
undefined JUTGba__gbaThread_Read(JUTGba * this, JUTGbaThreadVar * param_1);
undefined JUTGba__gbaThread_Write(JUTGba * this, JUTGbaThreadVar * param_1);
undefined JUTGba__gbaThread_GetStatus(JUTGba * this, JUTGbaThreadVar * param_1);
void J2DGrafContext__J2DGrafContext(J2DGrafContext * this, float param_1, float param_2, float param_3, float param_4);
undefined J2DGrafContext__setPort(J2DGrafContext * this);
undefined J2DGrafContext__setup2D(J2DGrafContext * this);
undefined J2DGrafContext__setScissor(J2DGrafContext * this);
undefined J2DGrafContext__scissor(J2DGrafContext * this, TBox2__float__ * param_1);
undefined J2DGrafContext__place(J2DGrafContext * this, TBox2__float__ * param_1);
undefined J2DGrafContext__setColor(J2DGrafContext * this, TColor param_1, TColor param_2, TColor param_3, TColor param_4);
undefined J2DGrafContext__setLineWidth(J2DGrafContext * this, uchar param_1);
undefined J2DGrafContext__fillBox(J2DGrafContext * this, TBox2__float__ * param_1);
undefined J2DGrafContext__drawFrame(J2DGrafContext * this, TBox2__float__ * param_1);
undefined J2DGrafContext__line(J2DGrafContext * this, TVec2__float__ param_1, TVec2__float__ param_2);
undefined J2DGrafContext__lineTo(J2DGrafContext * this, TVec2__float__ param_1);
void J2DGrafContext__J2DGrafContext_destructor(J2DGrafContext * this);
// undefined J2DGrafContext__place(J2DGrafContext * this, float param_1, float param_2, float param_3, float param_4);
undefined J2DGrafContext__getGrafType(J2DGrafContext * this);
undefined J2DGrafContext__setLookat(J2DGrafContext * this);
void J2DOrthoGraph__J2DOrthoGraph(J2DOrthoGraph * this);
// void J2DOrthoGraph__J2DOrthoGraph(J2DOrthoGraph * this, float param_1, float param_2, float param_3, float param_4, float param_5, float param_6);
undefined J2DOrthoGraph__setPort(J2DOrthoGraph * this);
undefined J2DOrthoGraph__setOrtho(J2DOrthoGraph * this, TBox2__float__ * param_1, float param_2, float param_3);
undefined J2DOrthoGraph__setLookat(J2DOrthoGraph * this);
undefined J2DOrthoGraph__scissorBounds(J2DOrthoGraph * this, TBox2__float__ * param_1, TBox2__float__ * param_2);
undefined J2DGraph__J2DDrawLine();
undefined J2DGraph__J2DFillBox();
// undefined J2DGraph__J2DFillBox();
undefined J2DGraph__J2DDrawFrame();
// undefined J2DGraph__J2DDrawFrame();
undefined J2DOrthoGraph__getGrafType(J2DOrthoGraph * this);
void J2DPrint__J2DPrint(J2DPrint * this, JUTFont * param_1, float param_2, float param_3, TColor param_4, TColor param_5, TColor param_6, TColor param_7);
undefined J2DPrint__private_initiate(J2DPrint * this, JUTFont * param_1, float param_2, float param_3, TColor param_4, TColor param_5, TColor param_6, TColor param_7, bool param_8);
undefined J2DPrint__setBuffer(J2DPrint * this, ulong param_1);
undefined J2DPrint__setFontSize(J2DPrint * this);
undefined J2DPrint__locate(J2DPrint * this, float param_1, float param_2);
undefined J2DPrint__printReturn(J2DPrint * this, char * param_1, float param_2, float param_3, J2DTextBoxHBinding param_4, J2DTextBoxVBinding param_5, float param_6, float param_7, uchar param_8);
undefined J2DPrint__parse(J2DPrint * this, uchar * param_1, int param_2, int param_3, ushort * param_4, TSize * param_5, uchar param_6, bool param_7);
undefined J2DPrint__doCtrlCode(J2DPrint * this, int param_1);
undefined J2DPrint__doEscapeCode(J2DPrint * this, uchar * * param_1, uchar param_2);
undefined J2DPrint__initchar(J2DPrint * this);
undefined J2DPrint__getNumberS32(J2DPrint * this, uchar * * param_1, long param_2, long param_3, int param_4);
undefined J2DPrint__getNumberF32(J2DPrint * this, uchar * * param_1, float param_2, float param_3, int param_4);
void J2DPrint__J2DPrint_destructor(J2DPrint * this);
void J2DPane__J2DPane(J2DPane * this);
// void J2DPane__J2DPane(J2DPane * this, J2DPane * param_1, bool param_2, ulong param_3, TBox2__float__ * param_4);
// void J2DPane__J2DPane(J2DPane * this, ulong param_1, TBox2__float__ * param_2);
undefined J2DPane__initiate(J2DPane * this);
// void J2DPane__J2DPane(J2DPane * this, J2DPane * param_1, JSURandomInputStream * param_2);
undefined J2DPane__makePaneStream(J2DPane * this, J2DPane * param_1, JSURandomInputStream * param_2);
void J2DPane__J2DPane_destructor(J2DPane * this);
undefined J2DPane__insertChild(J2DPane * this, J2DPane * param_1, J2DPane * param_2);
undefined J2DPane__draw(J2DPane * this, float param_1, float param_2, J2DGrafContext * param_3, bool param_4);
undefined J2DPane__move(J2DPane * this, float param_1, float param_2);
undefined J2DPane__add(J2DPane * this, float param_1, float param_2);
undefined J2DPane__clip(J2DPane * this, TBox2__float__ * param_1);
undefined J2DPane__search(J2DPane * this, ulong param_1);
undefined J2DPane__makeMatrix(J2DPane * this, float param_1, float param_2);
undefined J2DPane__setBasePosition(J2DPane * this, J2DBasePosition param_1);
// undefined J2DPane__drawSelf(J2DPane * this, float param_1, float param_2, float * param_3);
undefined J2DPane__getTypeID(J2DPane * this);
void J2DScreen__J2DScreen_destructor(J2DScreen * this);
undefined J2DScreen__set(J2DScreen * this, char * param_1, JKRArchive * param_2);
undefined J2DScreen__makeHierarchyPanes(J2DScreen * this, J2DPane * param_1, JSURandomInputStream * param_2);
undefined J2DScreen__createPane(J2DScreen * this, J2DScrnBlockHeader * param_1, JSURandomInputStream * param_2, J2DPane * param_3);
// undefined J2DScreen__set(J2DScreen * this, JSURandomInputStream * param_1);
undefined J2DScreen__checkSignature(J2DScreen * this, JSURandomInputStream * param_1);
undefined J2DScreen__getScreenInformation(J2DScreen * this, JSURandomInputStream * param_1);
undefined J2DScreen__draw(J2DScreen * this, float param_1, float param_2, J2DGrafContext * param_3);
undefined J2DScreen__search(J2DScreen * this, ulong param_1);
undefined J2DScreen__drawSelf(J2DScreen * this, float param_1, float param_2, float * param_3);
void J2DWindow__J2DWindow(J2DWindow * this, J2DPane * param_1, JSURandomInputStream * param_2);
undefined J2DWindow__initinfo2(J2DWindow * this);
void J2DWindow__J2DWindow_destructor(J2DWindow * this);
undefined J2DWindow__draw_private(J2DWindow * this, TBox2__float__ * param_1, TBox2__float__ * param_2);
undefined J2DWindow__resize(J2DWindow * this, float param_1, float param_2);
undefined J2DWindow__setContentsColor(J2DWindow * this, TColor param_1, TColor param_2, TColor param_3, TColor param_4);
undefined J2DWindow__drawSelf(J2DWindow * this, float param_1, float param_2);
// undefined J2DWindow__drawSelf(J2DWindow * this, float param_1, float param_2, float * param_3);
undefined J2DWindow__drawContents(J2DWindow * this, TBox2__float__ * param_1);
undefined J2DWindow__drawFrameTexture(J2DWindow * this, JUTTexture * param_1, float param_2, float param_3, float param_4, float param_5, ushort param_6, ushort param_7, ushort param_8, ushort param_9, bool param_10);
// undefined J2DWindow__drawFrameTexture(J2DWindow * this, JUTTexture * param_1, float param_2, float param_3, bool param_4, bool param_5, bool param_6);
undefined J2DWindow__drawContentsTexture(J2DWindow * this, float param_1, float param_2, float param_3, float param_4);
undefined J2DWindow__setTevMode(J2DWindow * this, JUTTexture * param_1, TColor param_2, TColor param_3);
undefined J2DWindow__getTypeID(J2DWindow * this);
void J2DPicture__J2DPicture(J2DPicture * this);
// void J2DPicture__J2DPicture(J2DPicture * this, J2DPane * param_1, JSURandomInputStream * param_2);
// void J2DPicture__J2DPicture(J2DPicture * this, ResTIMG * param_1);
// void J2DPicture__J2DPicture(J2DPicture * this, char * param_1);
// void J2DPicture__J2DPicture(J2DPicture * this, ulong param_1, TBox2__float__ * param_2, ResTIMG * param_3, ResTLUT * param_4);
undefined J2DPicture__initiate(J2DPicture * this, ResTIMG * param_1, ResTLUT * param_2);
undefined J2DPicture__private_initiate(J2DPicture * this, ResTIMG * param_1, ResTLUT * param_2);
undefined J2DPicture__initinfo(J2DPicture * this);
void J2DPicture__J2DPicture_destructor(J2DPicture * this);
undefined J2DPicture__insert(J2DPicture * this, ResTIMG * param_1, uchar param_2, float param_3);
// undefined J2DPicture__insert(J2DPicture * this, char * param_1, uchar param_2, float param_3);
int J2DPicture__remove(J2DPicture * this, char * __filename);
undefined J2DPicture__changeTexture(J2DPicture * this, ResTIMG * param_1, uchar param_2);
// undefined J2DPicture__changeTexture(J2DPicture * this, char * param_1, uchar param_2);
undefined J2DPicture__drawSelf(J2DPicture * this, float param_1, float param_2);
// undefined J2DPicture__drawSelf(J2DPicture * this, float param_1, float param_2, float * param_3);
undefined J2DPicture__drawFullSet(J2DPicture * this, float param_1, float param_2, float param_3, float param_4, J2DBinding param_5, J2DMirror param_6, bool param_7, float * param_8);
undefined J2DPicture__draw(J2DPicture * this, float param_1, float param_2, float param_3, float param_4, bool param_5, bool param_6, bool param_7);
// undefined J2DPicture__drawOut(J2DPicture * this, TBox2__float__ * param_1, TBox2__float__ * param_2);
undefined J2DPicture__drawTexCoord(J2DPicture * this, float param_1, float param_2, float param_3, float param_4, float param_5, float param_6, float param_7, float param_8, float param_9, float param_10, float param_11, float param_12, float * param_13);
undefined J2DPicture__setTevMode(J2DPicture * this);
undefined J2DPicture__swap(J2DPicture * this, float * param_1, float * param_2);
undefined J2DPicture__setBlendKonstColor(J2DPicture * this);
undefined J2DPicture__setBlendKonstAlpha(J2DPicture * this);
undefined J2DPicture__getNewColor(J2DPicture * this, TColor * param_1);
void J2DTextBox__J2DTextBox(J2DTextBox * this, char * param_1, char * param_2);
// void J2DTextBox__J2DTextBox(J2DTextBox * this, J2DPane * param_1, JSURandomInputStream * param_2);
// void J2DTextBox__J2DTextBox(J2DTextBox * this, ulong param_1, TBox2__float__ * param_2, ResFONT * param_3, char * param_4, J2DTextBoxHBinding param_5, J2DTextBoxVBinding param_6);
undefined J2DTextBox__initiate(J2DTextBox * this, ResFONT * param_1, char * param_2, J2DTextBoxHBinding param_3, J2DTextBoxVBinding param_4);
void J2DTextBox__J2DTextBox_destructor(J2DTextBox * this);
undefined J2DTextBox__setFont(J2DTextBox * this, JUTFont * param_1);
undefined J2DTextBox__draw(J2DTextBox * this, float param_1, float param_2, float param_3, J2DTextBoxHBinding param_4);
undefined J2DTextBox__getStringPtr(J2DTextBox * this);
undefined J2DTextBox__setString(J2DTextBox * this, char * param_1, ...);
undefined J2DTextBox__setConnectParent(J2DTextBox * this, bool param_1);
undefined J2DTextBox__drawSelf(J2DTextBox * this, float param_1, float param_2);
// undefined J2DTextBox__drawSelf(J2DTextBox * this, float param_1, float param_2, float * param_3);
undefined J2DTextBox__resize(J2DTextBox * this, float param_1, float param_2);
undefined J2DTextBox__getTypeID(J2DTextBox * this);
undefined JRenderer__JRNLoadTexCached();
undefined J3DGraphBase__J3DGDSetGenMode();
undefined J3DGraphBase__J3DGDSetGenMode_3Param();
undefined J3DGraphBase__J3DGDSetIndTexStageNum();
undefined J3DGraphBase__J3DGDSetLightAttn();
undefined J3DGraphBase__J3DGDSetLightColor();
undefined J3DGraphBase__J3DGDSetLightPos();
undefined J3DGraphBase__J3DGDSetLightDir();
undefined J3DGraphBase__J3DGDSetVtxAttrFmtv();
undefined J3DGraphBase__J3DGDSetTexCoordGen();
undefined J3DGraphBase__J3DGDSetTexCoordScale2();
undefined J3DGraphBase__J3DGDSetTexLookupMode();
undefined J3DGraphBase__J3DGDSetTexImgAttr();
undefined J3DGraphBase__J3DGDSetTexImgPtr();
undefined J3DGraphBase__J3DGDSetTexImgPtrRaw();
undefined J3DGraphBase__J3DGDSetTexTlut();
undefined J3DGraphBase__J3DGDLoadTlut();
undefined J3DGraphBase__J3DGDSetIndTexMtx();
undefined J3DGraphBase__J3DGDSetIndTexCoordScale();
undefined J3DGraphBase__J3DGDSetIndTexOrder(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined4 param_9);
undefined J3DGraphBase__J3DGDSetTevOrder();
undefined J3DGraphBase__J3DGDSetTevKColor();
undefined J3DGraphBase__J3DGDSetTevColorS10();
undefined J3DGraphBase__J3DGDSetFog();
undefined J3DGraphBase__J3DGDSetFogRangeAdj();
void J3DSys__J3DSys(J3DSys * this);
undefined J3DSys__loadPosMtxIndx(J3DSys * this, int param_1, ushort param_2);
undefined J3DSys__loadNrmMtxIndx(J3DSys * this, int param_1, ushort param_2);
undefined J3DGraphBase__J3DFifoLoadPosMtxImm();
undefined J3DGraphBase__J3DFifoLoadNrmMtxImm();
undefined J3DGraphBase__J3DFifoLoadNrmMtxImm3x3();
undefined J3DSys__setTexCacheRegion(J3DSys * this, _GXTexCacheSize param_1);
undefined J3DSys__drawInit(J3DSys * this);
undefined J3DSys__reinitGX(J3DSys * this);
undefined J3DSys__reinitGenMode(J3DSys * this);
undefined J3DSys__reinitLighting(J3DSys * this);
undefined J3DSys__reinitTransform(J3DSys * this);
undefined J3DSys__reinitTexture(J3DSys * this);
undefined J3DSys__reinitTevStages(J3DSys * this);
undefined J3DSys__reinitIndStages(J3DSys * this);
undefined J3DSys__reinitPixelProc(J3DSys * this);
undefined J3DGraphBase____sinit_J3DSys_cpp();
void J3DVertexData__J3DVertexData(J3DVertexData * this);
void J3DVertexData__J3DVertexData_destructor(J3DVertexData * this);
void J3DVertexBuffer__setVertexData(J3DVertexBuffer * this, J3DVertexData * param_1);
int J3DVertexBuffer__init(J3DVertexBuffer * this, EVP_PKEY_CTX * ctx);
void J3DVertexBuffer__J3DVertexBuffer_destructor(J3DVertexBuffer * this);
undefined J3DVertexBuffer__setArray(J3DVertexBuffer * this);
undefined J3DVertexBuffer__allocTransformedVtxPosArray(J3DVertexBuffer * this);
undefined J3DVertexBuffer__allocTransformedVtxNrmArray(J3DVertexBuffer * this);
void J3DDrawMtxData__J3DDrawMtxData(J3DDrawMtxData * this);
void J3DDrawMtxData__J3DDrawMtxData_destructor(J3DDrawMtxData * this);
undefined J3DGraphBase____MTGQR7();
undefined J3DGraphBase__J3DGQRSetup7();
undefined J3DGraphBase__J3DCalcZValue();
undefined J3DGraphBase__J3DCalcBBoardMtx();
undefined J3DGraphBase__J3DCalcYBBoardMtx();
undefined J3DGraphBase__J3DPSCalcInverseTranspose();
undefined J3DGraphBase__J3DGetTranslateRotateMtx();
// undefined J3DGraphBase__J3DGetTranslateRotateMtx();
undefined J3DGraphBase__J3DGetTextureMtx();
undefined J3DGraphBase__J3DGetTextureMtxOld();
undefined J3DGraphBase__J3DGetTextureMtxMaya();
undefined J3DGraphBase__J3DGetTextureMtxMayaOld();
undefined J3DGraphBase__J3DScaleNrmMtx();
undefined J3DGraphBase__J3DScaleNrmMtx33();
undefined J3DGraphBase__J3DMtxProjConcat();
undefined J3DGraphBase__J3DPSMtx33Copy();
undefined J3DGraphBase__J3DPSMtx33CopyFrom34();
undefined J3DGraphBase__J3DPSMtxArrayConcat();
undefined J3DDisplayListObj__newDisplayList(J3DDisplayListObj * this, ulong param_1);
undefined J3DDisplayListObj__newSingleDisplayList(J3DDisplayListObj * this, ulong param_1);
undefined J3DDisplayListObj__single_To_Double(J3DDisplayListObj * this);
undefined J3DDisplayListObj__setSingleDisplayList(J3DDisplayListObj * this, void * param_1, ulong param_2);
undefined J3DDisplayListObj__swapBuffer(J3DDisplayListObj * this);
undefined J3DDisplayListObj__callDL(J3DDisplayListObj * this);
undefined J3DDisplayListObj__beginDL(J3DDisplayListObj * this);
undefined J3DDisplayListObj__endDL(J3DDisplayListObj * this);
undefined J3DDisplayListObj__beginPatch(J3DDisplayListObj * this);
undefined J3DDisplayListObj__endPatch(J3DDisplayListObj * this);
undefined J3DPacket__isSame(J3DPacket * this, J3DMatPacket * param_1);
undefined J3DPacket__entry(J3DPacket * this, J3DDrawBuffer * param_1);
undefined J3DPacket__addChildPacket(J3DPacket * this, J3DPacket * param_1);
undefined J3DCallBackPacket__draw(J3DCallBackPacket * this);
void J3DDrawPacket__J3DDrawPacket(J3DDrawPacket * this);
void J3DDrawPacket__J3DDrawPacket_destructor(J3DDrawPacket * this);
undefined J3DDrawPacket__newDisplayList(J3DDrawPacket * this, ulong param_1);
undefined J3DDrawPacket__newSingleDisplayList(J3DDrawPacket * this, ulong param_1);
undefined J3DDrawPacket__draw(J3DDrawPacket * this);
void J3DMatPacket__J3DMatPacket(J3DMatPacket * this);
void J3DMatPacket__J3DMatPacket_destructor(J3DMatPacket * this);
undefined J3DMatPacket__addShapePacket(J3DMatPacket * this, J3DShapePacket * param_1);
undefined J3DMatPacket__beginDiff(J3DMatPacket * this);
undefined J3DMatPacket__endDiff(J3DMatPacket * this);
undefined J3DMatPacket__draw(J3DMatPacket * this);
void J3DShapePacket__J3DShapePacket(J3DShapePacket * this);
void J3DShapePacket__J3DShapePacket_destructor(J3DShapePacket * this);
undefined J3DShapePacket__calcDifferedBufferSize(J3DShapePacket * this, ulong param_1);
undefined J3DShapePacket__newDifferedDisplayList(J3DShapePacket * this, ulong param_1);
undefined J3DShapePacket__prepareDraw(J3DShapePacket * this);
undefined J3DShapePacket__draw(J3DShapePacket * this);
undefined J3DShapePacket__drawFast(J3DShapePacket * this);
undefined J3DMatPacket__isSame(J3DMatPacket * this, J3DMatPacket * param_1);
undefined J3DPacket__draw(J3DPacket * this);
void J3DCallBackPacket__J3DCallBackPacket_destructor(J3DCallBackPacket * this);
undefined J3DShapeMtx__loadMtxIndx_PNGP(J3DShapeMtx * this, int param_1, ushort param_2);
undefined J3DShapeMtx__loadMtxIndx_PCPU(J3DShapeMtx * this, int param_1, ushort param_2);
undefined J3DShapeMtx__loadMtxIndx_NCPU(J3DShapeMtx * this, int param_1, ushort param_2);
undefined J3DShapeMtx__loadMtxIndx_PNCPU(J3DShapeMtx * this, int param_1, ushort param_2);
undefined J3DShapeMtxImm__loadMtxImm_PNGP(J3DShapeMtxImm * this, int param_1, ushort param_2);
undefined J3DShapeMtxImm__loadMtxImm_PCPU(J3DShapeMtxImm * this, int param_1, ushort param_2);
undefined J3DShapeMtxImm__loadMtxImm_NCPU(J3DShapeMtxImm * this, int param_1, ushort param_2);
undefined J3DShapeMtxImm__loadMtxImm_PNCPU(J3DShapeMtxImm * this, int param_1, ushort param_2);
undefined J3DShapeMtxConcatView__loadMtxConcatView_PNGP(J3DShapeMtxConcatView * this, int param_1, ushort param_2);
undefined J3DShapeMtxConcatView__loadMtxConcatView_PCPU(J3DShapeMtxConcatView * this, int param_1, ushort param_2);
undefined J3DShapeMtxConcatView__loadMtxConcatView_NCPU(J3DShapeMtxConcatView * this, int param_1, ushort param_2);
undefined J3DShapeMtxConcatView__loadMtxConcatView_PNCPU(J3DShapeMtxConcatView * this, int param_1, ushort param_2);
undefined J3DShapeMtx__load(J3DShapeMtx * this);
undefined J3DShapeMtx__calcNBTScale(J3DShapeMtx * this, Vec * param_1, float * param_2, float * param_3);
undefined J3DShapeMtxImm__load(J3DShapeMtxImm * this);
undefined J3DShapeMtxConcatView__load(J3DShapeMtxConcatView * this);
undefined J3DShapeMtxImm__loadNrmMtx(J3DShapeMtxImm * this, int param_1, ushort param_2);
undefined J3DShapeMtxConcatView__loadNrmMtx(J3DShapeMtxConcatView * this, int param_1, ushort param_2, float * param_3);
undefined J3DShapeMtxMulti__load(J3DShapeMtxMulti * this);
undefined J3DShapeMtxMulti__calcNBTScale(J3DShapeMtxMulti * this, Vec * param_1, float * param_2, float * param_3);
undefined J3DShapeMtxMultiImm__load(J3DShapeMtxMultiImm * this);
undefined J3DShapeMtxMultiConcatView__load(J3DShapeMtxMultiConcatView * this);
undefined J3DShapeMtxMultiImm__loadNrmMtx(J3DShapeMtxMultiImm * this, int param_1, ushort param_2);
undefined J3DShapeMtxMultiConcatView__loadNrmMtx(J3DShapeMtxMultiConcatView * this, int param_1, ushort param_2, float * param_3);
undefined J3DShapeMtxBBoardImm__load(J3DShapeMtxBBoardImm * this);
undefined J3DShapeMtxBBoardConcatView__load(J3DShapeMtxBBoardConcatView * this);
undefined J3DShapeMtxYBBoardImm__load(J3DShapeMtxYBBoardImm * this);
undefined J3DShapeMtxYBBoardConcatView__load(J3DShapeMtxYBBoardConcatView * this);
void J3DShapeDraw__J3DShapeDraw(J3DShapeDraw * this, uchar * param_1, ulong param_2);
undefined J3DShapeDraw__draw(J3DShapeDraw * this);
void J3DShapeDraw__J3DShapeDraw_destructor(J3DShapeDraw * this);
void J3DShapeMtxYBBoardConcatView__J3DShapeMtxYBBoardConcatView_destructor(J3DShapeMtxYBBoardConcatView * this);
undefined J3DShapeMtxYBBoardImm__getType(J3DShapeMtxYBBoardImm * this);
undefined J3DShapeMtx__getUseMtxIndex(J3DShapeMtx * this, ushort param_1);
void J3DShapeMtxYBBoardImm__J3DShapeMtxYBBoardImm_destructor(J3DShapeMtxYBBoardImm * this);
void J3DShapeMtxBBoardConcatView__J3DShapeMtxBBoardConcatView_destructor(J3DShapeMtxBBoardConcatView * this);
undefined J3DShapeMtxBBoardImm__getType(J3DShapeMtxBBoardImm * this);
void J3DShapeMtxBBoardImm__J3DShapeMtxBBoardImm_destructor(J3DShapeMtxBBoardImm * this);
void J3DShapeMtxMultiConcatView__J3DShapeMtxMultiConcatView_destructor(J3DShapeMtxMultiConcatView * this);
undefined J3DShapeMtxMultiConcatView__getType(J3DShapeMtxMultiConcatView * this);
undefined J3DShapeMtxMultiConcatView__getUseMtxNum(J3DShapeMtxMultiConcatView * this);
undefined J3DShapeMtxMultiConcatView__getUseMtxIndex(J3DShapeMtxMultiConcatView * this, ushort param_1);
// undefined J3DShapeMtxMultiConcatView__loadNrmMtx(J3DShapeMtxMultiConcatView * this, int param_1, ushort param_2);
void J3DShapeMtxMultiImm__J3DShapeMtxMultiImm_destructor(J3DShapeMtxMultiImm * this);
undefined J3DShapeMtxMultiImm__getType(J3DShapeMtxMultiImm * this);
undefined J3DShapeMtxMultiImm__getUseMtxNum(J3DShapeMtxMultiImm * this);
undefined J3DShapeMtxMultiImm__getUseMtxIndex(J3DShapeMtxMultiImm * this, ushort param_1);
void J3DShapeMtxMulti__J3DShapeMtxMulti_destructor(J3DShapeMtxMulti * this);
undefined J3DShapeMtxMulti__getType(J3DShapeMtxMulti * this);
undefined J3DShapeMtxMulti__getUseMtxNum(J3DShapeMtxMulti * this);
undefined J3DShapeMtxMulti__getUseMtxIndex(J3DShapeMtxMulti * this, ushort param_1);
void J3DShapeMtxConcatView__J3DShapeMtxConcatView_destructor(J3DShapeMtxConcatView * this);
undefined J3DShapeMtxConcatView__getType(J3DShapeMtxConcatView * this);
// undefined J3DShapeMtxConcatView__loadNrmMtx(J3DShapeMtxConcatView * this, int param_1, ushort param_2);
void J3DShapeMtxImm__J3DShapeMtxImm_destructor(J3DShapeMtxImm * this);
undefined J3DShapeMtxImm__getType(J3DShapeMtxImm * this);
void J3DShapeMtx__J3DShapeMtx_destructor(J3DShapeMtx * this);
undefined J3DShapeMtx__getType(J3DShapeMtx * this);
undefined J3DGraphBase____sinit_J3DShapeMtx_cpp();
undefined J3DShape__initialize(J3DShape * this);
undefined J3DShape__calcNBTScale(J3DShape * this, Vec * param_1, float * param_2, float * param_3);
undefined J3DShape__countBumpMtxNum(J3DShape * this);
undefined J3DGraphBase__J3DLoadCPCmd();
undefined J3DGraphBase__J3DLoadArrayBasePtr();
undefined J3DShape__loadVtxArray(J3DShape * this);
undefined J3DShape__isSameVcdVatCmd(J3DShape * this, J3DShape * param_1);
undefined J3DShape__makeVtxArrayCmd(J3DShape * this);
undefined J3DShape__makeVcdVatCmd(J3DShape * this);
undefined J3DShape__loadPreDrawSetting(J3DShape * this);
undefined J3DShape__setArrayAndBindPipeline(J3DShape * this);
undefined J3DShape__drawFast(J3DShape * this);
undefined J3DShape__draw(J3DShape * this);
undefined J3DShape__simpleDraw(J3DShape * this);
undefined J3DShape__simpleDrawCache(J3DShape * this);
J3DColorBlockLightOn * J3DMaterial__createColorBlock(ulong param_1);
undefined J3DMaterial__createTexGenBlock(J3DMaterial * this, ulong param_1);
undefined J3DMaterial__createTevBlock(J3DMaterial * this, int param_1);
undefined J3DMaterial__createIndBlock(J3DMaterial * this, int param_1);
J3DPEBlockFull * J3DMaterial__createPEBlock(ulong param_1, ulong param_2);
undefined J3DMaterial__calcSizeColorBlock(J3DMaterial * this, ulong param_1);
undefined J3DMaterial__calcSizeTexGenBlock(J3DMaterial * this, ulong param_1);
undefined J3DMaterial__calcSizeTevBlock(J3DMaterial * this, int param_1);
undefined J3DMaterial__calcSizeIndBlock(J3DMaterial * this, int param_1);
undefined J3DMaterial__calcSizePEBlock(J3DMaterial * this, ulong param_1, ulong param_2);
undefined J3DMaterial__initialize(J3DMaterial * this);
undefined J3DMaterial__countDLSize(J3DMaterial * this);
undefined J3DMaterial__makeDisplayList_private(J3DMaterial * this, J3DDisplayListObj * param_1);
undefined J3DMaterial__makeDisplayList(J3DMaterial * this);
undefined J3DMaterial__makeSharedDisplayList(J3DMaterial * this);
undefined J3DMaterial__load(J3DMaterial * this);
undefined J3DMaterial__loadSharedDL(J3DMaterial * this);
undefined J3DMaterial__patch(J3DMaterial * this);
undefined J3DMaterial__diff(J3DMaterial * this, ulong param_1);
undefined J3DMaterial__calc(J3DMaterial * this, float * param_1);
undefined J3DMaterial__setCurrentMtx(J3DMaterial * this);
undefined J3DMaterial__calcCurrentMtx(J3DMaterial * this);
int J3DMaterial__copy(J3DMaterial * this, J3DMaterial * src);
undefined J3DMaterial__reset(J3DMaterial * this);
undefined J3DMaterial__change(J3DMaterial * this);
undefined J3DMaterial__newSharedDisplayList(J3DMaterial * this, ulong param_1);
undefined J3DMaterial__newSingleSharedDisplayList(J3DMaterial * this, ulong param_1);
undefined J3DPatchedMaterial__initialize(J3DPatchedMaterial * this);
undefined J3DPatchedMaterial__makeDisplayList(J3DPatchedMaterial * this);
undefined J3DPatchedMaterial__makeSharedDisplayList(J3DPatchedMaterial * this);
undefined J3DPatchedMaterial__load(J3DPatchedMaterial * this);
undefined J3DPatchedMaterial__loadSharedDL(J3DPatchedMaterial * this);
undefined J3DPatchedMaterial__calc(J3DPatchedMaterial * this, float * param_1);
undefined J3DPatchedMaterial__reset(J3DPatchedMaterial * this);
undefined J3DPatchedMaterial__change(J3DPatchedMaterial * this);
undefined J3DLockedMaterial__initialize(J3DLockedMaterial * this);
undefined J3DLockedMaterial__makeDisplayList(J3DLockedMaterial * this);
undefined J3DLockedMaterial__makeSharedDisplayList(J3DLockedMaterial * this);
undefined J3DLockedMaterial__load(J3DLockedMaterial * this);
undefined J3DLockedMaterial__loadSharedDL(J3DLockedMaterial * this);
undefined J3DLockedMaterial__patch(J3DLockedMaterial * this);
undefined J3DLockedMaterial__diff(J3DLockedMaterial * this, ulong param_1);
undefined J3DLockedMaterial__calc(J3DLockedMaterial * this, float * param_1);
undefined J3DLockedMaterial__reset(J3DLockedMaterial * this);
undefined J3DLockedMaterial__change(J3DLockedMaterial * this);
void J3DColorBlockLightOff__J3DColorBlockLightOff_destructor(J3DColorBlockLightOff * this);
void J3DColorBlock__J3DColorBlock_destructor(J3DColorBlock * this);
void J3DTexGenBlockPatched__J3DTexGenBlockPatched_destructor(J3DTexGenBlockPatched * this);
void J3DTexGenBlock__J3DTexGenBlock_destructor(J3DTexGenBlock * this);
void J3DTevBlock__J3DTevBlock_destructor(J3DTevBlock * this);
void J3DIndBlock__J3DIndBlock_destructor(J3DIndBlock * this);
void J3DPEBlock__J3DPEBlock_destructor(J3DPEBlock * this);
undefined J3DTexGenBlock__countDLSize(J3DTexGenBlock * this);
undefined J3DColorBlock__countDLSize(J3DColorBlock * this);
undefined J3DTevBlock__countDLSize(J3DTevBlock * this);
undefined J3DIndBlock__countDLSize(J3DIndBlock * this);
undefined J3DPEBlock__countDLSize(J3DPEBlock * this);
undefined J3DColorBlock__load(J3DColorBlock * this);
undefined J3DColorBlock__getCullMode(J3DColorBlock * this);
undefined J3DTevBlock__load(J3DTevBlock * this);
undefined J3DTexGenBlock__getNBTScale(J3DTexGenBlock * this);
undefined J3DColorBlock__patch(J3DColorBlock * this);
undefined J3DColorBlock__diff(J3DColorBlock * this, ulong param_1);
undefined J3DPEBlock__diff(J3DPEBlock * this, ulong param_1);
undefined J3DPEBlock__reset(J3DPEBlock * this, J3DPEBlock * param_1);
undefined J3DIndBlock__reset(J3DIndBlock * this, J3DIndBlock * param_1);
undefined J3DTevBlock__reset(J3DTevBlock * this, J3DTevBlock * param_1);
undefined J3DTexGenBlock__reset(J3DTexGenBlock * this, J3DTexGenBlock * param_1);
undefined J3DColorBlock__reset(J3DColorBlock * this, J3DColorBlock * param_1);
undefined J3DPEBlock__diffFog(J3DPEBlock * this);
undefined J3DPEBlock__diffBlend(J3DPEBlock * this);
undefined J3DPEBlock__setFog(J3DPEBlock * this, J3DFog * param_1);
// undefined J3DPEBlock__setAlphaComp(J3DPEBlock * this, J3DAlphaComp * param_1);
// undefined J3DPEBlock__setBlend(J3DPEBlock * this, J3DBlend * param_1);
// undefined J3DPEBlock__setZMode(J3DPEBlock * this, J3DZMode * param_1);
// undefined J3DPEBlock__setZCompLoc(J3DPEBlock * this, uchar * param_1);
undefined J3DPEBlock__setDither(J3DPEBlock * this, uchar param_1);
// undefined J3DPEBlock__setDither(J3DPEBlock * this, uchar * param_1);
undefined J3DPEBlock__getDither(J3DPEBlock * this);
undefined J3DPEBlock__getFogOffset(J3DPEBlock * this);
undefined J3DPEBlock__setFogOffset(J3DPEBlock * this, ulong param_1);
undefined J3DIndBlockNull__diff(J3DIndBlockNull * this, ulong param_1);
undefined J3DIndBlockNull__load(J3DIndBlockNull * this);
undefined J3DIndBlockNull__reset(J3DIndBlockNull * this, J3DIndBlock * param_1);
undefined J3DIndBlockNull__getType(J3DIndBlockNull * this);
void J3DIndBlockNull__J3DIndBlockNull_destructor(J3DIndBlockNull * this);
undefined J3DIndBlock__setIndTexOrder(J3DIndBlock * this, ulong param_1, J3DIndTexOrder * param_2);
// undefined J3DIndBlock__setIndTexOrder(J3DIndBlock * this, ulong param_1, J3DIndTexOrder param_2);
// undefined J3DIndBlock__setIndTexMtx(J3DIndBlock * this, ulong param_1, J3DIndTexMtx * param_2);
// undefined J3DIndBlock__setIndTexCoordScale(J3DIndBlock * this, ulong param_1, J3DIndTexCoordScale * param_2);
// undefined J3DTexGenBlock__setTexGenNum(J3DTexGenBlock * this, ulong * param_1);
undefined J3DTexGenBlock__setNBTScale(J3DTexGenBlock * this, J3DNBTScale param_1);
// undefined J3DTexGenBlock__setNBTScale(J3DTexGenBlock * this, J3DNBTScale * param_1);
undefined J3DTexGenBlock__getTexMtxOffset(J3DTexGenBlock * this);
undefined J3DTexGenBlock__setTexMtxOffset(J3DTexGenBlock * this, ulong param_1);
undefined J3DColorBlock__patchMatColor(J3DColorBlock * this);
undefined J3DColorBlock__diffMatColor(J3DColorBlock * this);
undefined J3DColorBlock__diffLight(J3DColorBlock * this);
// undefined J3DColorBlock__setMatColor(J3DColorBlock * this, ulong param_1, J3DGXColor * param_2);
// undefined J3DColorBlock__setAmbColor(J3DColorBlock * this, ulong param_1, J3DGXColor * param_2);
// undefined J3DColorBlock__setColorChanNum(J3DColorBlock * this, uchar * param_1);
// undefined J3DColorBlock__setColorChan(J3DColorBlock * this, ulong param_1, J3DColorChan * param_2);
undefined J3DColorBlock__getLight(J3DColorBlock * this, ulong param_1);
// undefined J3DColorBlock__setCullMode(J3DColorBlock * this, uchar * param_1);
undefined J3DColorBlock__getMatColorOffset(J3DColorBlock * this);
undefined J3DColorBlock__getColorChanOffset(J3DColorBlock * this);
undefined J3DColorBlock__setMatColorOffset(J3DColorBlock * this, ulong param_1);
undefined J3DColorBlock__setColorChanOffset(J3DColorBlock * this, ulong param_1);
undefined J3DColorBlockLightOff__initialize(J3DColorBlockLightOff * this);
undefined J3DColorBlockAmbientOn__initialize(J3DColorBlockAmbientOn * this);
undefined J3DColorBlockLightOn__initialize(J3DColorBlockLightOn * this);
undefined J3DTexGenBlockPatched__initialize(J3DTexGenBlockPatched * this);
undefined J3DTexGenBlock4__initialize(J3DTexGenBlock4 * this);
undefined J3DTexGenBlockBasic__initialize(J3DTexGenBlockBasic * this);
undefined J3DTevBlockNull__initialize(J3DTevBlockNull * this);
undefined J3DTevBlockPatched__initialize(J3DTevBlockPatched * this);
undefined J3DTevBlock1__initialize(J3DTevBlock1 * this);
undefined J3DTevBlock2__initialize(J3DTevBlock2 * this);
undefined J3DTevBlock4__initialize(J3DTevBlock4 * this);
undefined J3DTevBlock16__initialize(J3DTevBlock16 * this);
undefined J3DIndBlockFull__initialize(J3DIndBlockFull * this);
undefined J3DPEBlockFogOff__initialize(J3DPEBlockFogOff * this);
undefined J3DPEBlockFull__initialize(J3DPEBlockFull * this);
undefined J3DColorBlockLightOff__countDLSize(J3DColorBlockLightOff * this);
undefined J3DColorBlockAmbientOn__countDLSize(J3DColorBlockAmbientOn * this);
undefined J3DColorBlockLightOn__countDLSize(J3DColorBlockLightOn * this);
undefined J3DTexGenBlockPatched__countDLSize(J3DTexGenBlockPatched * this);
undefined J3DTexGenBlock4__countDLSize(J3DTexGenBlock4 * this);
undefined J3DTexGenBlockBasic__countDLSize(J3DTexGenBlockBasic * this);
undefined J3DTevBlockPatched__countDLSize(J3DTevBlockPatched * this);
undefined J3DTevBlock1__countDLSize(J3DTevBlock1 * this);
undefined J3DTevBlock2__countDLSize(J3DTevBlock2 * this);
undefined J3DTevBlock4__countDLSize(J3DTevBlock4 * this);
undefined J3DTevBlock16__countDLSize(J3DTevBlock16 * this);
undefined J3DIndBlockFull__countDLSize(J3DIndBlockFull * this);
undefined J3DPEBlockOpa__countDLSize(J3DPEBlockOpa * this);
undefined J3DPEBlockTexEdge__countDLSize(J3DPEBlockTexEdge * this);
undefined J3DPEBlockXlu__countDLSize(J3DPEBlockXlu * this);
undefined J3DPEBlockFogOff__countDLSize(J3DPEBlockFogOff * this);
undefined J3DPEBlockFull__countDLSize(J3DPEBlockFull * this);
undefined J3DColorBlockLightOff__load(J3DColorBlockLightOff * this);
undefined J3DColorBlockAmbientOn__load(J3DColorBlockAmbientOn * this);
undefined J3DColorBlockLightOn__load(J3DColorBlockLightOn * this);
undefined J3DColorBlockLightOff__patch(J3DColorBlockLightOff * this);
undefined J3DColorBlockLightOff__patchMatColor(J3DColorBlockLightOff * this);
undefined J3DColorBlockLightOff__patchLight(J3DColorBlockLightOff * this);
undefined J3DColorBlockLightOn__patch(J3DColorBlockLightOn * this);
undefined J3DColorBlockLightOn__patchMatColor(J3DColorBlockLightOn * this);
undefined J3DColorBlockLightOn__patchLight(J3DColorBlockLightOn * this);
undefined J3DColorBlockLightOff__diff(J3DColorBlockLightOff * this, ulong param_1);
undefined J3DColorBlockLightOff__diffMatColor(J3DColorBlockLightOff * this);
undefined J3DColorBlockLightOff__diffLight(J3DColorBlockLightOff * this);
undefined J3DColorBlockLightOn__diff(J3DColorBlockLightOn * this, ulong param_1);
undefined J3DColorBlockLightOn__diffMatColor(J3DColorBlockLightOn * this);
undefined J3DColorBlockLightOn__diffLight(J3DColorBlockLightOn * this);
undefined J3DTexGenBlock4__load(J3DTexGenBlock4 * this);
undefined J3DTexGenBlockBasic__load(J3DTexGenBlockBasic * this);
undefined J3DTexGenBlockPatched__patch(J3DTexGenBlockPatched * this);
undefined J3DTexGenBlock4__patch(J3DTexGenBlock4 * this);
undefined J3DTexGenBlockBasic__patch(J3DTexGenBlockBasic * this);
undefined J3DTexGenBlockPatched__diff(J3DTexGenBlockPatched * this, ulong param_1);
undefined J3DTexGenBlockPatched__diffTexMtx(J3DTexGenBlockPatched * this);
undefined J3DTexGenBlockPatched__diffTexGen(J3DTexGenBlockPatched * this);
undefined J3DTevBlock1__load(J3DTevBlock1 * this);
undefined J3DTevBlock2__load(J3DTevBlock2 * this);
undefined J3DTevBlock4__load(J3DTevBlock4 * this);
undefined J3DTevBlock16__load(J3DTevBlock16 * this);
undefined J3DTevBlockPatched__patchTexNo(J3DTevBlockPatched * this);
undefined J3DTevBlockPatched__patchTevReg(J3DTevBlockPatched * this);
undefined J3DTevBlockPatched__patchTexNoAndTexCoordScale(J3DTevBlockPatched * this);
undefined J3DTevBlockPatched__patch(J3DTevBlockPatched * this);
undefined J3DTevBlock1__patchTexNo(J3DTevBlock1 * this);
undefined J3DTevBlock1__patchTevReg(J3DTevBlock1 * this);
undefined J3DTevBlock1__patchTexNoAndTexCoordScale(J3DTevBlock1 * this);
undefined J3DTevBlock1__patch(J3DTevBlock1 * this);
undefined J3DTevBlock2__patchTexNo(J3DTevBlock2 * this);
undefined J3DTevBlock2__patchTevReg(J3DTevBlock2 * this);
undefined J3DTevBlock2__patchTexNoAndTexCoordScale(J3DTevBlock2 * this);
undefined J3DTevBlock2__patch(J3DTevBlock2 * this);
undefined J3DTevBlock4__patchTexNo(J3DTevBlock4 * this);
undefined J3DTevBlock4__patchTevReg(J3DTevBlock4 * this);
undefined J3DTevBlock4__patchTexNoAndTexCoordScale(J3DTevBlock4 * this);
undefined J3DTevBlock4__patch(J3DTevBlock4 * this);
undefined J3DTevBlock16__patchTexNo(J3DTevBlock16 * this);
undefined J3DTevBlock16__patchTevReg(J3DTevBlock16 * this);
undefined J3DTevBlock16__patchTexNoAndTexCoordScale(J3DTevBlock16 * this);
undefined J3DTevBlock16__patch(J3DTevBlock16 * this);
undefined J3DTevBlock__diff(J3DTevBlock * this, ulong param_1);
undefined J3DTevBlockPatched__diffTexNo(J3DTevBlockPatched * this);
undefined J3DTevBlockPatched__diffTevStage(J3DTevBlockPatched * this);
undefined J3DTevBlockPatched__diffTevStageIndirect(J3DTevBlockPatched * this);
undefined J3DTevBlockPatched__diffTevReg(J3DTevBlockPatched * this);
undefined J3DTevBlockPatched__diffTexCoordScale(J3DTevBlockPatched * this);
undefined J3DTevBlock1__diffTexNo(J3DTevBlock1 * this);
undefined J3DTevBlock1__diffTevReg(J3DTevBlock1 * this);
undefined J3DTevBlock1__diffTevStage(J3DTevBlock1 * this);
undefined J3DTevBlock1__diffTevStageIndirect(J3DTevBlock1 * this);
undefined J3DTevBlock1__diffTexCoordScale(J3DTevBlock1 * this);
undefined J3DTevBlock2__diffTexNo(J3DTevBlock2 * this);
undefined J3DTevBlock2__diffTevReg(J3DTevBlock2 * this);
undefined J3DTevBlock2__diffTevStage(J3DTevBlock2 * this);
undefined J3DTevBlock2__diffTevStageIndirect(J3DTevBlock2 * this);
undefined J3DTevBlock2__diffTexCoordScale(J3DTevBlock2 * this);
undefined J3DTevBlock4__diffTexNo(J3DTevBlock4 * this);
undefined J3DTevBlock4__diffTevReg(J3DTevBlock4 * this);
undefined J3DTevBlock4__diffTevStage(J3DTevBlock4 * this);
undefined J3DTevBlock4__diffTevStageIndirect(J3DTevBlock4 * this);
undefined J3DTevBlock4__diffTexCoordScale(J3DTevBlock4 * this);
undefined J3DTevBlock16__diffTexNo(J3DTevBlock16 * this);
undefined J3DTevBlock16__diffTevReg(J3DTevBlock16 * this);
undefined J3DTevBlock16__diffTevStage(J3DTevBlock16 * this);
undefined J3DTevBlock16__diffTevStageIndirect(J3DTevBlock16 * this);
undefined J3DTevBlock16__diffTexCoordScale(J3DTevBlock16 * this);
undefined J3DTevBlock16__ptrToIndex(J3DTevBlock16 * this);
undefined J3DTevBlockPatched__ptrToIndex(J3DTevBlockPatched * this);
undefined J3DTevBlock__indexToPtr_private(J3DTevBlock * this, ulong param_1);
undefined J3DIndBlockFull__load(J3DIndBlockFull * this);
undefined J3DIndBlockFull__diff(J3DIndBlockFull * this, ulong param_1);
undefined J3DPEBlockOpa__load(J3DPEBlockOpa * this);
undefined J3DPEBlockTexEdge__load(J3DPEBlockTexEdge * this);
undefined J3DPEBlockXlu__load(J3DPEBlockXlu * this);
undefined J3DPEBlockFogOff__load(J3DPEBlockFogOff * this);
undefined J3DPEBlockFogOff__diffBlend(J3DPEBlockFogOff * this);
undefined J3DPEBlockFull__load(J3DPEBlockFull * this);
undefined J3DPEBlockFull__patch(J3DPEBlockFull * this);
undefined J3DPEBlockFull__diffFog(J3DPEBlockFull * this);
undefined J3DPEBlockFull__diffBlend(J3DPEBlockFull * this);
undefined J3DPEBlockFull__diff(J3DPEBlockFull * this, ulong param_1);
undefined J3DColorBlockLightOff__reset(J3DColorBlockLightOff * this, J3DColorBlock * param_1);
undefined J3DColorBlockAmbientOn__reset(J3DColorBlockAmbientOn * this, J3DColorBlock * param_1);
undefined J3DColorBlockLightOn__reset(J3DColorBlockLightOn * this, J3DColorBlock * param_1);
undefined J3DTexGenBlockPatched__reset(J3DTexGenBlockPatched * this, J3DTexGenBlock * param_1);
undefined J3DTexGenBlock4__reset(J3DTexGenBlock4 * this, J3DTexGenBlock * param_1);
undefined J3DTexGenBlockBasic__reset(J3DTexGenBlockBasic * this, J3DTexGenBlock * param_1);
undefined J3DTevBlockPatched__reset(J3DTevBlockPatched * this, J3DTevBlock * param_1);
undefined J3DTevBlock1__reset(J3DTevBlock1 * this, J3DTevBlock * param_1);
undefined J3DTevBlock2__reset(J3DTevBlock2 * this, J3DTevBlock * param_1);
undefined J3DTevBlock4__reset(J3DTevBlock4 * this, J3DTevBlock * param_1);
undefined J3DTevBlock16__reset(J3DTevBlock16 * this, J3DTevBlock * param_1);
undefined J3DIndBlockFull__reset(J3DIndBlockFull * this, J3DIndBlock * param_1);
undefined J3DPEBlockFogOff__reset(J3DPEBlockFogOff * this, J3DPEBlock * param_1);
undefined J3DPEBlockFull__reset(J3DPEBlockFull * this, J3DPEBlock * param_1);
undefined J3DTexGenBlockPatched__calc(J3DTexGenBlockPatched * this, float * param_1);
undefined J3DTexMtx__load(J3DTexMtx * this, ulong param_1);
undefined J3DGraphBase__J3DGDLoadTexMtxImm();
undefined J3DTevBlock__diffTevReg(J3DTevBlock * this);
undefined J3DTevBlock__diffTevStageIndirect(J3DTevBlock * this);
undefined J3DTevBlock__diffTevStage(J3DTevBlock * this);
undefined J3DTevBlock__diffTexCoordScale(J3DTevBlock * this);
undefined J3DTevBlock__diffTexNo(J3DTevBlock * this);
undefined J3DPEBlockFull__getType(J3DPEBlockFull * this);
undefined J3DPEBlockFull__setFog(J3DPEBlockFull * this, J3DFog * param_1);
undefined J3DPEBlockFull__getFog(J3DPEBlockFull * this);
undefined J3DPEBlockFull__setAlphaComp(J3DPEBlockFull * this, J3DAlphaComp param_1);
// undefined J3DPEBlockFull__setAlphaComp(J3DPEBlockFull * this, J3DAlphaComp * param_1);
undefined J3DPEBlockFull__getAlphaComp(J3DPEBlockFull * this);
undefined J3DPEBlockFull__setBlend(J3DPEBlockFull * this, J3DBlend * param_1);
// undefined J3DPEBlockFull__setBlend(J3DPEBlockFull * this, J3DBlend * param_1);
undefined J3DPEBlockFull__getBlend(J3DPEBlockFull * this);
undefined J3DPEBlockFull__setZMode(J3DPEBlockFull * this, J3DZMode param_1);
// undefined J3DPEBlockFull__setZMode(J3DPEBlockFull * this, J3DZMode * param_1);
undefined J3DPEBlockFull__getZMode(J3DPEBlockFull * this);
undefined J3DPEBlockFull__setZCompLoc(J3DPEBlockFull * this, uchar param_1);
// undefined J3DPEBlockFull__setZCompLoc(J3DPEBlockFull * this, uchar * param_1);
undefined J3DPEBlockFull__getZCompLoc(J3DPEBlockFull * this);
undefined J3DPEBlockFull__setDither(J3DPEBlockFull * this, uchar param_1);
// undefined J3DPEBlockFull__setDither(J3DPEBlockFull * this, uchar * param_1);
undefined J3DPEBlockFull__getDither(J3DPEBlockFull * this);
undefined J3DPEBlockFull__getFogOffset(J3DPEBlockFull * this);
undefined J3DPEBlockFull__setFogOffset(J3DPEBlockFull * this, ulong param_1);
void J3DPEBlockFull__J3DPEBlockFull_destructor(J3DPEBlockFull * this);
undefined J3DPEBlockFogOff__diff(J3DPEBlockFogOff * this, ulong param_1);
undefined J3DPEBlockFogOff__getType(J3DPEBlockFogOff * this);
undefined J3DPEBlockFogOff__setAlphaComp(J3DPEBlockFogOff * this, J3DAlphaComp param_1);
// undefined J3DPEBlockFogOff__setAlphaComp(J3DPEBlockFogOff * this, J3DAlphaComp * param_1);
undefined J3DPEBlockFogOff__getAlphaComp(J3DPEBlockFogOff * this);
undefined J3DPEBlockFogOff__setBlend(J3DPEBlockFogOff * this, J3DBlend param_1);
// undefined J3DPEBlockFogOff__setBlend(J3DPEBlockFogOff * this, J3DBlend * param_1);
undefined J3DPEBlockFogOff__getBlend(J3DPEBlockFogOff * this);
undefined J3DPEBlockFogOff__setZMode(J3DPEBlockFogOff * this, J3DZMode param_1);
// undefined J3DPEBlockFogOff__setZMode(J3DPEBlockFogOff * this, J3DZMode * param_1);
undefined J3DPEBlockFogOff__getZMode(J3DPEBlockFogOff * this);
undefined J3DPEBlockFogOff__setZCompLoc(J3DPEBlockFogOff * this, uchar param_1);
// undefined J3DPEBlockFogOff__setZCompLoc(J3DPEBlockFogOff * this, uchar * param_1);
undefined J3DPEBlockFogOff__getZCompLoc(J3DPEBlockFogOff * this);
undefined J3DPEBlockFogOff__setDither(J3DPEBlockFogOff * this, uchar param_1);
// undefined J3DPEBlockFogOff__setDither(J3DPEBlockFogOff * this, uchar * param_1);
undefined J3DPEBlockFogOff__getDither(J3DPEBlockFogOff * this);
void J3DPEBlockFogOff__J3DPEBlockFogOff_destructor(J3DPEBlockFogOff * this);
undefined J3DTevBlock16__indexToPtr(J3DTevBlock16 * this);
undefined J3DTevBlock16__getType(J3DTevBlock16 * this);
undefined J3DTevBlock16__setTexNo(J3DTevBlock16 * this, ulong param_1, ushort param_2);
// undefined J3DTevBlock16__setTexNo(J3DTevBlock16 * this, ulong param_1, ushort * param_2);
undefined J3DTevBlock16__getTexNo(J3DTevBlock16 * this, ulong param_1);
undefined J3DTevBlock16__setTevOrder(J3DTevBlock16 * this, ulong param_1, J3DTevOrder param_2);
// undefined J3DTevBlock16__setTevOrder(J3DTevBlock16 * this, ulong param_1, J3DTevOrder * param_2);
undefined J3DTevBlock16__getTevOrder(J3DTevBlock16 * this, ulong param_1);
undefined J3DTevBlock16__setTevColor(J3DTevBlock16 * this, ulong param_1, J3DGXColorS10 param_2);
// undefined J3DTevBlock16__setTevColor(J3DTevBlock16 * this, ulong param_1, J3DGXColorS10 * param_2);
undefined J3DTevBlock16__getTevColor(J3DTevBlock16 * this, ulong param_1);
undefined J3DTevBlock16__setTevKColor(J3DTevBlock16 * this, ulong param_1, J3DGXColor param_2);
// undefined J3DTevBlock16__setTevKColor(J3DTevBlock16 * this, ulong param_1, J3DGXColor * param_2);
undefined J3DTevBlock16__getTevKColor(J3DTevBlock16 * this, ulong param_1);
undefined J3DTevBlock16__setTevKColorSel(J3DTevBlock16 * this, ulong param_1, uchar param_2);
// undefined J3DTevBlock16__setTevKColorSel(J3DTevBlock16 * this, ulong param_1, uchar * param_2);
undefined J3DTevBlock16__getTevKColorSel(J3DTevBlock16 * this, ulong param_1);
undefined J3DTevBlock16__setTevKAlphaSel(J3DTevBlock16 * this, ulong param_1, uchar param_2);
// undefined J3DTevBlock16__setTevKAlphaSel(J3DTevBlock16 * this, ulong param_1, uchar * param_2);
undefined J3DTevBlock16__getTevKAlphaSel(J3DTevBlock16 * this, ulong param_1);
undefined J3DTevBlock16__setTevStageNum(J3DTevBlock16 * this, uchar param_1);
// undefined J3DTevBlock16__setTevStageNum(J3DTevBlock16 * this, uchar * param_1);
undefined J3DTevBlock16__getTevStageNum(J3DTevBlock16 * this);
undefined J3DTevBlock16__setTevStage(J3DTevBlock16 * this, ulong param_1, undefined param_2);
// undefined J3DTevBlock16__setTevStage(J3DTevBlock16 * this, ulong param_1, undefined param_2);
undefined J3DTevBlock16__getTevStage(J3DTevBlock16 * this, ulong param_1);
undefined J3DTevBlock16__setTevSwapModeInfo(J3DTevBlock16 * this, ulong param_1, J3DTevSwapModeInfo param_2);
// undefined J3DTevBlock16__setTevSwapModeInfo(J3DTevBlock16 * this, ulong param_1, J3DTevSwapModeInfo * param_2);
undefined J3DTevBlock16__setTevSwapModeTable(J3DTevBlock16 * this, ulong param_1, J3DTevSwapModeTable param_2);
// undefined J3DTevBlock16__setTevSwapModeTable(J3DTevBlock16 * this, ulong param_1, J3DTevSwapModeTable * param_2);
undefined J3DTevBlock16__getTevSwapModeTable(J3DTevBlock16 * this, ulong param_1);
undefined J3DTevBlock16__setIndTevStage(J3DTevBlock16 * this, ulong param_1, J3DIndTevStage param_2);
// undefined J3DTevBlock16__setIndTevStage(J3DTevBlock16 * this, ulong param_1, J3DIndTevStage * param_2);
undefined J3DTevBlock16__getIndTevStage(J3DTevBlock16 * this, ulong param_1);
undefined J3DTevBlock16__getTexNoOffset(J3DTevBlock16 * this);
undefined J3DTevBlock16__getTevRegOffset(J3DTevBlock16 * this);
undefined J3DTevBlock16__setTevRegOffset(J3DTevBlock16 * this, ulong param_1);
void J3DTevBlock16__J3DTevBlock16_destructor(J3DTevBlock16 * this);
undefined J3DTevBlock__setTexNoOffset(J3DTevBlock * this, ulong param_1);
undefined J3DTevBlock4__ptrToIndex(J3DTevBlock4 * this);
undefined J3DTevBlock4__indexToPtr(J3DTevBlock4 * this);
undefined J3DTevBlock4__getType(J3DTevBlock4 * this);
undefined J3DTevBlock4__setTexNo(J3DTevBlock4 * this, ulong param_1, ushort param_2);
// undefined J3DTevBlock4__setTexNo(J3DTevBlock4 * this, ulong param_1, ushort * param_2);
undefined J3DTevBlock4__getTexNo(J3DTevBlock4 * this, ulong param_1);
undefined J3DTevBlock4__setTevOrder(J3DTevBlock4 * this, ulong param_1, J3DTevOrder param_2);
// undefined J3DTevBlock4__setTevOrder(J3DTevBlock4 * this, ulong param_1, J3DTevOrder * param_2);
undefined J3DTevBlock4__getTevOrder(J3DTevBlock4 * this, ulong param_1);
undefined J3DTevBlock4__setTevColor(J3DTevBlock4 * this, ulong param_1, J3DGXColorS10 param_2);
// undefined J3DTevBlock4__setTevColor(J3DTevBlock4 * this, ulong param_1, J3DGXColorS10 * param_2);
undefined J3DTevBlock4__getTevColor(J3DTevBlock4 * this, ulong param_1);
undefined J3DTevBlock4__setTevKColor(J3DTevBlock4 * this, ulong param_1, J3DGXColor param_2);
// undefined J3DTevBlock4__setTevKColor(J3DTevBlock4 * this, ulong param_1, J3DGXColor * param_2);
undefined J3DTevBlock4__getTevKColor(J3DTevBlock4 * this, ulong param_1);
undefined J3DTevBlock4__setTevKColorSel(J3DTevBlock4 * this, ulong param_1, uchar param_2);
// undefined J3DTevBlock4__setTevKColorSel(J3DTevBlock4 * this, ulong param_1, uchar * param_2);
undefined J3DTevBlock4__getTevKColorSel(J3DTevBlock4 * this, ulong param_1);
undefined J3DTevBlock4__setTevKAlphaSel(J3DTevBlock4 * this, ulong param_1, uchar param_2);
// undefined J3DTevBlock4__setTevKAlphaSel(J3DTevBlock4 * this, ulong param_1, uchar * param_2);
undefined J3DTevBlock4__getTevKAlphaSel(J3DTevBlock4 * this, ulong param_1);
undefined J3DTevBlock4__setTevStageNum(J3DTevBlock4 * this, uchar param_1);
// undefined J3DTevBlock4__setTevStageNum(J3DTevBlock4 * this, uchar * param_1);
undefined J3DTevBlock4__getTevStageNum(J3DTevBlock4 * this);
undefined J3DTevBlock4__setTevStage(J3DTevBlock4 * this, ulong param_1, undefined param_2);
// undefined J3DTevBlock4__setTevStage(J3DTevBlock4 * this, ulong param_1, undefined param_2);
undefined J3DTevBlock4__getTevStage(J3DTevBlock4 * this, ulong param_1);
undefined J3DTevBlock4__setTevSwapModeInfo(J3DTevBlock4 * this, ulong param_1, J3DTevSwapModeInfo param_2);
// undefined J3DTevBlock4__setTevSwapModeInfo(J3DTevBlock4 * this, ulong param_1, J3DTevSwapModeInfo * param_2);
undefined J3DTevBlock4__setTevSwapModeTable(J3DTevBlock4 * this, ulong param_1, J3DTevSwapModeTable param_2);
// undefined J3DTevBlock4__setTevSwapModeTable(J3DTevBlock4 * this, ulong param_1, J3DTevSwapModeTable * param_2);
undefined J3DTevBlock4__getTevSwapModeTable(J3DTevBlock4 * this, ulong param_1);
undefined J3DTevBlock4__setIndTevStage(J3DTevBlock4 * this, ulong param_1, J3DIndTevStage param_2);
// undefined J3DTevBlock4__setIndTevStage(J3DTevBlock4 * this, ulong param_1, J3DIndTevStage * param_2);
undefined J3DTevBlock4__getIndTevStage(J3DTevBlock4 * this, ulong param_1);
undefined J3DTevBlock4__getTexNoOffset(J3DTevBlock4 * this);
undefined J3DTevBlock4__getTevRegOffset(J3DTevBlock4 * this);
undefined J3DTevBlock4__setTevRegOffset(J3DTevBlock4 * this, ulong param_1);
void J3DTevBlock4__J3DTevBlock4_destructor(J3DTevBlock4 * this);
undefined J3DTevBlock2__ptrToIndex(J3DTevBlock2 * this);
undefined J3DTevBlock2__indexToPtr(J3DTevBlock2 * this);
undefined J3DTevBlock2__getType(J3DTevBlock2 * this);
undefined J3DTevBlock2__setTexNo(J3DTevBlock2 * this, ulong param_1, ushort param_2);
// undefined J3DTevBlock2__setTexNo(J3DTevBlock2 * this, ulong param_1, ushort * param_2);
undefined J3DTevBlock2__getTexNo(J3DTevBlock2 * this, ulong param_1);
undefined J3DTevBlock2__setTevOrder(J3DTevBlock2 * this, ulong param_1, J3DTevOrder param_2);
// undefined J3DTevBlock2__setTevOrder(J3DTevBlock2 * this, ulong param_1, J3DTevOrder * param_2);
undefined J3DTevBlock2__getTevOrder(J3DTevBlock2 * this, ulong param_1);
undefined J3DTevBlock2__setTevColor(J3DTevBlock2 * this, ulong param_1, J3DGXColorS10 param_2);
// undefined J3DTevBlock2__setTevColor(J3DTevBlock2 * this, ulong param_1, J3DGXColorS10 * param_2);
undefined J3DTevBlock2__getTevColor(J3DTevBlock2 * this, ulong param_1);
undefined J3DTevBlock2__setTevKColor(J3DTevBlock2 * this, ulong param_1, J3DGXColor param_2);
// undefined J3DTevBlock2__setTevKColor(J3DTevBlock2 * this, ulong param_1, J3DGXColor * param_2);
undefined J3DTevBlock2__getTevKColor(J3DTevBlock2 * this, ulong param_1);
undefined J3DTevBlock2__setTevKColorSel(J3DTevBlock2 * this, ulong param_1, uchar param_2);
// undefined J3DTevBlock2__setTevKColorSel(J3DTevBlock2 * this, ulong param_1, uchar * param_2);
undefined J3DTevBlock2__getTevKColorSel(J3DTevBlock2 * this, ulong param_1);
undefined J3DTevBlock2__setTevKAlphaSel(J3DTevBlock2 * this, ulong param_1, uchar param_2);
// undefined J3DTevBlock2__setTevKAlphaSel(J3DTevBlock2 * this, ulong param_1, uchar * param_2);
undefined J3DTevBlock2__getTevKAlphaSel(J3DTevBlock2 * this, ulong param_1);
undefined J3DTevBlock2__setTevStageNum(J3DTevBlock2 * this, uchar param_1);
// undefined J3DTevBlock2__setTevStageNum(J3DTevBlock2 * this, uchar * param_1);
undefined J3DTevBlock2__getTevStageNum(J3DTevBlock2 * this);
undefined J3DTevBlock2__setTevStage(J3DTevBlock2 * this, ulong param_1, undefined param_2);
// undefined J3DTevBlock2__setTevStage(J3DTevBlock2 * this, ulong param_1, undefined param_2);
undefined J3DTevBlock2__getTevStage(J3DTevBlock2 * this, ulong param_1);
undefined J3DTevBlock2__setTevSwapModeInfo(J3DTevBlock2 * this, ulong param_1, J3DTevSwapModeInfo param_2);
// undefined J3DTevBlock2__setTevSwapModeInfo(J3DTevBlock2 * this, ulong param_1, J3DTevSwapModeInfo * param_2);
undefined J3DTevBlock2__setTevSwapModeTable(J3DTevBlock2 * this, ulong param_1, J3DTevSwapModeTable param_2);
// undefined J3DTevBlock2__setTevSwapModeTable(J3DTevBlock2 * this, ulong param_1, J3DTevSwapModeTable * param_2);
undefined J3DTevBlock2__getTevSwapModeTable(J3DTevBlock2 * this, ulong param_1);
undefined J3DTevBlock2__setIndTevStage(J3DTevBlock2 * this, ulong param_1, J3DIndTevStage param_2);
// undefined J3DTevBlock2__setIndTevStage(J3DTevBlock2 * this, ulong param_1, J3DIndTevStage * param_2);
undefined J3DTevBlock2__getIndTevStage(J3DTevBlock2 * this, ulong param_1);
undefined J3DTevBlock2__getTexNoOffset(J3DTevBlock2 * this);
undefined J3DTevBlock2__getTevRegOffset(J3DTevBlock2 * this);
undefined J3DTevBlock2__setTevRegOffset(J3DTevBlock2 * this, ulong param_1);
void J3DTevBlock2__J3DTevBlock2_destructor(J3DTevBlock2 * this);
undefined J3DTevBlock1__ptrToIndex(J3DTevBlock1 * this);
undefined J3DTevBlock1__indexToPtr(J3DTevBlock1 * this);
undefined J3DTevBlock1__getType(J3DTevBlock1 * this);
undefined J3DTevBlock1__setTexNo(J3DTevBlock1 * this, ulong param_1, ushort param_2);
// undefined J3DTevBlock1__setTexNo(J3DTevBlock1 * this, ulong param_1, ushort * param_2);
undefined J3DTevBlock1__getTexNo(J3DTevBlock1 * this, ulong param_1);
undefined J3DTevBlock1__setTevOrder(J3DTevBlock1 * this, ulong param_1, J3DTevOrder param_2);
// undefined J3DTevBlock1__setTevOrder(J3DTevBlock1 * this, ulong param_1, J3DTevOrder * param_2);
undefined J3DTevBlock1__getTevOrder(J3DTevBlock1 * this, ulong param_1);
undefined J3DTevBlock1__setTevStageNum(J3DTevBlock1 * this, uchar param_1);
// undefined J3DTevBlock1__setTevStageNum(J3DTevBlock1 * this, uchar * param_1);
undefined J3DTevBlock1__getTevStageNum(J3DTevBlock1 * this);
undefined J3DTevBlock1__setTevStage(J3DTevBlock1 * this, ulong param_1, undefined param_2);
// undefined J3DTevBlock1__setTevStage(J3DTevBlock1 * this, ulong param_1, undefined param_2);
undefined J3DTevBlock1__getTevStage(J3DTevBlock1 * this, ulong param_1);
undefined J3DTevBlock1__setIndTevStage(J3DTevBlock1 * this, ulong param_1, J3DIndTevStage param_2);
// undefined J3DTevBlock1__setIndTevStage(J3DTevBlock1 * this, ulong param_1, J3DIndTevStage * param_2);
undefined J3DTevBlock1__getIndTevStage(J3DTevBlock1 * this, ulong param_1);
undefined J3DTevBlock1__getTexNoOffset(J3DTevBlock1 * this);
void J3DTevBlock1__J3DTevBlock1_destructor(J3DTevBlock1 * this);
// undefined J3DTevBlock__setTevKColorSel(J3DTevBlock * this, ulong param_1, uchar * param_2);
// undefined J3DTevBlock__setTevKAlphaSel(J3DTevBlock * this, ulong param_1, uchar * param_2);
undefined J3DTevBlock__setTevSwapModeInfo(J3DTevBlock * this, ulong param_1, J3DTevSwapModeInfo param_2);
// undefined J3DTevBlock__setTevSwapModeInfo(J3DTevBlock * this, ulong param_1, J3DTevSwapModeInfo * param_2);
// undefined J3DTevBlock__setTevSwapModeTable(J3DTevBlock * this, ulong param_1, J3DTevSwapModeTable * param_2);
undefined J3DTevBlock__getTevRegOffset(J3DTevBlock * this);
undefined J3DTevBlock__setTevRegOffset(J3DTevBlock * this, ulong param_1);
undefined J3DTevBlockPatched__load(J3DTevBlockPatched * this);
undefined J3DTevBlockPatched__indexToPtr(J3DTevBlockPatched * this);
undefined J3DTevBlockPatched__getType(J3DTevBlockPatched * this);
undefined J3DTevBlockPatched__setTevStageNum(J3DTevBlockPatched * this, uchar param_1);
// undefined J3DTevBlockPatched__setTevStageNum(J3DTevBlockPatched * this, uchar * param_1);
undefined J3DTevBlockPatched__getTevStageNum(J3DTevBlockPatched * this);
undefined J3DTevBlockPatched__setTexNo(J3DTevBlockPatched * this, ulong param_1, ushort param_2);
// undefined J3DTevBlockPatched__setTexNo(J3DTevBlockPatched * this, ulong param_1, ushort * param_2);
undefined J3DTevBlockPatched__getTexNo(J3DTevBlockPatched * this, ulong param_1);
undefined J3DTevBlockPatched__setTevOrder(J3DTevBlockPatched * this, ulong param_1, J3DTevOrder param_2);
// undefined J3DTevBlockPatched__setTevOrder(J3DTevBlockPatched * this, ulong param_1, J3DTevOrder * param_2);
undefined J3DTevBlockPatched__getTevOrder(J3DTevBlockPatched * this, ulong param_1);
undefined J3DTevBlockPatched__setTevStage(J3DTevBlockPatched * this, ulong param_1, J3DTevStage * param_2);
// undefined J3DTevBlockPatched__setTevStage(J3DTevBlockPatched * this, ulong param_1, J3DTevStage * param_2);
undefined J3DTevBlockPatched__getTevStage(J3DTevBlockPatched * this, ulong param_1);
undefined J3DTevBlockPatched__setIndTevStage(J3DTevBlockPatched * this, ulong param_1, J3DIndTevStage param_2);
// undefined J3DTevBlockPatched__setIndTevStage(J3DTevBlockPatched * this, ulong param_1, J3DIndTevStage * param_2);
undefined J3DTevBlockPatched__getIndTevStage(J3DTevBlockPatched * this, ulong param_1);
undefined J3DTevBlockPatched__setTevColor(J3DTevBlockPatched * this, ulong param_1, J3DGXColorS10 param_2);
// undefined J3DTevBlockPatched__setTevColor(J3DTevBlockPatched * this, ulong param_1, J3DGXColorS10 * param_2);
undefined J3DTevBlockPatched__getTevColor(J3DTevBlockPatched * this, ulong param_1);
undefined J3DTevBlockPatched__setTevKColor(J3DTevBlockPatched * this, ulong param_1, J3DGXColor param_2);
// undefined J3DTevBlockPatched__setTevKColor(J3DTevBlockPatched * this, ulong param_1, J3DGXColor * param_2);
undefined J3DTevBlockPatched__getTevKColor(J3DTevBlockPatched * this, ulong param_1);
undefined J3DTevBlockPatched__setTevKColorSel(J3DTevBlockPatched * this, ulong param_1, uchar param_2);
// undefined J3DTevBlockPatched__setTevKColorSel(J3DTevBlockPatched * this, ulong param_1, uchar * param_2);
undefined J3DTevBlockPatched__getTevKColorSel(J3DTevBlockPatched * this, ulong param_1);
undefined J3DTevBlockPatched__getTexNoOffset(J3DTevBlockPatched * this);
undefined J3DTevBlockPatched__getTevRegOffset(J3DTevBlockPatched * this);
undefined J3DTevBlockPatched__setTevRegOffset(J3DTevBlockPatched * this, ulong param_1);
void J3DTevBlockPatched__J3DTevBlockPatched_destructor(J3DTevBlockPatched * this);
undefined J3DTexGenBlockBasic__getType(J3DTexGenBlockBasic * this);
undefined J3DTexGenBlockBasic__setNBTScale(J3DTexGenBlockBasic * this, J3DNBTScale param_1);
// undefined J3DTexGenBlockBasic__setNBTScale(J3DTexGenBlockBasic * this, J3DNBTScale * param_1);
undefined J3DTexGenBlockBasic__getNBTScale(J3DTexGenBlockBasic * this);
void J3DTexGenBlockBasic__J3DTexGenBlockBasic_destructor(J3DTexGenBlockBasic * this);
undefined J3DTexGenBlockPatched__setTexGenNum(J3DTexGenBlockPatched * this, ulong param_1);
// undefined J3DTexGenBlockPatched__setTexGenNum(J3DTexGenBlockPatched * this, ulong * param_1);
undefined J3DTexGenBlockPatched__getTexGenNum(J3DTexGenBlockPatched * this);
undefined J3DTexGenBlockPatched__setTexCoord(J3DTexGenBlockPatched * this, ulong param_1, J3DTexCoord * param_2);
undefined J3DTexGenBlockPatched__getTexCoord(J3DTexGenBlockPatched * this, ulong param_1);
undefined J3DTexGenBlockPatched__setTexMtx(J3DTexGenBlockPatched * this, ulong param_1, J3DTexMtx * param_2);
undefined J3DTexGenBlockPatched__getTexMtx(J3DTexGenBlockPatched * this, ulong param_1);
undefined J3DTexGenBlockPatched__getTexMtxOffset(J3DTexGenBlockPatched * this);
undefined J3DTexGenBlockPatched__setTexMtxOffset(J3DTexGenBlockPatched * this, ulong param_1);
undefined J3DTexGenBlock4__getType(J3DTexGenBlock4 * this);
undefined J3DTexGenBlock4__setNBTScale(J3DTexGenBlock4 * this, J3DNBTScale param_1);
// undefined J3DTexGenBlock4__setNBTScale(J3DTexGenBlock4 * this, J3DNBTScale * param_1);
undefined J3DTexGenBlock4__getNBTScale(J3DTexGenBlock4 * this);
void J3DTexGenBlock4__J3DTexGenBlock4_destructor(J3DTexGenBlock4 * this);
undefined J3DTexGenBlockPatched__load(J3DTexGenBlockPatched * this);
undefined J3DTexGenBlockPatched__getType(J3DTexGenBlockPatched * this);
undefined J3DColorBlockLightOn__getType(J3DColorBlockLightOn * this);
undefined J3DColorBlockLightOn__setMatColor(J3DColorBlockLightOn * this, ulong param_1, J3DGXColor param_2);
// undefined J3DColorBlockLightOn__setMatColor(J3DColorBlockLightOn * this, ulong param_1, J3DGXColor * param_2);
undefined J3DColorBlockLightOn__getMatColor(J3DColorBlockLightOn * this, ulong param_1);
undefined J3DColorBlockLightOn__setAmbColor(J3DColorBlockLightOn * this, ulong param_1, J3DGXColor param_2);
// undefined J3DColorBlockLightOn__setAmbColor(J3DColorBlockLightOn * this, ulong param_1, J3DGXColor * param_2);
undefined J3DColorBlockLightOn__getAmbColor(J3DColorBlockLightOn * this, ulong param_1);
undefined J3DColorBlockLightOn__setColorChanNum(J3DColorBlockLightOn * this, uchar * param_1);
// undefined J3DColorBlockLightOn__setColorChanNum(J3DColorBlockLightOn * this, uchar param_1);
undefined J3DColorBlockLightOn__getColorChanNum(J3DColorBlockLightOn * this);
undefined J3DColorBlockLightOn__setColorChan(J3DColorBlockLightOn * this, ulong param_1, J3DColorChan * param_2);
// undefined J3DColorBlockLightOn__setColorChan(J3DColorBlockLightOn * this, ulong param_1, J3DColorChan * param_2);
undefined J3DColorBlockLightOn__getColorChan(J3DColorBlockLightOn * this, ulong param_1);
undefined J3DColorBlockLightOn__setLight(J3DColorBlockLightOn * this, ulong param_1, J3DLightObj * param_2);
undefined J3DColorBlockLightOn__getLight(J3DColorBlockLightOn * this, ulong param_1);
undefined J3DColorBlockLightOn__setCullMode(J3DColorBlockLightOn * this, uchar param_1);
// undefined J3DColorBlockLightOn__setCullMode(J3DColorBlockLightOn * this, uchar * param_1);
undefined J3DColorBlockLightOn__getCullMode(J3DColorBlockLightOn * this);
undefined J3DColorBlockLightOn__getMatColorOffset(J3DColorBlockLightOn * this);
undefined J3DColorBlockLightOn__getColorChanOffset(J3DColorBlockLightOn * this);
undefined J3DColorBlockLightOn__setMatColorOffset(J3DColorBlockLightOn * this, ulong param_1);
undefined J3DColorBlockLightOn__setColorChanOffset(J3DColorBlockLightOn * this, ulong param_1);
void J3DColorBlockLightOn__J3DColorBlockLightOn_destructor(J3DColorBlockLightOn * this);
undefined J3DColorBlockAmbientOn__getType(J3DColorBlockAmbientOn * this);
undefined J3DColorBlockAmbientOn__setAmbColor(J3DColorBlockAmbientOn * this, ulong param_1, J3DGXColor param_2);
// undefined J3DColorBlockAmbientOn__setAmbColor(J3DColorBlockAmbientOn * this, ulong param_1, J3DGXColor * param_2);
undefined J3DColorBlockAmbientOn__getAmbColor(J3DColorBlockAmbientOn * this, ulong param_1);
void J3DColorBlockAmbientOn__J3DColorBlockAmbientOn_destructor(J3DColorBlockAmbientOn * this);
undefined J3DColorBlockLightOff__setMatColor(J3DColorBlockLightOff * this, ulong param_1, J3DGXColor param_2);
// undefined J3DColorBlockLightOff__setMatColor(J3DColorBlockLightOff * this, ulong param_1, J3DGXColor * param_2);
undefined J3DColorBlockLightOff__getMatColor(J3DColorBlockLightOff * this, ulong param_1);
undefined J3DColorBlockLightOff__setColorChanNum(J3DColorBlockLightOff * this, uchar * param_1);
// undefined J3DColorBlockLightOff__setColorChanNum(J3DColorBlockLightOff * this, uchar param_1);
undefined J3DColorBlockLightOff__getColorChanNum(J3DColorBlockLightOff * this);
undefined J3DColorBlockLightOff__setColorChan(J3DColorBlockLightOff * this, ulong param_1, J3DColorChan * param_2);
// undefined J3DColorBlockLightOff__setColorChan(J3DColorBlockLightOff * this, ulong param_1, J3DColorChan * param_2);
undefined J3DColorBlockLightOff__getColorChan(J3DColorBlockLightOff * this, ulong param_1);
undefined J3DColorBlockLightOff__setCullMode(J3DColorBlockLightOff * this, uchar param_1);
// undefined J3DColorBlockLightOff__setCullMode(J3DColorBlockLightOff * this, uchar * param_1);
undefined J3DColorBlockLightOff__getCullMode(J3DColorBlockLightOff * this);
undefined J3DColorBlockLightOff__getMatColorOffset(J3DColorBlockLightOff * this);
undefined J3DColorBlockLightOff__getColorChanOffset(J3DColorBlockLightOff * this);
undefined J3DColorBlockLightOff__setMatColorOffset(J3DColorBlockLightOff * this, ulong param_1);
undefined J3DColorBlockLightOff__setColorChanOffset(J3DColorBlockLightOff * this, ulong param_1);
undefined J3DPEBlockXlu__getType(J3DPEBlockXlu * this);
void J3DPEBlockXlu__J3DPEBlockXlu_destructor(J3DPEBlockXlu * this);
undefined J3DPEBlockTexEdge__getType(J3DPEBlockTexEdge * this);
void J3DPEBlockTexEdge__J3DPEBlockTexEdge_destructor(J3DPEBlockTexEdge * this);
undefined J3DPEBlockOpa__getType(J3DPEBlockOpa * this);
void J3DPEBlockOpa__J3DPEBlockOpa_destructor(J3DPEBlockOpa * this);
undefined J3DIndBlockFull__getType(J3DIndBlockFull * this);
undefined J3DIndBlockFull__setIndTexStageNum(J3DIndBlockFull * this, uchar param_1);
undefined J3DIndBlockFull__getIndTexStageNum(J3DIndBlockFull * this);
undefined J3DIndBlockFull__setIndTexOrder(J3DIndBlockFull * this, ulong param_1, J3DIndTexOrder param_2);
// undefined J3DIndBlockFull__setIndTexOrder(J3DIndBlockFull * this, ulong param_1, J3DIndTexOrder * param_2);
undefined J3DIndBlockFull__getIndTexOrder(J3DIndBlockFull * this, ulong param_1);
undefined J3DIndBlockFull__setIndTexMtx(J3DIndBlockFull * this, ulong param_1, J3DIndTexMtx param_2);
// undefined J3DIndBlockFull__setIndTexMtx(J3DIndBlockFull * this, ulong param_1, J3DIndTexMtx * param_2);
undefined J3DIndBlockFull__getIndTexMtx(J3DIndBlockFull * this, ulong param_1);
undefined J3DIndBlockFull__setIndTexCoordScale(J3DIndBlockFull * this, ulong param_1, J3DIndTexCoordScale param_2);
// undefined J3DIndBlockFull__setIndTexCoordScale(J3DIndBlockFull * this, ulong param_1, J3DIndTexCoordScale * param_2);
undefined J3DIndBlockFull__getIndTexCoordScale(J3DIndBlockFull * this, ulong param_1);
void J3DIndBlockFull__J3DIndBlockFull_destructor(J3DIndBlockFull * this);
undefined J3DTevBlock__patchTexNo(J3DTevBlock * this);
undefined J3DTevBlock__patchTevReg(J3DTevBlock * this);
// undefined J3DTevBlock__setTexNo(J3DTevBlock * this, ulong param_1, ushort * param_2);
// undefined J3DTevBlock__setTevOrder(J3DTevBlock * this, ulong param_1, J3DTevOrder * param_2);
// undefined J3DTevBlock__setTevStageNum(J3DTevBlock * this, uchar * param_1);
// undefined J3DTevBlock__setTevStage(J3DTevBlock * this, ulong param_1, undefined param_2);
// undefined J3DTevBlock__setIndTevStage(J3DTevBlock * this, ulong param_1, J3DIndTevStage * param_2);
undefined J3DTevBlock__getTexNoOffset(J3DTevBlock * this);
undefined J3DColorBlockLightOff__getType(J3DColorBlockLightOff * this);
undefined J3DGraphBase____sinit_J3DMatBlock_cpp();
undefined J3DLightObj__load(J3DLightObj * this, ulong param_1);
undefined J3DGraphBase__loadTexCoordGens();
undefined J3DTexMtx__calc(J3DTexMtx * this);
undefined J3DGraphBase__isTexNoReg();
undefined J3DGraphBase__getTexNoReg();
undefined J3DGraphBase__loadTexNo();
undefined J3DGraphBase__patchTexNo_PtrToIdx();
undefined J3DGraphBase__loadNBTScale();
undefined J3DGraphBase__makeTexCoordTable();
undefined J3DGraphBase__makeAlphaCmpTable();
undefined J3DGraphBase__makeZModeTable();
undefined J3DGraphBase__makeTevSwapTable();
undefined J3DDrawBuffer__initialize(J3DDrawBuffer * this);
undefined J3DDrawBuffer__allocBuffer(J3DDrawBuffer * this, ulong param_1);
void J3DDrawBuffer__J3DDrawBuffer_destructor(J3DDrawBuffer * this);
undefined J3DDrawBuffer__frameInit(J3DDrawBuffer * this);
undefined J3DDrawBuffer__entryMatSort(J3DDrawBuffer * this, J3DMatPacket * param_1);
undefined J3DDrawBuffer__entryMatAnmSort(J3DDrawBuffer * this, J3DMatPacket * param_1);
undefined J3DDrawBuffer__entryZSort(J3DDrawBuffer * this, J3DMatPacket * param_1);
undefined J3DDrawBuffer__entryModelSort(J3DDrawBuffer * this, J3DMatPacket * param_1);
undefined J3DDrawBuffer__entryInvalidSort(J3DDrawBuffer * this, J3DMatPacket * param_1);
undefined J3DDrawBuffer__entryNonSort(J3DDrawBuffer * this, J3DMatPacket * param_1);
undefined J3DDrawBuffer__entryImm(J3DDrawBuffer * this, J3DPacket * param_1, ushort param_2);
undefined J3DDrawBuffer__draw(J3DDrawBuffer * this);
undefined J3DDrawBuffer__drawHead(J3DDrawBuffer * this);
undefined J3DDrawBuffer__drawTail(J3DDrawBuffer * this);
undefined J3DDrawBuffer__setCallBackPacket(J3DDrawBuffer * this, J3DCallBackPacket * param_1);
undefined J3DGraphBase____sinit_J3DDrawBuffer_cpp();
undefined J3DJointTree__clear(J3DJointTree * this);
undefined J3DJointTree__makeHierarchy(J3DJointTree * this, J3DJoint * param_1, J3DModelHierarchy * * param_2, J3DMaterialTable * param_3, J3DShape * * param_4);
undefined J3DModelData__clear(J3DModelData * this);
void J3DModelData__J3DModelData(J3DModelData * this);
void J3DModelData__J3DModelData_destructor(J3DModelData * this);
undefined J3DModelData__initShapeNodes(J3DModelData * this);
undefined J3DModelData__sortVcdVatCmd(J3DModelData * this);
undefined J3DModelData__indexToPtr(J3DModelData * this);
undefined J3DModelData__isDeformablePositionFormat(J3DModelData * this);
undefined J3DModelData__setMaterialTable(J3DModelData * this, J3DMaterialTable * param_1, J3DMaterialCopyFlag param_2);
undefined J3DNode__getType(J3DNode * this);
void J3DJointTree__J3DJointTree_destructor(J3DJointTree * this);
void J3DModel__J3DModel(J3DModel * this);
void J3DModel__J3DModel_destructor(J3DModel * this);
undefined J3DModel__initialize(J3DModel * this);
undefined J3DModel__entryModelData(J3DModel * this, J3DModelData * param_1, ulong param_2, ulong param_3);
undefined J3DModel__setNoUseDrawMtx(J3DModel * this);
undefined J3DModel__createSingleDrawMtx(J3DModel * this, J3DModelData * param_1);
undefined J3DModel__createDoubleDrawMtx(J3DModel * this, J3DModelData * param_1, ulong param_2);
undefined J3DModel__createShapePacket(J3DModel * this, J3DModelData * param_1);
undefined J3DModel__createMatPacket(J3DModel * this, J3DModelData * param_1, ulong param_2);
undefined J3DModel__createBumpMtxArray(J3DModel * this, J3DModelData * param_1, ulong param_2);
undefined J3DModel__newDifferedDisplayList(J3DModel * this, ulong param_1);
undefined J3DModel__lock(J3DModel * this);
undefined J3DModel__unlock(J3DModel * this);
undefined J3DModel__calcMaterial(J3DModel * this);
undefined J3DModel__diff(J3DModel * this);
undefined J3DModel__setSkinDeform(J3DModel * this, J3DSkinDeform * param_1, ulong param_2);
undefined J3DModel__calcAnmMtx(J3DModel * this);
undefined J3DModel__calcWeightEnvelopeMtx(J3DModel * this);
undefined J3DModel__update(J3DModel * this);
undefined J3DModel__calc(J3DModel * this);
undefined J3DModel__entry(J3DModel * this);
undefined J3DGraphAnimator__calcViewBaseMtx();
undefined J3DModel__calcDrawMtx(J3DModel * this);
undefined J3DModel__viewCalc(J3DModel * this);
undefined J3DModel__calcNrmMtx(J3DModel * this);
undefined J3DModel__calcBumpMtx(J3DModel * this);
undefined J3DModel__calcBBoard(J3DModel * this);
undefined J3DModel__prepareShapePackets(J3DModel * this);
int J3DFrameCtrl__init(J3DFrameCtrl * this, short ctx);
undefined J3DFrameCtrl__checkPass(J3DFrameCtrl * this, float param_1);
undefined J3DFrameCtrl__update(J3DFrameCtrl * this);
undefined J3DAnmTransformFull__getTransform(J3DAnmTransformFull * this, ushort param_1, J3DTransformInfo * param_2);
undefined J3DGraphAnimator__J3DHermiteInterpolationS();
undefined J3DGraphAnimator__J3DGetKeyFrameInterpolationS();
undefined J3DAnmTransformKey__calcTransform(J3DAnmTransformKey * this, float param_1, ushort param_2, J3DTransformInfo * param_3);
undefined J3DAnmTextureSRTKey__calcTransform(J3DAnmTextureSRTKey * this, float param_1, ushort param_2, J3DTextureSRTInfo * param_3);
undefined J3DAnmClusterFull__getWeight(J3DAnmClusterFull * this, ushort param_1);
undefined J3DAnmClusterKey__getWeight(J3DAnmClusterKey * this, ushort param_1);
undefined J3DAnmVtxColorFull__getColor(J3DAnmVtxColorFull * this, uchar param_1, ushort param_2, _GXColor * param_3);
undefined J3DAnmVtxColorKey__getColor(J3DAnmVtxColorKey * this, uchar param_1, ushort param_2, _GXColor * param_3);
undefined J3DAnmColor__searchUpdateMaterialID(J3DAnmColor * this, J3DMaterialTable * param_1);
// undefined J3DAnmColor__searchUpdateMaterialID(J3DAnmColor * this, J3DModelData * param_1);
undefined J3DAnmColorFull__getColor(J3DAnmColorFull * this, ushort param_1, _GXColor * param_2);
undefined J3DAnmColorKey__getColor(J3DAnmColorKey * this, ushort param_1, _GXColor * param_2);
undefined J3DAnmTexPattern__getTexNo(J3DAnmTexPattern * this, ushort param_1, ushort * param_2);
undefined J3DAnmVisibilityFull__getVisibility(J3DAnmVisibilityFull * this, ushort param_1, uchar * param_2);
undefined J3DAnmTexPattern__searchUpdateMaterialID(J3DAnmTexPattern * this, J3DMaterialTable * param_1);
// undefined J3DAnmTexPattern__searchUpdateMaterialID(J3DAnmTexPattern * this, J3DModelData * param_1);
undefined J3DAnmTextureSRTKey__searchUpdateMaterialID(J3DAnmTextureSRTKey * this, J3DMaterialTable * param_1);
// undefined J3DAnmTextureSRTKey__searchUpdateMaterialID(J3DAnmTextureSRTKey * this, J3DModelData * param_1);
undefined J3DAnmTevRegKey__getTevColorReg(J3DAnmTevRegKey * this, ushort param_1, $BAD__GXColorS10 * param_2);
undefined J3DAnmTevRegKey__getTevKonstReg(J3DAnmTevRegKey * this, ushort param_1, _GXColor * param_2);
undefined J3DAnmTevRegKey__searchUpdateMaterialID(J3DAnmTevRegKey * this, J3DMaterialTable * param_1);
// undefined J3DAnmTevRegKey__searchUpdateMaterialID(J3DAnmTevRegKey * this, J3DModelData * param_1);
undefined J3DGraphAnimator__J3DGetKeyFrameInterpolation(undefined8 param_1, J3DAnmKeyTableBase * animationTrack, undefined4 trackData);
// undefined J3DGraphAnimator__J3DGetKeyFrameInterpolation();
void J3DAnmColorKey__J3DAnmColorKey_destructor(J3DAnmColorKey * this);
void J3DAnmColor__J3DAnmColor_destructor(J3DAnmColor * this);
undefined J3DAnmColor__getColor(J3DAnmColor * this, ushort param_1, _GXColor * param_2);
void J3DAnmColorFull__J3DAnmColorFull_destructor(J3DAnmColorFull * this);
void J3DAnmVtxColorKey__J3DAnmVtxColorKey_destructor(J3DAnmVtxColorKey * this);
void J3DAnmVtxColor__J3DAnmVtxColor_destructor(J3DAnmVtxColor * this);
undefined J3DAnmVtxColor__getColor(J3DAnmVtxColor * this, uchar param_1, ushort param_2, _GXColor * param_3);
void J3DAnmVtxColorFull__J3DAnmVtxColorFull_destructor(J3DAnmVtxColorFull * this);
void J3DAnmClusterKey__J3DAnmClusterKey_destructor(J3DAnmClusterKey * this);
void J3DAnmCluster__J3DAnmCluster_destructor(J3DAnmCluster * this);
undefined J3DAnmCluster__getWeight(J3DAnmCluster * this, ushort param_1);
void J3DAnmClusterFull__J3DAnmClusterFull_destructor(J3DAnmClusterFull * this);
void J3DAnmTransformFull__J3DAnmTransformFull_destructor(J3DAnmTransformFull * this);
undefined J3DMatColorAnm__calc(J3DMatColorAnm * this, _GXColor * param_1);
undefined J3DTexMtxAnm__calc(J3DTexMtxAnm * this, J3DTextureSRTInfo * param_1);
undefined J3DTexNoAnm__calc(J3DTexNoAnm * this, ushort * param_1);
undefined J3DTevColorAnm__calc(J3DTevColorAnm * this, $BAD__GXColorS10 * param_1);
undefined J3DTevKColorAnm__calc(J3DTevKColorAnm * this, _GXColor * param_1);
undefined J3DMaterialAnm__initialize(J3DMaterialAnm * this);
undefined J3DMaterialAnm__calc(J3DMaterialAnm * this, J3DMaterial * param_1);
undefined J3DVisibilityManager__setVisibility(J3DVisibilityManager * this, J3DModelData * param_1);
void J3DVisibilityManager__J3DVisibilityManager_destructor(J3DVisibilityManager * this);
undefined J3DDeformData__clear(J3DDeformData * this);
void J3DDeformData__J3DDeformData(J3DDeformData * this);
undefined J3DDeformData__deform(J3DDeformData * this, J3DModel * param_1);
// undefined J3DDeformData__deform(J3DDeformData * this, J3DVertexBuffer * param_1);
undefined J3DDeformer__clear(J3DDeformer * this);
undefined J3DDeformer__deform(J3DDeformer * this, J3DVertexBuffer * param_1, ushort param_2);
// undefined J3DDeformer__deform(J3DDeformer * this, J3DVertexBuffer * param_1, ushort param_2, float * param_3);
undefined J3DDeformer__normalize(J3DDeformer * this, float * param_1);
undefined J3DDeformer__normalizeWeight(J3DDeformer * this, int param_1, float * param_2);
void J3DSkinDeform__J3DSkinDeform(J3DSkinDeform * this);
undefined J3DSkinDeform__initMtxIndexArray(J3DSkinDeform * this, J3DModelData * param_1);
undefined J3DSkinDeform__changeFastSkinDL(J3DSkinDeform * this, J3DModelData * param_1);
undefined J3DSkinDeform__calcNrmMtx(J3DSkinDeform * this, J3DModel * param_1);
undefined J3DSkinDeform__deformVtxPos_F32(J3DSkinDeform * this, J3DModel * param_1);
undefined J3DSkinDeform__deformVtxPos_S16(J3DSkinDeform * this, J3DModel * param_1);
undefined J3DSkinDeform__deformVtxNrm_F32(J3DSkinDeform * this, J3DModel * param_1);
undefined J3DSkinDeform__deformVtxNrm_S16(J3DSkinDeform * this, J3DModel * param_1);
undefined J3DSkinDeform__deform(J3DSkinDeform * this, J3DModel * param_1);
void J3DSkinDeform__J3DSkinDeform_destructor(J3DSkinDeform * this);
undefined J3DMtxCalcAnm__calc(J3DMtxCalcAnm * this, ushort param_1);
void J3DMtxCalcBasic__J3DMtxCalcBasic(J3DMtxCalcBasic * this);
// undefined J3DMtxCalcBasic__recursiveCalc(J3DMtxCalcBasic * this, J3DNode * param_1);
undefined J3DMtxCalcBasic__calcTransform(J3DMtxCalcBasic * this, ushort param_1, J3DTransformInfo * param_2);
undefined J3DMtxCalcBasic__calc(J3DMtxCalcBasic * this, ushort param_1);
undefined J3DMtxCalcSoftimage__calcTransform(J3DMtxCalcSoftimage * this, ushort param_1, J3DTransformInfo * param_2);
// undefined J3DMtxCalcMaya__calcTransform(J3DMtxCalcMaya * this, ushort param_1, J3DTransformInfo * param_2);
undefined J3DJoint__initialize(J3DJoint * this);
undefined J3DJoint__addMesh(J3DJoint * this, J3DMaterial * param_1);
undefined J3DJoint__calcIn(J3DJoint * this);
undefined J3DJoint__calcOut(J3DJoint * this);
undefined J3DJoint__entryIn(J3DJoint * this);
undefined J3DJoint__getType(J3DJoint * this);
void J3DJoint__J3DJoint_destructor(J3DJoint * this);
// undefined J3DMtxCalcAnm__calc(J3DMtxCalcAnm * this, ushort param_1);
// undefined J3DMtxCalcBasic__calcTransform(J3DMtxCalcBasic * this, ushort param_1, J3DTransformInfo * param_2);
// int J3DMtxCalcBasic__init(J3DMtxCalcBasic * this, cXyz * param_1, MTX34 * param_2);
// undefined J3DMtxCalcSoftimage__calcTransform(J3DMtxCalcSoftimage * this, ushort param_1, J3DTransformInfo * param_2);
// int J3DMtxCalcSoftimage__init(J3DMtxCalcSoftimage * this, EVP_PKEY_CTX * ctx);
// undefined J3DMtxCalcBasic__calc(J3DMtxCalcBasic * this, ushort param_1);
// undefined J3DMtxCalcMaya__calcTransform(J3DMtxCalcMaya * this, ushort param_1, J3DTransformInfo * param_2);
// undefined J3DMtxCalcBasic__recursiveCalc(J3DMtxCalcBasic * this, J3DNode * param_1);
// int J3DMtxCalcMaya__init(J3DMtxCalcMaya * this, EVP_PKEY_CTX * ctx);
undefined J3DNode__calcOut(J3DNode * this);
undefined J3DNode__calcIn(J3DNode * this);
int J3DNode__init(J3DNode * this, EVP_PKEY_CTX * ctx);
void J3DNode__J3DNode(J3DNode * this);
void J3DNode__J3DNode_destructor(J3DNode * this);
undefined J3DNode__appendChild(J3DNode * this, J3DNode * param_1);
undefined J3DNode__entryIn(J3DNode * this);
undefined J3DMaterialTable__clear(J3DMaterialTable * this);
void J3DMaterialTable__J3DMaterialTable(J3DMaterialTable * this);
void J3DMaterialTable__J3DMaterialTable_destructor(J3DMaterialTable * this);
undefined J3DMaterialTable__entryMatColorAnimator(J3DMaterialTable * this, J3DAnmColor * param_1);
undefined J3DMaterialTable__entryTexMtxAnimator(J3DMaterialTable * this, J3DAnmTextureSRTKey * param_1);
undefined J3DMaterialTable__entryTevRegAnimator(J3DMaterialTable * this, J3DAnmTevRegKey * param_1);
undefined J3DMaterialTable__removeMatColorAnimator(J3DMaterialTable * this, J3DAnmColor * param_1);
undefined J3DMaterialTable__removeTexNoAnimator(J3DMaterialTable * this, J3DAnmTexPattern * param_1);
undefined J3DMaterialTable__removeTexMtxAnimator(J3DMaterialTable * this, J3DAnmTextureSRTKey * param_1);
undefined J3DMaterialTable__removeTevRegAnimator(J3DMaterialTable * this, J3DAnmTevRegKey * param_1);
undefined J3DMaterialTable__setMatColorAnimator(J3DMaterialTable * this, J3DAnmColor * param_1, J3DMatColorAnm * param_2);
undefined J3DMaterialTable__setTexNoAnimator(J3DMaterialTable * this, J3DAnmTexPattern * param_1, J3DTexNoAnm * param_2);
undefined J3DMaterialTable__setTexMtxAnimator(J3DMaterialTable * this, J3DAnmTextureSRTKey * param_1, J3DTexMtxAnm * param_2, J3DTexMtxAnm * param_3);
undefined J3DMaterialTable__setTevRegAnimator(J3DMaterialTable * this, J3DAnmTevRegKey * param_1, J3DTevColorAnm * param_2, J3DTevKColorAnm * param_3);
void J3DMaterialFactory__J3DMaterialFactory(J3DMaterialFactory * this, J3DMaterialBlock * param_1);
// void J3DMaterialFactory__J3DMaterialFactory(J3DMaterialFactory * this, J3DMaterialDLBlock * param_1);
undefined J3DMaterialFactory__countUniqueMaterials(J3DMaterialFactory * this);
undefined J3DMaterialFactory__countTexGens(J3DMaterialFactory * this, int param_1);
undefined J3DMaterialFactory__countStages(J3DMaterialFactory * this, int param_1);
undefined J3DMaterialFactory__create(J3DMaterialFactory * this, J3DMaterial * param_1, MaterialType param_2, int param_3, ulong param_4);
undefined J3DMaterialFactory__createNormalMaterial(J3DMaterialFactory * this, J3DMaterial * param_1, int param_2, ulong param_3);
undefined J3DMaterialFactory__createPatchedMaterial(J3DMaterialFactory * this, J3DMaterial * param_1, int param_2, ulong param_3);
undefined J3DMaterialFactory__modifyPatchedCurrentMtx(J3DMaterialFactory * this, J3DMaterial * param_1, int param_2);
undefined J3DMaterialFactory__createLockedMaterial(J3DMaterialFactory * this, J3DMaterial * param_1, int param_2, ulong param_3);
undefined J3DMaterialFactory__calcSize(J3DMaterialFactory * this, J3DMaterial * param_1, MaterialType param_2, int param_3, ulong param_4);
undefined J3DMaterialFactory__calcSizeNormalMaterial(J3DMaterialFactory * this, J3DMaterial * param_1, int param_2, ulong param_3);
undefined J3DMaterialFactory__calcSizePatchedMaterial(J3DMaterialFactory * this, J3DMaterial * param_1, int param_2, ulong param_3);
undefined J3DMaterialFactory__calcSizeLockedMaterial(J3DMaterialFactory * this, J3DMaterial * param_1, int param_2, ulong param_3);
undefined J3DMaterialFactory__newMatColor(J3DMaterialFactory * this, int param_1, int param_2);
undefined J3DMaterialFactory__newColorChanNum(J3DMaterialFactory * this, int param_1);
undefined J3DMaterialFactory__newColorChan(J3DMaterialFactory * this, int param_1, int param_2);
undefined J3DMaterialFactory__newAmbColor(J3DMaterialFactory * this, int param_1, int param_2);
undefined J3DMaterialFactory__newTexGenNum(J3DMaterialFactory * this, int param_1);
undefined J3DMaterialFactory__newTexCoord(J3DMaterialFactory * this, int param_1, int param_2);
undefined J3DMaterialFactory__newTexMtx(J3DMaterialFactory * this, int param_1, int param_2);
undefined J3DMaterialFactory__newCullMode(J3DMaterialFactory * this, int param_1);
undefined J3DMaterialFactory__newTexNo(J3DMaterialFactory * this, int param_1, int param_2);
undefined J3DMaterialFactory__newTevOrder(J3DMaterialFactory * this, int param_1, int param_2);
undefined J3DMaterialFactory__newTevColor(J3DMaterialFactory * this, int param_1, int param_2);
undefined J3DMaterialFactory__newTevKColor(J3DMaterialFactory * this, int param_1, int param_2);
undefined J3DMaterialFactory__newTevStageNum(J3DMaterialFactory * this, int param_1);
undefined J3DMaterialFactory__newTevStage(J3DMaterialFactory * this, int param_1, int param_2);
undefined J3DMaterialFactory__newTevSwapModeTable(J3DMaterialFactory * this, int param_1, int param_2);
undefined J3DMaterialFactory__newIndTexStageNum(J3DMaterialFactory * this, int param_1);
undefined J3DMaterialFactory__newIndTexOrder(J3DMaterialFactory * this, int param_1, int param_2);
undefined J3DMaterialFactory__newIndTexMtx(J3DMaterialFactory * this, int param_1, int param_2);
undefined J3DMaterialFactory__newIndTevStage(J3DMaterialFactory * this, int param_1, int param_2);
undefined J3DMaterialFactory__newIndTexCoordScale(J3DMaterialFactory * this, int param_1, int param_2);
undefined J3DMaterialFactory__newFog(J3DMaterialFactory * this, int param_1);
undefined J3DMaterialFactory__newAlphaComp(J3DMaterialFactory * this, int param_1);
undefined J3DMaterialFactory__newBlend(J3DMaterialFactory * this, int param_1);
undefined J3DMaterialFactory__newZMode(J3DMaterialFactory * this, int param_1);
undefined J3DMaterialFactory__newZCompLoc(J3DMaterialFactory * this, int param_1);
undefined J3DMaterialFactory__newDither(J3DMaterialFactory * this, int param_1);
undefined J3DMaterialFactory__newNBTScale(J3DMaterialFactory * this, int param_1);
undefined J3DPEBlockNull__load(J3DPEBlockNull * this);
undefined J3DPEBlockNull__getType(J3DPEBlockNull * this);
void J3DPEBlockNull__J3DPEBlockNull_destructor(J3DPEBlockNull * this);
undefined J3DTevBlockNull__reset(J3DTevBlockNull * this, J3DTevBlock * param_1);
undefined J3DTevBlockNull__ptrToIndex(J3DTevBlockNull * this);
undefined J3DTevBlockNull__indexToPtr(J3DTevBlockNull * this);
undefined J3DTevBlockNull__getType(J3DTevBlockNull * this);
void J3DTevBlockNull__J3DTevBlockNull_destructor(J3DTevBlockNull * this);
undefined J3DTexGenBlockNull__calc(J3DTexGenBlockNull * this, float * param_1);
undefined J3DTexGenBlockNull__load(J3DTexGenBlockNull * this);
undefined J3DTexGenBlockNull__patch(J3DTexGenBlockNull * this);
undefined J3DTexGenBlockNull__diff(J3DTexGenBlockNull * this, ulong param_1);
undefined J3DTexGenBlockNull__diffTexMtx(J3DTexGenBlockNull * this);
undefined J3DTexGenBlockNull__diffTexGen(J3DTexGenBlockNull * this);
undefined J3DTexGenBlockNull__getType(J3DTexGenBlockNull * this);
void J3DTexGenBlockNull__J3DTexGenBlockNull_destructor(J3DTexGenBlockNull * this);
undefined J3DColorBlockNull__getType(J3DColorBlockNull * this);
void J3DColorBlockNull__J3DColorBlockNull_destructor(J3DColorBlockNull * this);
// void J3DTevStage__J3DTevStage(J3DTevStage * this, J3DTevStageInfo * param_1);
void J3DMaterial__J3DMaterial_destructor(J3DMaterial * this);
undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
void J3DMaterialFactory_v21__J3DMaterialFactory_v21(J3DMaterialFactory_v21 * this, J3DMaterialBlock_v21 * param_1);
undefined J3DMaterialFactory_v21__countUniqueMaterials(J3DMaterialFactory_v21 * this);
undefined J3DMaterialFactory_v21__countTexGens(J3DMaterialFactory_v21 * this, int param_1);
undefined J3DMaterialFactory_v21__countStages(J3DMaterialFactory_v21 * this, int param_1);
undefined J3DMaterialFactory_v21__create(J3DMaterialFactory_v21 * this, J3DMaterial * param_1, int param_2, ulong param_3);
undefined J3DMaterialFactory_v21__newMatColor(J3DMaterialFactory_v21 * this, int param_1, int param_2);
undefined J3DMaterialFactory_v21__newColorChanNum(J3DMaterialFactory_v21 * this, int param_1);
undefined J3DMaterialFactory_v21__newColorChan(J3DMaterialFactory_v21 * this, int param_1, int param_2);
undefined J3DMaterialFactory_v21__newTexGenNum(J3DMaterialFactory_v21 * this, int param_1);
undefined J3DMaterialFactory_v21__newTexCoord(J3DMaterialFactory_v21 * this, int param_1, int param_2);
undefined J3DMaterialFactory_v21__newTexMtx(J3DMaterialFactory_v21 * this, int param_1, int param_2);
undefined J3DMaterialFactory_v21__newCullMode(J3DMaterialFactory_v21 * this, int param_1);
undefined J3DMaterialFactory_v21__newTexNo(J3DMaterialFactory_v21 * this, int param_1, int param_2);
undefined J3DMaterialFactory_v21__newTevOrder(J3DMaterialFactory_v21 * this, int param_1, int param_2);
undefined J3DMaterialFactory_v21__newTevColor(J3DMaterialFactory_v21 * this, int param_1, int param_2);
undefined J3DMaterialFactory_v21__newTevKColor(J3DMaterialFactory_v21 * this, int param_1, int param_2);
undefined J3DMaterialFactory_v21__newTevStageNum(J3DMaterialFactory_v21 * this, int param_1);
undefined J3DMaterialFactory_v21__newTevStage(J3DMaterialFactory_v21 * this, int param_1, int param_2);
undefined J3DMaterialFactory_v21__newTevSwapModeTable(J3DMaterialFactory_v21 * this, int param_1, int param_2);
undefined J3DMaterialFactory_v21__newFog(J3DMaterialFactory_v21 * this, int param_1);
undefined J3DMaterialFactory_v21__newAlphaComp(J3DMaterialFactory_v21 * this, int param_1);
undefined J3DMaterialFactory_v21__newBlend(J3DMaterialFactory_v21 * this, int param_1);
undefined J3DMaterialFactory_v21__newZMode(J3DMaterialFactory_v21 * this, int param_1);
undefined J3DMaterialFactory_v21__newZCompLoc(J3DMaterialFactory_v21 * this, int param_1);
undefined J3DMaterialFactory_v21__newDither(J3DMaterialFactory_v21 * this, int param_1);
undefined J3DMaterialFactory_v21__newNBTScale(J3DMaterialFactory_v21 * this, int param_1);
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
undefined J3DClusterLoaderDataBase__load(J3DClusterLoaderDataBase * this, void * param_1);
void J3DClusterLoader_v15__J3DClusterLoader_v15(J3DClusterLoader_v15 * this);
void J3DClusterLoader_v15__J3DClusterLoader_v15_destructor(J3DClusterLoader_v15 * this);
undefined J3DClusterLoader_v15__load(J3DClusterLoader_v15 * this, void * param_1);
undefined J3DClusterLoader_v15__readCluster(J3DClusterLoader_v15 * this, J3DClusterBlock * param_1);
void J3DClusterLoader__J3DClusterLoader_destructor(J3DClusterLoader * this);
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
undefined4 J3DModelLoaderDataBase__load(void * param_1, ulong param_2);
undefined J3DModelLoaderDataBase__loadMaterialTable(J3DModelLoaderDataBase * this, void * param_1);
undefined4 J3DModelLoaderDataBase__loadBinaryDisplayList(void * param_1, ulong param_2);
undefined J3DModelLoader__load(J3DModelLoader * this, void * param_1, ulong param_2);
undefined J3DModelLoader__loadMaterialTable(J3DModelLoader * this, void * param_1);
undefined J3DModelLoader__loadBinaryDisplayList(J3DModelLoader * this, void * param_1, ulong loadArgs);
undefined J3DModelLoader__setupBBoardInfo(J3DModelLoader * this);
undefined J3DModelLoader__readInformation(J3DModelLoader * this, J3DModelInfoBlock * param_1, ulong loadArgs);
undefined J3DGraphLoader__getFmtType();
undefined J3DModelLoader__readVertex(J3DModelLoader * this, J3DVertexBlock * param_1);
undefined J3DModelLoader__readEnvelop(J3DModelLoader * this, J3DEnvelopBlock * param_1);
undefined J3DModelLoader__readDraw(J3DModelLoader * this, J3DDrawBlock * param_1);
undefined J3DModelLoader__readJoint(J3DModelLoader * this, J3DJointBlock * param_1);
undefined J3DModelLoader_v26__readMaterial(J3DModelLoader_v26 * this, J3DMaterialBlock * param_1, ulong param_2);
undefined J3DModelLoader_v21__readMaterial_v21(J3DModelLoader_v21 * this, J3DMaterialBlock_v21 * param_1, ulong param_2);
undefined J3DModelLoader__readShape(J3DModelLoader * this, J3DShapeBlock * param_1, ulong param_2);
undefined J3DModelLoader__readTexture(J3DModelLoader * this, J3DTextureBlock * param_1);
undefined J3DModelLoader_v26__readMaterialTable(J3DModelLoader_v26 * this, J3DMaterialBlock * param_1, ulong param_2);
undefined J3DModelLoader_v21__readMaterialTable_v21(J3DModelLoader_v21 * this, J3DMaterialBlock_v21 * param_1, ulong param_2);
undefined J3DModelLoader__readTextureTable(J3DModelLoader * this, J3DTextureBlock * param_1);
undefined J3DModelLoader__readPatchedMaterial(J3DModelLoader * this, J3DMaterialBlock * param_1, ulong param_2);
undefined J3DModelLoader__readMaterialDL(J3DModelLoader * this, J3DMaterialDLBlock * param_1, ulong param_2);
undefined J3DModelLoader__modifyMaterial(J3DModelLoader * this, ulong param_1);
void J3DModelLoader_v26__J3DModelLoader_v26_destructor(J3DModelLoader_v26 * this);
void J3DModelLoader_v21__J3DModelLoader_v21_destructor(J3DModelLoader_v21 * this);
void J3DModelLoader__J3DModelLoader_destructor(J3DModelLoader * this);
undefined J3DModelLoader__readMaterial_v21(J3DModelLoader * this, J3DMaterialBlock_v21 * param_1, ulong param_2);
undefined J3DModelLoader__readMaterial(J3DModelLoader * this, J3DMaterialBlock * param_1, ulong param_2);
undefined J3DModelLoader__readMaterialTable_v21(J3DModelLoader * this, J3DMaterialBlock_v21 * param_1, ulong param_2);
undefined J3DModelLoader__readMaterialTable(J3DModelLoader * this, J3DMaterialBlock * param_1, ulong param_2);
undefined J3DModelLoader__calcSizeMaterial(J3DModelLoader * this, J3DMaterialBlock * param_1, ulong param_2);
undefined J3DModelLoader__calcSizeMaterialTable(J3DModelLoader * this, J3DMaterialBlock * param_1, ulong param_2);
void J3DMaterial__J3DMaterial(J3DMaterial * this);
void J3DTexture__J3DTexture_destructor(J3DTexture * this);
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
undefined J3DModelLoader__countMaterialNum(J3DModelLoader * this, void * param_1);
undefined J3DModelLoader__calcLoadSize(J3DModelLoader * this, void * param_1, ulong param_2);
undefined J3DModelLoader__calcLoadMaterialTableSize(J3DModelLoader * this, void * param_1);
undefined J3DModelLoader__calcLoadBinaryDisplayListSize(J3DModelLoader * this, void * param_1, ulong param_2);
undefined J3DModelLoader__calcSizeInformation(J3DModelLoader * this, J3DModelInfoBlock * param_1, ulong param_2);
undefined J3DModelLoader__calcSizeJoint(J3DModelLoader * this, J3DJointBlock * param_1);
undefined J3DModelLoader_v26__calcSizeMaterial(J3DModelLoader_v26 * this, J3DMaterialBlock * param_1, ulong param_2);
undefined J3DModelLoader__calcSizeShape(J3DModelLoader * this, J3DShapeBlock * param_1, ulong param_2);
undefined J3DModelLoader__calcSizeTexture(J3DModelLoader * this, J3DTextureBlock * param_1);
undefined J3DModelLoader_v26__calcSizeMaterialTable(J3DModelLoader_v26 * this, J3DMaterialBlock * param_1, ulong param_2);
undefined J3DModelLoader__calcSizeTextureTable(J3DModelLoader * this, J3DTextureBlock * param_1);
undefined J3DModelLoader__calcSizePatchedMaterial(J3DModelLoader * this, J3DMaterialBlock * param_1, ulong param_2);
undefined J3DModelLoader__calcSizeMaterialDL(J3DModelLoader * this, J3DMaterialDLBlock * param_1, ulong param_2);
void J3DJointFactory__J3DJointFactory(J3DJointFactory * this, J3DJointBlock * param_1);
undefined J3DJointFactory__create(J3DJointFactory * this, int param_1);
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
void J3DShapeFactory__J3DShapeFactory(J3DShapeFactory * this, J3DShapeBlock * param_1);
undefined J3DShapeFactory__create(J3DShapeFactory * this, int param_1, ulong param_2, _GXVtxDescList * param_3);
undefined J3DShapeFactory__newShapeMtx(J3DShapeFactory * this, ulong param_1, int param_2, int param_3);
undefined J3DShapeFactory__newShapeDraw(J3DShapeFactory * this, int param_1, int param_2);
undefined J3DShapeFactory__allocVcdVatCmdBuffer(J3DShapeFactory * this, ulong param_1);
undefined J3DShapeFactory__calcSize(J3DShapeFactory * this, int param_1, ulong param_2);
undefined J3DShapeFactory__calcSizeVcdVatCmdBuffer(J3DShapeFactory * this, ulong param_1);
undefined J3DShapeFactory__calcSizeShapeMtx(J3DShapeFactory * this, ulong param_1, int param_2, int param_3);
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
undefined J3DAnmLoaderDataBase__load(J3DAnmLoaderDataBase * this, void * param_1);
undefined J3DAnmLoaderDataBase__setResource(J3DAnmLoaderDataBase * this, J3DAnmBase * param_1, void * param_2);
void J3DAnmFullLoader_v15__J3DAnmFullLoader_v15(J3DAnmFullLoader_v15 * this);
void J3DAnmFullLoader_v15__J3DAnmFullLoader_v15_destructor(J3DAnmFullLoader_v15 * this);
void J3DAnmKeyLoader_v15__J3DAnmKeyLoader_v15(J3DAnmKeyLoader_v15 * this);
void J3DAnmKeyLoader_v15__J3DAnmKeyLoader_v15_destructor(J3DAnmKeyLoader_v15 * this);
undefined J3DAnmFullLoader_v15__load(J3DAnmFullLoader_v15 * this, void * param_1);
undefined J3DAnmFullLoader_v15__setResource(J3DAnmFullLoader_v15 * this, J3DAnmBase * param_1, void * param_2);
undefined J3DAnmFullLoader_v15__readAnmTransform(J3DAnmFullLoader_v15 * this, J3DAnmTransformFullData * param_1);
undefined J3DAnmFullLoader_v15__setAnmTransform(J3DAnmFullLoader_v15 * this, J3DAnmTransformFull * param_1, J3DAnmTransformFullData * param_2);
undefined J3DAnmFullLoader_v15__readAnmColor(J3DAnmFullLoader_v15 * this, J3DAnmColorFullData * param_1);
undefined J3DAnmFullLoader_v15__setAnmColor(J3DAnmFullLoader_v15 * this, J3DAnmColorFull * param_1, J3DAnmColorFullData * param_2);
undefined J3DAnmFullLoader_v15__readAnmTexPattern(J3DAnmFullLoader_v15 * this, J3DAnmTexPatternFullData * param_1);
undefined J3DAnmFullLoader_v15__setAnmTexPattern(J3DAnmFullLoader_v15 * this, J3DAnmTexPattern * param_1, J3DAnmTexPatternFullData * param_2);
undefined J3DAnmFullLoader_v15__readAnmVisibility(J3DAnmFullLoader_v15 * this, J3DAnmVisibilityFullData * param_1);
undefined J3DAnmFullLoader_v15__setAnmVisibility(J3DAnmFullLoader_v15 * this, J3DAnmVisibilityFull * param_1, J3DAnmVisibilityFullData * param_2);
undefined J3DAnmFullLoader_v15__readAnmCluster(J3DAnmFullLoader_v15 * this, J3DAnmClusterFullData * param_1);
undefined J3DAnmFullLoader_v15__setAnmCluster(J3DAnmFullLoader_v15 * this, J3DAnmClusterFull * param_1, J3DAnmClusterFullData * param_2);
undefined J3DAnmFullLoader_v15__readAnmVtxColor(J3DAnmFullLoader_v15 * this, J3DAnmVtxColorFullData * param_1);
undefined J3DAnmFullLoader_v15__setAnmVtxColor(J3DAnmFullLoader_v15 * this, J3DAnmVtxColorFull * param_1, J3DAnmVtxColorFullData * param_2);
undefined J3DAnmKeyLoader_v15__load(J3DAnmKeyLoader_v15 * this, void * param_1);
undefined J3DAnmKeyLoader_v15__setResource(J3DAnmKeyLoader_v15 * this, J3DAnmBase * param_1, void * param_2);
undefined J3DAnmKeyLoader_v15__readAnmTransform(J3DAnmKeyLoader_v15 * this, J3DAnmTransformKeyData * param_1);
undefined J3DAnmKeyLoader_v15__setAnmTransform(J3DAnmKeyLoader_v15 * this, J3DAnmTransformKey * param_1, J3DAnmTransformKeyData * param_2);
undefined J3DAnmKeyLoader_v15__readAnmTextureSRT(J3DAnmKeyLoader_v15 * this, J3DAnmTextureSRTKeyData * param_1);
undefined J3DAnmKeyLoader_v15__setAnmTextureSRT(J3DAnmKeyLoader_v15 * this, J3DAnmTextureSRTKey * param_1, J3DAnmTextureSRTKeyData * param_2);
undefined J3DAnmKeyLoader_v15__readAnmColor(J3DAnmKeyLoader_v15 * this, J3DAnmColorKeyData * param_1);
undefined J3DAnmKeyLoader_v15__setAnmColor(J3DAnmKeyLoader_v15 * this, J3DAnmColorKey * param_1, J3DAnmColorKeyData * param_2);
undefined J3DAnmKeyLoader_v15__readAnmCluster(J3DAnmKeyLoader_v15 * this, J3DAnmClusterKeyData * param_1);
undefined J3DAnmKeyLoader_v15__setAnmCluster(J3DAnmKeyLoader_v15 * this, J3DAnmClusterKey * param_1, J3DAnmClusterKeyData * param_2);
undefined J3DAnmKeyLoader_v15__readAnmTevReg(J3DAnmKeyLoader_v15 * this, J3DAnmTevRegKeyData * param_1);
undefined J3DAnmKeyLoader_v15__setAnmTevReg(J3DAnmKeyLoader_v15 * this, J3DAnmTevRegKey * param_1, J3DAnmTevRegKeyData * param_2);
undefined J3DAnmKeyLoader_v15__readAnmVtxColor(J3DAnmKeyLoader_v15 * this, J3DAnmVtxColorKeyData * param_1);
undefined J3DAnmKeyLoader_v15__setAnmVtxColor(J3DAnmKeyLoader_v15 * this, J3DAnmVtxColorKey * param_1, J3DAnmVtxColorKeyData * param_2);
void J3DAnmVisibilityFull__J3DAnmVisibilityFull_destructor(J3DAnmVisibilityFull * this);
void J3DAnmTevRegKey__J3DAnmTevRegKey_destructor(J3DAnmTevRegKey * this);
void J3DAnmLoader__J3DAnmLoader_destructor(J3DAnmLoader * this);
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
// undefined J3DGraphLoader__JSUConvertOffsetToPtr();
undefined JMath__JMANewSinTable();
undefined JMath__JMAEulerToQuat();
undefined JMath__JMAQuatLerp();
undefined JMath__JMAHermiteInterpolation();
void JMath__TRandom_fast___TRandom_fast_(TRandom_fast_ * this, ulong param_1);
undefined JMath__TRandom_enough___setSeed(TRandom_enough_ * this, ulong param_1);
undefined JMath__TRandom_enough___get(TRandom_enough_ * this);
undefined base__PPCMfmsr();
undefined base__PPCMtmsr();
undefined base__PPCMfhid0();
undefined base__PPCMthid0();
undefined base__PPCMfl2cr();
undefined base__PPCMtl2cr();
undefined base__PPCMtdec();
undefined base__PPCSync();
undefined base__PPCHalt();
undefined base__PPCMffpscr();
undefined base__PPCMtfpscr();
undefined base__PPCMfhid2();
undefined base__PPCMthid2();
undefined base__PPCMtwpar();
undefined base__PPCDisableSpeculation();
undefined base__PPCSetFpNonIEEEMode();
int os__OSGetConsoleType(void);
undefined os__ClearArena();
undefined os__InquiryCallback();
undefined os__OSInit();
undefined os__OSExceptionInit();
undefined os____OSDBIntegrator();
undefined os____OSDBJump();
undefined os____OSSetExceptionHandler();
undefined os____OSGetExceptionHandler();
undefined os__OSExceptionVector();
undefined os__OSDefaultExceptionHandler();
undefined os____OSPSInit();
undefined os____OSGetDIConfig();
undefined os__OSRegisterVersion();
undefined os__OSInitAlarm();
undefined os__OSCreateAlarm();
undefined os__InsertAlarm();
undefined os__OSSetAlarm();
undefined os__OSSetPeriodicAlarm();
undefined os__OSCancelAlarm();
undefined os__DecrementerExceptionCallback();
undefined os__DecrementerExceptionHandler();
undefined os__DLInsert();
undefined os__OSAllocFromHeap();
undefined os__OSFreeToHeap();
undefined os__OSSetCurrentHeap();
undefined os__OSInitAlloc();
undefined os__OSCreateHeap();
undefined os__OSDestroyHeap();
undefined os__OSCheckHeap();
undefined os__OSReferentSize();
undefined os__OSDumpHeap();
undefined os__OSGetArenaHi();
undefined os__OSGetArenaLo();
undefined os__OSSetArenaHi();
undefined os__OSSetArenaLo();
undefined os__OSAllocFromArenaLo();
undefined os____OSInitAudioSystem();
undefined os____OSStopAudioSystem();
undefined os__DCEnable();
undefined os__DCInvalidateRange();
undefined os__DCFlushRange();
undefined os__DCStoreRange();
undefined os__DCFlushRangeNoSync();
undefined os__DCStoreRangeNoSync();
undefined os__DCZeroRange();
undefined os__ICInvalidateRange();
undefined os__ICFlashInvalidate();
undefined os__ICEnable();
undefined os____LCEnable();
undefined os__LCEnable();
undefined os__LCDisable();
undefined os__LCStoreBlocks();
undefined os__LCStoreData();
undefined os__LCQueueWait();
undefined os__L2GlobalInvalidate();
undefined os__DMAErrorHandler();
undefined os____OSCacheInit();
undefined os____OSLoadFPUContext();
undefined os____OSSaveFPUContext();
undefined os__OSSaveFPUContext();
undefined os__OSSetCurrentContext();
undefined os__OSGetCurrentContext();
undefined os__OSSaveContext();
undefined os__OSLoadContext();
undefined os__OSGetStackPointer();
undefined os__OSClearContext();
undefined os__OSInitContext();
undefined os__OSDumpContext();
undefined os__OSSwitchFPUContext();
undefined os____OSContextInit();
undefined os__OSFillFPUContext();
undefined os__OSSetErrorHandler();
undefined os____OSUnhandledException();
undefined os__OSGetFontEncode();
undefined os__OSDisableInterrupts();
undefined os__OSEnableInterrupts();
undefined os__OSRestoreInterrupts();
undefined os____OSSetInterruptHandler();
undefined os____OSGetInterruptHandler();
undefined os____OSInterruptInit();
undefined os__SetInterruptMask();
undefined os____OSMaskInterrupts();
undefined os____OSUnmaskInterrupts();
undefined os____OSDispatchInterrupt();
undefined os__ExternalInterruptHandler();
undefined os__OSNotifyLink();
undefined os__OSNotifyUnlink();
undefined os__OSSetStringTable();
undefined os__Relocate();
undefined os__Link(DynamicModule * rel, undefined4 param_2, undefined4 param_3);
undefined os__OSLink();
undefined os__OSLinkFixed(DynamicModule * rel, undefined4 param_2);
undefined os__Undo();
undefined os__OSUnlink();
undefined os____OSModuleInit();
void os__OSInitMessageQueue(OSMessageQueue * param_1, OSMessage * param_2, int param_3);
undefined os__OSSendMessage();
undefined os__OSReceiveMessage();
undefined os__OSGetConsoleSimulatedMemSize();
undefined os__OnReset();
undefined os__MEMIntrruptHandler();
undefined os__OSProtectRange();
undefined os__Config24MB();
undefined os__Config48MB();
undefined os__RealMode();
undefined os____OSInitMemoryProtection();
undefined os__OSInitMutex(OSMutex * param_1);
undefined os__OSLockMutex();
undefined os__OSUnlockMutex();
undefined os____OSUnlockAllMutex();
undefined os__OSTryLockMutex();
undefined os__OSInitCond();
undefined os__OSWaitCond();
undefined os__OSSignalCond();
undefined os____OSCheckMutex();
undefined os____OSCheckDeadLock();
undefined os____OSCheckMutexes();
undefined os__Run();
undefined os__Callback();
undefined os____OSReboot();
undefined os__OSSetSaveRegion();
undefined os__OSRegisterResetFunction();
undefined os__Reset();
undefined os____OSDoHotReset();
undefined os__OSResetSystem();
undefined os__OSGetResetCode();
undefined os____OSResetSWInterruptHandler();
undefined os__OSGetResetButtonState();
undefined os__OSGetResetSwitchState();
undefined os__WriteSramCallback();
undefined os__WriteSram();
undefined os____OSInitSram();
undefined os____OSLockSram();
undefined os____OSLockSramEx();
undefined os__UnlockSram();
undefined os____OSUnlockSram();
undefined os____OSUnlockSramEx();
undefined os____OSSyncSram();
undefined os__OSGetSoundMode();
undefined os__OSSetSoundMode();
undefined os__OSGetProgressiveMode();
undefined os__OSSetProgressiveMode();
undefined os__OSGetWirelessID();
undefined os__OSSetWirelessID();
undefined os__SystemCallVector();
undefined os____OSInitSystemCall();
undefined os__DefaultSwitchThreadCallback();
undefined os__OSSetSwitchThreadCallback();
undefined os____OSThreadInit();
undefined os__OSInitThreadQueue();
undefined os__OSGetCurrentThread();
undefined os__OSIsThreadTerminated();
undefined os__OSDisableScheduler();
undefined os__OSEnableScheduler();
undefined os__UnsetRun();
undefined os____OSGetEffectivePriority();
undefined os__SetEffectivePriority();
undefined os____OSPromoteThread();
undefined os__SelectThread();
undefined os____OSReschedule();
undefined os__OSYieldThread();
undefined os__OSCreateThread();
undefined os__OSExitThread();
undefined os__OSCancelThread();
undefined os__OSJoinThread();
undefined os__OSDetachThread();
undefined os__OSResumeThread();
undefined os__OSSuspendThread();
undefined os__OSSleepThread();
undefined os__OSWakeupThread();
undefined os__OSSetThreadPriority();
undefined os__OSGetThreadPriority();
undefined os__CheckThreadQueue();
undefined os__OSCheckActiveThreads();
undefined os__OSClearStack();
int os__OSGetTime(void);
undefined os__OSGetTick();
undefined os____OSGetSystemTime();
undefined os____OSTimeToSystemTime();
undefined os__GetDates();
void os__OSTicksToCalendarTime(int32_t param_1, int32_t param_2, OSCalendarTime * param_3);
undefined os____init_user();
undefined os____init_cpp();
undefined os___ExitProcess();
undefined exi__SetExiInterruptMask();
undefined exi__EXIImm();
undefined exi__EXIImmEx();
undefined exi__EXIDma();
undefined exi__EXISync();
undefined exi__EXIClearInterrupts();
undefined exi__EXISetExiCallback();
undefined exi____EXIProbe();
undefined exi__EXIProbe();
undefined exi__EXIProbeEx();
undefined exi__EXIAttach();
undefined exi__EXIDetach();
undefined exi__EXISelect();
undefined exi__EXIDeselect();
undefined exi__EXIIntrruptHandler();
undefined exi__TCIntrruptHandler();
undefined exi__EXTIntrruptHandler();
undefined exi__EXIInit();
undefined exi__EXILock();
undefined exi__EXIUnlock();
undefined exi__EXIGetState();
undefined exi__UnlockedHandler();
undefined exi__EXIGetID();
undefined exi__InitializeUART();
undefined exi__WriteUARTN();
undefined si__SIBusy();
undefined si__SIIsChanBusy();
undefined si__CompleteTransfer();
undefined si__SIInterruptHandler();
undefined si__SIEnablePollingInterrupt();
undefined si__SIRegisterPollingHandler();
undefined si__SIUnregisterPollingHandler();
undefined si__SIInit();
undefined si____SITransfer();
undefined si__SIGetStatus();
undefined si__SISetCommand();
undefined si__SITransferCommands();
undefined si__SISetXY();
undefined si__SIEnablePolling();
undefined si__SIDisablePolling();
undefined si__SIGetResponseRaw();
undefined si__SIGetResponse();
undefined si__AlarmHandler();
undefined si__SITransfer();
undefined si__GetTypeCallback();
undefined si__SIGetType();
undefined si__SIGetTypeAsync();
undefined si__SIDecodeType();
undefined si__SIProbe();
undefined si__SISetSamplingRate();
undefined si__SIRefreshSamplingRate();
undefined db__DBInit();
undefined db____DBExceptionDestinationAux();
undefined db____DBExceptionDestination();
undefined db____DBIsExceptionMarked();
undefined db__DBPrintf();
void PSMTXIdentity(MTX34 * param_1);
void PSMTXCopy(MTX34 * param_1, MTX34 * param_2);
void PSMTXConcat(MTX34 * param_1, MTX34 * param_2, MTX34 * param_3);
undefined PSMTXInverse();
void PSMTXRotRad(MTX34 * param_1, char param_2, float param_3);
undefined PSMTXRotTrig();
undefined C_MTXRotAxisRad();
undefined __PSMTXRotAxisRadInternal();
undefined PSMTXRotAxisRad();
void PSMTXTrans(double param_1, double param_2, double param_3, MTX34 * param_4);
undefined PSMTXTransApply();
void PSMTXScale(double param_1, double param_2, double param_3, MTX34 * param_4);
undefined PSMTXQuat();
undefined C_MTXLookAt();
undefined C_MTXLightPerspective();
undefined C_MTXLightOrtho();
void PSMTXMultVec(MTX34 * param_1, cXyz * param_2, cXyz * param_3);
undefined PSMTXMultVecArray();
undefined PSMTXMultVecSR();
undefined C_MTXPerspective();
undefined C_MTXOrtho();
void PSVECAdd(cXyz * param_1, cXyz * param_2, cXyz * param_3);
void PSVECSubtract(cXyz * param_1, cXyz * param_2, cXyz * param_3);
undefined PSVECScale();
undefined C_VECNormalize();
undefined PSVECNormalize();
float PSVECSquareMag(cXyz * param_1);
float PSVECMag(cXyz * param_1);
undefined PSVECDotProduct();
void PSVECCrossProduct(cXyz * param_1, cXyz * param_2, cXyz * param_3);
void C_VECHalfAngle(cXyz * param_1, cXyz * param_2, cXyz * param_3);
undefined C_VECReflect();
float PSVECSquareDistance(cXyz * param_1, cXyz * param_2);
float PSVECDistance(cXyz * param_1, cXyz * param_2);
undefined PSQUATMultiply();
undefined PSQUATNormalize();
undefined PSQUATInverse();
undefined C_QUATRotAxisRad();
void C_QUATSlerp(double param_1, Quaternion * param_2, Quaternion * param_3, Quaternion * param_4);
undefined dvd____DVDInitWA();
undefined dvd____DVDInterruptHandler();
undefined dvd__AlarmHandler();
undefined dvd__AlarmHandlerForTimeout();
undefined dvd__Read();
undefined dvd__SeekTwiceBeforeRead();
undefined dvd__DVDLowRead();
undefined dvd__DVDLowSeek();
undefined dvd__DVDLowWaitCoverClose();
undefined dvd__DVDLowReadDiskID();
undefined dvd__DVDLowStopMotor();
undefined dvd__DVDLowRequestError();
undefined dvd__DVDLowInquiry();
undefined dvd__DVDLowAudioStream();
undefined dvd__DVDLowRequestAudioStatus();
undefined dvd__DVDLowAudioBufferConfig();
undefined dvd__DVDLowReset();
undefined dvd__DVDLowBreak();
undefined dvd__DVDLowClearCallback();
undefined dvd____DVDLowSetWAType();
undefined dvd____DVDFSInit();
undefined dvd__DVDConvertPathToEntrynum();
undefined dvd__DVDFastOpen();
undefined dvd__DVDOpen();
undefined dvd__DVDClose();
undefined dvd__entryToPath();
undefined dvd__DVDConvertEntrynumToPath();
undefined dvd__DVDGetCurrentDir();
undefined dvd__DVDChangeDir();
undefined dvd__DVDReadAsyncPrio();
undefined dvd__cbForReadAsync();
undefined dvd__DVDReadPrio();
undefined dvd__cbForReadSync();
undefined dvd__DVDOpenDir();
undefined dvd__DVDReadDir();
undefined dvd__DVDCloseDir();
undefined dvd__DVDPrepareStreamAsync();
undefined dvd__cbForPrepareStreamAsync();
undefined dvd__defaultOptionalCommandChecker();
undefined dvd__DVDInit();
undefined dvd__stateReadingFST();
undefined dvd__cbForStateReadingFST();
undefined dvd__cbForStateError();
undefined dvd__stateTimeout();
undefined dvd__stateGettingError();
undefined dvd__CategorizeError();
undefined dvd__cbForStateGettingError();
undefined dvd__cbForUnrecoveredError();
undefined dvd__cbForUnrecoveredErrorRetry();
undefined dvd__stateGoToRetry();
undefined dvd__cbForStateGoToRetry();
undefined dvd__stateCheckID();
undefined dvd__stateCheckID3();
undefined dvd__stateCheckID2a();
undefined dvd__cbForStateCheckID2a();
undefined dvd__stateCheckID2();
undefined dvd__cbForStateCheckID1();
undefined dvd__cbForStateCheckID2();
undefined dvd__cbForStateCheckID3();
// undefined dvd__AlarmHandler();
undefined dvd__stateCoverClosed();
undefined dvd__stateCoverClosed_CMD();
undefined dvd__cbForStateCoverClosed();
undefined dvd__stateMotorStopped();
undefined dvd__cbForStateMotorStopped();
undefined dvd__stateReady();
undefined dvd__stateBusy();
undefined dvd__cbForStateBusy();
undefined dvd__DVDReadAbsAsyncPrio();
undefined dvd__DVDReadAbsAsyncForBS();
undefined dvd__DVDReadDiskID();
undefined dvd__DVDPrepareStreamAbsAsync();
undefined dvd__DVDCancelStreamAsync();
undefined dvd__DVDStopStreamAtEndAsync();
undefined dvd__DVDGetStreamPlayAddrAsync();
undefined dvd__DVDInquiryAsync();
undefined dvd__DVDReset();
undefined dvd__DVDGetCommandBlockStatus();
undefined dvd__DVDGetDriveStatus();
undefined dvd__DVDSetAutoInvalidation();
undefined dvd__DVDCancelAsync();
undefined dvd__DVDCancel();
undefined dvd__cbForCancelSync();
undefined dvd__DVDGetCurrentDiskID();
undefined dvd__DVDCheckDisk();
undefined dvd____DVDPrepareResetAsync();
undefined dvd____DVDClearWaitingQueue();
undefined dvd____DVDPushWaitingQueue();
undefined dvd____DVDPopWaitingQueue();
undefined dvd____DVDCheckWaitingQueue();
undefined dvd____DVDDequeueWaitingQueue();
undefined dvd__ErrorCode2Num();
undefined dvd____DVDStoreErrorCode();
undefined dvd__DVDCompareDiskID();
undefined dvd____DVDPrintFatalMessage();
undefined dvd__cb();
undefined dvd____fstLoad();
undefined vi____VIRetraceHandler();
undefined vi__VISetPreRetraceCallback();
undefined vi__VISetPostRetraceCallback();
undefined vi__getTiming();
undefined vi____VIInit();
undefined vi__VIInit();
undefined vi__VIWaitForRetrace();
undefined vi__setFbbRegs();
undefined vi__setVerticalRegs(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined4 param_9);
undefined vi__VIConfigure();
undefined vi__VIFlush();
undefined vi__VISetNextFrameBuffer();
undefined vi__VISetBlack();
undefined vi__VIGetRetraceCount();
undefined vi__getCurrentFieldEvenOdd();
undefined vi__VIGetNextField();
undefined vi__VIGetCurrentLine();
undefined vi__VIGetTvFormat();
undefined vi__VIGetDTVStatus();
undefined pad__ClampStick();
undefined pad__PADClamp();
undefined pad__UpdateOrigin();
undefined pad__PADOriginCallback();
undefined pad__PADOriginUpdateCallback();
undefined pad__PADProbeCallback();
undefined pad__PADTypeAndStatusCallback();
undefined pad__PADReceiveCheckCallback();
undefined pad__PADReset();
undefined pad__PADRecalibrate();
undefined pad__PADInit();
undefined pad__PADRead();
undefined pad__PADControlMotor();
undefined pad__PADSetSpec();
undefined pad__SPEC0_MakeStatus();
undefined pad__SPEC1_MakeStatus();
undefined pad__SPEC2_MakeStatus();
undefined pad__PADSetAnalogMode();
undefined pad__OnReset();
undefined pad__SamplingHandler();
undefined pad__PADSetSamplingCallback();
undefined pad____PADDisableRecalibration();
undefined ai__AIRegisterDMACallback();
undefined ai__AIInitDMA();
undefined ai__AIStartDMA();
undefined ai__AIResetStreamSampleCount();
undefined ai__AISetStreamPlayState();
undefined ai__AIGetStreamPlayState();
undefined ai__AISetDSPSampleRate();
undefined ai__AIGetDSPSampleRate();
undefined ai__AISetStreamSampleRate();
undefined ai____AI_set_stream_sample_rate();
undefined ai__AIGetStreamSampleRate();
undefined ai__AISetStreamVolLeft();
undefined ai__AIGetStreamVolLeft();
undefined ai__AISetStreamVolRight();
undefined ai__AIGetStreamVolRight();
undefined ai__AIInit();
undefined ai____AISHandler();
undefined ai____AIDHandler();
undefined ai____AICallbackStackSwitch();
undefined ai____AI_SRC_INIT();
undefined ar__ARRegisterDMACallback();
undefined ar__ARStartDMA();
undefined ar__ARAlloc();
undefined ar__ARInit();
undefined ar__ARGetBaseAddress();
undefined ar__ARGetSize();
undefined ar____ARHandler();
undefined ar____ARChecksize();
undefined ar____ARQServiceQueueLo();
undefined ar____ARQCallbackHack();
undefined ar____ARQInterruptServiceRoutine();
undefined ar__ARQInit();
undefined ar__ARQPostRequest();
undefined dsp__DSPCheckMailToDSP();
undefined dsp__DSPCheckMailFromDSP();
undefined dsp__DSPReadMailFromDSP();
undefined dsp__DSPSendMailToDSP();
undefined dsp__DSPAssertInt();
undefined dsp__DSPInit();
undefined dsp____DSP_debug_printf();
undefined dsp____DSP_exec_task();
undefined dsp____DSP_boot_task();
undefined dsp____DSP_insert_task();
undefined dsp____DSP_remove_task();
undefined card____CARDDefaultApiCallback();
undefined card____CARDSyncCallback();
undefined card____CARDExtHandler();
undefined card____CARDExiHandler();
undefined card____CARDTxHandler();
undefined card____CARDUnlockedHandler();
undefined card____CARDEnableInterrupt();
undefined card____CARDReadStatus();
undefined card____CARDClearStatus();
undefined card__TimeoutHandler();
undefined card__Retry();
undefined card__UnlockedCallback();
undefined card____CARDStart();
undefined card____CARDReadSegment();
undefined card____CARDWritePage();
undefined card____CARDEraseSector();
undefined card__CARDInit();
undefined card____CARDGetFontEncode();
undefined card____CARDSetDiskID();
undefined card____CARDGetControlBlock();
undefined card____CARDPutControlBlock();
undefined card__CARDFreeBlocks();
undefined card____CARDSync();
undefined card__OnReset();
undefined card__bitrev();
undefined card__ReadArrayUnlock();
undefined card__DummyLen();
undefined card____CARDUnlock();
undefined card__InitCallback();
undefined card__DoneCallback();
undefined card__BlockReadCallback();
undefined card____CARDRead();
undefined card__BlockWriteCallback();
undefined card____CARDWrite();
undefined card____CARDGetFatBlock();
undefined card__WriteCallback();
undefined card__EraseCallback();
undefined card____CARDAllocBlock();
undefined card____CARDUpdateFatBlock();
undefined card____CARDGetDirBlock();
// undefined card__WriteCallback();
// undefined card__EraseCallback();
undefined card____CARDUpdateDir();
undefined card____CARDCheckSum();
undefined card__VerifyID();
undefined card__VerifyDir();
undefined card__VerifyFAT();
undefined card____CARDVerify();
undefined card__CARDCheckExAsync();
undefined card__CARDCheck();
undefined card__IsCard();
undefined card__CARDProbe();
undefined card__CARDProbeEx();
undefined card__DoMount();
undefined card____CARDMountCallback();
undefined card__CARDMountAsync();
undefined card__CARDMount();
undefined card__DoUnmount();
undefined card__CARDUnmount();
undefined card__FormatCallback();
undefined card____CARDFormatRegionAsync();
undefined card__CARDFormat();
undefined card____CARDCompareFileName();
undefined card____CARDAccess();
undefined card____CARDIsPublic();
undefined card__CARDOpen();
undefined card__CARDClose();
undefined card__CreateCallbackFat();
undefined card__CARDCreateAsync();
undefined card__CARDCreate();
undefined card____CARDSeek();
undefined card__ReadCallback();
undefined card__CARDReadAsync();
undefined card__CARDRead();
// undefined card__WriteCallback();
// undefined card__EraseCallback();
undefined card__CARDWriteAsync();
undefined card__CARDWrite();
undefined card__UpdateIconOffsets();
undefined card__CARDGetStatus();
undefined card__CARDSetStatusAsync();
undefined card__CARDSetStatus();
undefined card__CARDGetSerialNo();
undefined gx____GXDefaultTexRegionCallback();
undefined gx____GXDefaultTlutRegionCallback();
undefined gx__GXInit();
undefined gx____GXInitGX();
undefined gx__GXCPInterruptHandler();
undefined gx__GXInitFifoBase();
undefined gx__GXInitFifoPtrs();
undefined gx__GXInitFifoLimits();
undefined gx__GXSetCPUFifo();
undefined gx__GXSetGPFifo();
undefined gx__GXSaveCPUFifo();
undefined gx____GXSaveCPUFifoAux();
undefined gx__GXGetGPStatus();
undefined gx____GXFifoInit();
undefined gx____GXFifoReadEnable();
undefined gx____GXFifoReadDisable();
undefined gx____GXFifoLink();
undefined gx____GXWriteFifoIntEnable();
undefined gx____GXWriteFifoIntReset();
undefined gx____GXCleanGPFifo();
undefined gx__GXSetCurrentGXThread();
undefined gx__GXGetCurrentGXThread();
undefined gx__GXGetCPUFifo();
undefined gx__GXGetGPFifo();
undefined gx____GXXfVtxSpecs();
void gx__GXSetVtxDesc(GXAttr param_1, GXAttrType param_2);
undefined gx____GXSetVCD();
undefined gx____GXCalculateVLim();
undefined gx__GXClearVtxDesc();
void gx__GXSetVtxAttrFmt(GXVtxFmt param_1, GXAttr param_2, GXCompCnt param_3, GXCompType param_4, byte frac);
undefined gx__GXSetVtxAttrFmtv();
undefined gx____GXSetVAT();
undefined gx__GXGetVtxAttrFmt();
undefined gx__GXGetVtxAttrFmtv();
undefined gx__GXSetArray(GXAttr attr, undefined4 dataPointer, undefined4 dataSize);
undefined gx__GXInvalidateVtxCache();
void gx__GXSetTexCoordGen2(GXTexCoordID dst_coord, GXTexGenType func, GXTexGenSrc src_param, u32 mtx, bool normalize, u32 postmtx);
undefined gx__GXSetNumTexGens();
undefined gx__GXSetMisc();
undefined gx__GXFlush();
undefined gx__GXAbortFrame();
undefined gx__GXSetDrawSync();
undefined gx__GXSetDrawDone();
undefined gx__GXDrawDone();
undefined gx__GXPixModeSync();
undefined gx__GXPokeAlphaMode();
undefined gx__GXPokeAlphaRead();
undefined gx__GXPokeAlphaUpdate();
undefined gx__GXPokeBlendMode();
undefined gx__GXPokeColorUpdate();
undefined gx__GXPokeDstAlpha();
undefined gx__GXPokeDither();
undefined gx__GXPokeZMode();
undefined gx__GXPeekARGB();
undefined gx__GXPeekZ();
undefined gx__GXSetDrawSyncCallback();
undefined gx__GXTokenInterruptHandler();
undefined gx__GXSetDrawDoneCallback();
undefined gx__GXFinishInterruptHandler();
undefined gx____GXPEInit();
undefined gx____GXSetDirtyState();
undefined gx__GXBegin();
undefined gx____GXSendFlushPrim();
undefined gx__GXSetLineWidth();
undefined gx__GXSetPointSize();
undefined gx__GXEnableTexOffsets();
undefined gx__GXSetCullMode();
undefined gx__GXSetCoPlanar();
undefined gx____GXSetGenMode();
undefined gx__GXSetDispCopySrc();
undefined gx__GXSetTexCopySrc();
undefined gx__GXSetDispCopyDst();
undefined gx__GXSetTexCopyDst();
undefined gx__GXSetDispCopyFrame2Field();
undefined gx__GXSetCopyClamp();
undefined gx__GXGetNumXfbLines();
undefined gx__GXGetYScaleFactor();
undefined gx__GXSetDispCopyYScale();
undefined gx__GXSetCopyClear();
undefined gx__GXSetCopyFilter();
undefined gx__GXSetDispCopyGamma();
undefined gx__GXCopyDisp();
undefined gx__GXCopyTex();
undefined gx__GXClearBoundingBox();
undefined gx__GXInitLightAttn();
void gx__GXInitLightSpot(_GXLightObj * param_1, float param_2, GXSpotFn param_3);
void gx__GXInitLightDistAttn(_GXLightObj * param_1, float param_2, float param_3, GXDistAttnFn param_4);
void gx__GXInitLightPos(double param_1, double param_2, double param_3, _GXLightObj * param_4);
undefined gx__GXInitLightDir(undefined8 param_1, undefined8 param_2, undefined8 param_3, _GXLightObj * param_4);
void gx__GXInitLightColor(_GXLightObj * param_1, _GXColor * param_2);
void gx__GXLoadLightObjImm(_GXLightObj * param_1, GXLightID param_2);
undefined gx__GXSetChanAmbColor();
undefined gx__GXSetChanMatColor();
undefined gx__GXSetNumChans();
undefined gx__GXSetChanCtrl();
undefined gx__GXGetTexBufferSize();
undefined gx____GetImageTileCount();
void gx__GXInitTexObj(GXTexObj * param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, int param_7, char param_8);
undefined gx__GXInitTexObjCI(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined4 param_9);
undefined gx__GXInitTexObjLOD();
undefined gx__GXGetTexObjData();
undefined gx__GXGetTexObjWidth();
undefined gx__GXGetTexObjHeight();
undefined gx__GXGetTexObjFmt();
undefined gx__GXGetTexObjWrapS();
undefined gx__GXGetTexObjWrapT();
undefined gx__GXGetTexObjTlut();
undefined gx__GXLoadTexObjPreLoaded();
void gx__GXLoadTexObj(GXTexObj * param_1, int param_2);
undefined gx__GXInitTlutObj();
undefined gx__GXLoadTlut();
undefined gx__GXInitTexCacheRegion();
undefined gx__GXInitTlutRegion();
undefined gx__GXInvalidateTexAll();
undefined gx__GXSetTexRegionCallback();
undefined gx__GXSetTlutRegionCallback();
undefined gx__GXSetTexCoordScaleManually();
undefined gx__GXSetTexCoordBias();
undefined gx____SetSURegs();
undefined gx____GXSetSUTexRegs();
undefined gx____GXSetTmemConfig();
undefined gx__GXSetTevIndirect(undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined1 param_9, undefined4 param_10);
undefined gx__GXSetIndTexMtx(GXIndTexMtxID param_1, float param_2[6], int param_3);
undefined gx__GXSetIndTexCoordScale();
undefined gx__GXSetIndTexOrder();
undefined gx__GXSetNumIndStages();
undefined gx__GXSetTevDirect();
undefined gx__GXSetTevIndWarp();
undefined gx____GXUpdateBPMask();
undefined gx____GXFlushTextureState();
undefined gx__GXSetTevOp();
void gx__GXSetTevColorIn(GXTevStageID param_1, GXTevColorArg param_2, GXTevColorArg param_3, GXTevColorArg param_4, GXTevColorArg param_5);
void gx__GXSetTevAlphaIn(GXTevStageID param_1, GXTevAlphaArg param_2, GXTevAlphaArg param_3, GXTevAlphaArg param_4, GXTevAlphaArg param_5);
void gx__GXSetTevColorOp(GXTevStageID param_1, GXTevOp param_2, GXTevBias param_3, GXTevScale param_4, bool param_5, GXTevRegID param_6);
void gx__GXSetTevAlphaOp(GXTevStageID param_1, GXTevOp param_2, GXTevBias param_3, GXTevScale param_4, bool param_5, GXTevRegID param_6);
undefined gx__GXSetTevColor(GXTevRegID param_1, _GXColor * param_2);
undefined gx__GXSetTevColorS10();
undefined gx__GXSetTevKColor();
undefined gx__GXSetTevKColorSel();
undefined gx__GXSetTevKAlphaSel();
undefined gx__GXSetTevSwapMode();
undefined gx__GXSetTevSwapModeTable();
void gx__GXSetAlphaCompare(GXCompare param_1, byte param_2, GXAlphaOp param_3, GXCompare param_4, byte param_5);
undefined gx__GXSetZTexture();
void gx__GXSetTevOrder(GXTevStageID param_1, GXTexCoordID param_2, GXTexMapID param_3, GXChannelID param_4);
undefined gx__GXSetNumTevStages();
void gx__GXSetFog(_GXFogType param_1, float param_2, float param_3, float param_4, float param_5, _GXColor * param_6);
void gx__GXSetFogRangeAdj(bool param_1, u16 param_2, _GXFogAdjTable * param_3);
void gx__GXSetBlendMode(GXBlendMode param_1, GXBlendFactor param_2, GXBlendFactor param_3, GXLogicOp param_4);
void gx__GXSetColorUpdate(bool param_1);
undefined gx__GXSetAlphaUpdate();
void gx__GXSetZMode(bool param_1, GXCompare param_2, bool param_3);
undefined gx__GXSetZCompLoc();
undefined gx__GXSetPixelFmt();
undefined gx__GXSetDither();
undefined gx__GXSetDstAlpha();
undefined gx__GXSetFieldMask();
undefined gx__GXSetFieldMode();
undefined gx____GXSetRange();
undefined gx__GXCallDisplayList();
undefined gx__GXProject();
void gx__GXSetProjection(MTX44 * param_1, GXProjectionType param_2);
undefined gx__GXSetProjectionv();
undefined gx__GXGetProjectionv();
void gx__GXLoadPosMtxImm(MTX34 * param_1, int param_2);
undefined gx__GXLoadNrmMtxImm();
undefined gx__GXSetCurrentMtx();
undefined gx__GXLoadTexMtxImm();
undefined gx__GXSetViewportJitter();
undefined gx__GXSetViewport();
undefined gx__GXGetViewportv();
undefined gx__GXSetScissor();
undefined gx__GXGetScissor();
undefined gx__GXSetScissorBoxOffset();
void gx__GXSetClipMode(bool param_1);
undefined gx____GXSetMatrixIndex();
undefined gx__GXSetGPMetric();
undefined gx__GXClearGPMetric();
undefined gx__GXReadXfRasMetric();
undefined gd__GDInitGDLObj();
undefined gd__GDFlushCurrToMem();
undefined gd__GDPadCurr32();
undefined gd__GDOverflowed();
undefined gd__GDSetVtxDescv();
undefined gd__GDSetArray();
undefined gd__GDSetArrayRaw();
undefined Runtime_PPCEABI_H____va_arg();
undefined Runtime_PPCEABI_H____destroy_global_chain();
undefined Runtime_PPCEABI_H____register_global_object();
undefined Runtime_PPCEABI_H____copy();
undefined Runtime_PPCEABI_H____destroy_new_array();
undefined Runtime_PPCEABI_H____destroy_arr();
void Runtime_PPCEABI_H____construct_array(void * param_1, undefined * constructor, undefined * destructor, int elementSize, uint numElements);
void __partial_array_destructor____partial_array_destructor_destructor(__partial_array_destructor * this);
undefined Runtime_PPCEABI_H____construct_new_array();
undefined Runtime_PPCEABI_H____ptmf_test();
undefined Runtime_PPCEABI_H____ptmf_cmpr();
void Runtime_PPCEABI_H____ptmf_scall(pointer param_1, void * param_2);
undefined Runtime_PPCEABI_H____cvt_fp2unsigned();
undefined Runtime_PPCEABI_H____save_fpr();
undefined FUN_80328e98();
void FUN_80328e9c(void);
undefined FUN_80328ea4();
undefined FUN_80328ea8();
undefined Runtime_PPCEABI_H____restore_fpr();
undefined FUN_80328ee4();
undefined FUN_80328ee8();
undefined FUN_80328ef0();
undefined FUN_80328ef4();
undefined Runtime_PPCEABI_H____save_gpr();
undefined FUN_80328f08();
undefined FUN_80328f0c();
undefined FUN_80328f10();
undefined FUN_80328f14();
undefined FUN_80328f18();
undefined FUN_80328f1c();
undefined FUN_80328f20();
undefined FUN_80328f24();
undefined FUN_80328f28();
undefined FUN_80328f2c();
undefined FUN_80328f30();
undefined FUN_80328f34();
undefined FUN_80328f38();
undefined FUN_80328f3c();
undefined FUN_80328f40();
undefined Runtime_PPCEABI_H____restore_gpr();
undefined FUN_80328f54();
undefined FUN_80328f58();
undefined FUN_80328f5c();
undefined FUN_80328f60();
undefined FUN_80328f64();
undefined FUN_80328f68();
undefined FUN_80328f6c();
undefined FUN_80328f70();
undefined FUN_80328f74();
undefined FUN_80328f78();
undefined FUN_80328f7c();
undefined FUN_80328f80();
undefined FUN_80328f84();
undefined FUN_80328f88();
undefined FUN_80328f8c();
undefined Runtime_PPCEABI_H____div2u();
undefined Runtime_PPCEABI_H____div2i();
undefined Runtime_PPCEABI_H____mod2u();
undefined Runtime_PPCEABI_H____mod2i();
undefined Runtime_PPCEABI_H____shl2i();
undefined Runtime_PPCEABI_H____shr2u();
undefined Runtime_PPCEABI_H____shr2i();
undefined Runtime_PPCEABI_H____cvt_dbl_usll();
undefined Runtime_PPCEABI_H__GetR2();
undefined Runtime_PPCEABI_H____fini_cpp_exceptions();
undefined Runtime_PPCEABI_H____init_cpp_exceptions();
undefined Runtime_PPCEABI_H____unregister_fragment();
undefined Runtime_PPCEABI_H____register_fragment();
undefined Runtime_PPCEABI_H____sys_free();
void MSL_C_PPCEABI_bare_H__exit(int __status);
void MSL_C_PPCEABI_bare_H__free(void * __ptr);
undefined MSL_C_PPCEABI_bare_H__deallocate_from_fixed_pools();
undefined MSL_C_PPCEABI_bare_H__SubBlock_merge_next();
undefined MSL_C_PPCEABI_bare_H__Block_link();
undefined MSL_C_PPCEABI_bare_H____flush_all();
undefined MSL_C_PPCEABI_bare_H____close_all();
undefined MSL_C_PPCEABI_bare_H____num2dec();
undefined MSL_C_PPCEABI_bare_H____num2dec_internal();
undefined MSL_C_PPCEABI_bare_H____two_exp();
undefined MSL_C_PPCEABI_bare_H____str2dec();
undefined MSL_C_PPCEABI_bare_H____timesdec();
undefined MSL_C_PPCEABI_bare_H____ull2dec();
undefined MSL_C_PPCEABI_bare_H____count_trailing_zerol();
div_t MSL_C_PPCEABI_bare_H__div(int __numer, int __denom);
long MSL_C_PPCEABI_bare_H__labs(long __x);
int MSL_C_PPCEABI_bare_H__abs(int __x);
undefined MSL_C_PPCEABI_bare_H____flush_buffer();
undefined MSL_C_PPCEABI_bare_H____prep_buffer();
int MSL_C_PPCEABI_bare_H__tolower(int __c);
undefined MSL_C_PPCEABI_bare_H____fwrite();
size_t MSL_C_PPCEABI_bare_H__fwrite(void * __ptr, size_t __size, size_t __n, FILE * __s);
int MSL_C_PPCEABI_bare_H__fflush(FILE * __stream);
int MSL_C_PPCEABI_bare_H__fclose(FILE * __stream);
int MSL_C_PPCEABI_bare_H__fseek(FILE * __stream, long __off, int __whence);
undefined MSL_C_PPCEABI_bare_H___fseek();
long MSL_C_PPCEABI_bare_H__ftell(FILE * __stream);
size_t MSL_C_PPCEABI_bare_H__wcstombs(char * __s, wchar_t * __pwcs, size_t __n);
undefined MSL_C_PPCEABI_bare_H__unicode_to_UTF8();
int MSL_C_PPCEABI_bare_H__memcmp(void * __s1, void * __s2, size_t __n);
undefined MSL_C_PPCEABI_bare_H____memrchr();
void * MSL_C_PPCEABI_bare_H__memchr(void * __s, int __c, size_t __n);
void * MSL_C_PPCEABI_bare_H__memmove(void * __dest, void * __src, size_t __n);
undefined MSL_C_PPCEABI_bare_H____copy_longs_rev_unaligned();
undefined MSL_C_PPCEABI_bare_H____copy_longs_unaligned();
undefined MSL_C_PPCEABI_bare_H____copy_longs_rev_aligned();
undefined MSL_C_PPCEABI_bare_H____copy_longs_aligned();
undefined MSL_C_PPCEABI_bare_H____stdio_atexit();
int MSL_C_PPCEABI_bare_H__sprintf(char * __s, char * __format, ...);
int MSL_C_PPCEABI_bare_H__snprintf(char * __s, size_t __maxlen, char * __format, ...);
int MSL_C_PPCEABI_bare_H__vsnprintf(char * __s, size_t __maxlen, char * __format, __gnuc_va_list __arg);
int MSL_C_PPCEABI_bare_H__vprintf(char * __format, __gnuc_va_list __arg);
int MSL_C_PPCEABI_bare_H__printf(char * __format, ...);
undefined MSL_C_PPCEABI_bare_H____StringWrite();
undefined MSL_C_PPCEABI_bare_H____FileWrite();
undefined MSL_C_PPCEABI_bare_H____pformatter();
undefined MSL_C_PPCEABI_bare_H__float2str();
undefined MSL_C_PPCEABI_bare_H__round_decimal();
undefined MSL_C_PPCEABI_bare_H__double2hex();
undefined MSL_C_PPCEABI_bare_H__longlong2str();
undefined MSL_C_PPCEABI_bare_H__long2str();
undefined MSL_C_PPCEABI_bare_H__parse_format();
undefined MSL_C_PPCEABI_bare_H____StringRead();
char * MSL_C_PPCEABI_bare_H__strrchr(char * __s, int __c);
char * MSL_C_PPCEABI_bare_H__strchr(char * __s, int __c);
int MSL_C_PPCEABI_bare_H__strncmp(char * __s1, char * __s2, size_t __n);
int MSL_C_PPCEABI_bare_H__strcmp(char * __s1, char * __s2);
char * MSL_C_PPCEABI_bare_H__strcat(char * __dest, char * __src);
char * MSL_C_PPCEABI_bare_H__strncpy(char * __dest, char * __src, size_t __n);
char * MSL_C_PPCEABI_bare_H__strcpy(char * __dest, char * __src);
size_t MSL_C_PPCEABI_bare_H__strlen(char * __s);
long MSL_C_PPCEABI_bare_H__strtol(char * __nptr, char * * __endptr, int __base);
ulong MSL_C_PPCEABI_bare_H__strtoul(char * __nptr, char * * __endptr, int __base);
undefined MSL_C_PPCEABI_bare_H____strtoul();
undefined MSL_C_PPCEABI_bare_H____close_console();
undefined MSL_C_PPCEABI_bare_H____write_console();
// int MSL_C_PPCEABI_bare_H__fwide(__FILE * __fp, int __mode);
undefined MSL_C_PPCEABI_bare_H____ieee754_acos();
undefined MSL_C_PPCEABI_bare_H____ieee754_asin();
undefined MSL_C_PPCEABI_bare_H____ieee754_atan2();
undefined MSL_C_PPCEABI_bare_H____ieee754_fmod();
undefined MSL_C_PPCEABI_bare_H____ieee754_rem_pio2();
undefined MSL_C_PPCEABI_bare_H____kernel_cos();
undefined MSL_C_PPCEABI_bare_H____kernel_rem_pio2();
undefined MSL_C_PPCEABI_bare_H____kernel_sin();
undefined MSL_C_PPCEABI_bare_H____kernel_tan();
double MSL_C_PPCEABI_bare_H__atan(double __x);
double MSL_C_PPCEABI_bare_H__copysign(double __x, double __y);
double MSL_C_PPCEABI_bare_H__cos(double theta);
double MSL_C_PPCEABI_bare_H__floor(double __x);
double MSL_C_PPCEABI_bare_H__frexp(double __x, int * __exponent);
double MSL_C_PPCEABI_bare_H__ldexp(double __x, int __exponent);
double MSL_C_PPCEABI_bare_H__modf(double __x, double * __iptr);
double MSL_C_PPCEABI_bare_H__sin(double theta);
double MSL_C_PPCEABI_bare_H__tan(double __x);
double MSL_C_PPCEABI_bare_H__acos(double __x);
double MSL_C_PPCEABI_bare_H__asin(double __x);
double MSL_C_PPCEABI_bare_H__atan2(double __y, double __x);
double MSL_C_PPCEABI_bare_H__fmod(double __x, double __y);
float MSL_C_PPCEABI_bare_H__tanf(float __x);
float MSL_C_PPCEABI_bare_H__sinf(float __x);
float MSL_C_PPCEABI_bare_H__cosf(float __x);
float MSL_C_PPCEABI_bare_H__acosf(float __x);
undefined TRK_MINNOW_DOLPHIN__TRKNubMainLoop();
undefined TRK_MINNOW_DOLPHIN__TRKDestructEvent();
undefined TRK_MINNOW_DOLPHIN__TRKConstructEvent();
undefined TRK_MINNOW_DOLPHIN__TRKPostEvent();
undefined TRK_MINNOW_DOLPHIN__TRKGetNextEvent();
undefined TRK_MINNOW_DOLPHIN__TRKInitializeEventQueue();
undefined TRK_MINNOW_DOLPHIN__TRKNubWelcome();
undefined TRK_MINNOW_DOLPHIN__TRKTerminateNub();
undefined TRK_MINNOW_DOLPHIN__TRKInitializeNub();
undefined TRK_MINNOW_DOLPHIN__TRKMessageSend();
undefined TRK_MINNOW_DOLPHIN__TRKReadBuffer_ui32();
undefined TRK_MINNOW_DOLPHIN__TRKReadBuffer_ui8();
undefined TRK_MINNOW_DOLPHIN__TRKReadBuffer1_ui64();
undefined TRK_MINNOW_DOLPHIN__TRKReadBuffer1_ui32();
undefined TRK_MINNOW_DOLPHIN__TRKReadBuffer1_ui16();
undefined TRK_MINNOW_DOLPHIN__TRKReadBuffer1_ui8();
undefined TRK_MINNOW_DOLPHIN__TRKAppendBuffer_ui32();
undefined TRK_MINNOW_DOLPHIN__TRKAppendBuffer_ui8();
undefined TRK_MINNOW_DOLPHIN__TRKAppendBuffer1_ui64();
undefined TRK_MINNOW_DOLPHIN__TRKAppendBuffer1_ui32();
undefined TRK_MINNOW_DOLPHIN__TRKAppendBuffer1_ui16();
undefined TRK_MINNOW_DOLPHIN__TRKReadBuffer();
undefined TRK_MINNOW_DOLPHIN__TRKAppendBuffer();
undefined TRK_MINNOW_DOLPHIN__TRKSetBufferPosition();
undefined TRK_MINNOW_DOLPHIN__TRKResetBuffer();
undefined TRK_MINNOW_DOLPHIN__TRKReleaseBuffer();
undefined TRK_MINNOW_DOLPHIN__TRKGetBuffer();
undefined TRK_MINNOW_DOLPHIN__TRKGetFreeBuffer();
undefined TRK_MINNOW_DOLPHIN__TRKInitializeMessageBuffers();
undefined TRK_MINNOW_DOLPHIN__TRKTerminateSerialHandler();
undefined TRK_MINNOW_DOLPHIN__TRKInitializeSerialHandler();
undefined TRK_MINNOW_DOLPHIN__TRKProcessInput();
undefined TRK_MINNOW_DOLPHIN__TRKGetInput();
undefined TRK_MINNOW_DOLPHIN__TRKTestForPacket();
undefined TRK_MINNOW_DOLPHIN__usr_put_initialize();
undefined TRK_MINNOW_DOLPHIN__usr_puts_serial();
undefined TRK_MINNOW_DOLPHIN__TRKDispatchMessage();
undefined TRK_MINNOW_DOLPHIN__TRKInitializeDispatcher();
undefined TRK_MINNOW_DOLPHIN__TRKDoSetOption();
undefined TRK_MINNOW_DOLPHIN__TRKDoStop();
undefined TRK_MINNOW_DOLPHIN__TRKDoStep();
undefined TRK_MINNOW_DOLPHIN__TRKDoContinue();
undefined TRK_MINNOW_DOLPHIN__TRKDoFlushCache();
undefined TRK_MINNOW_DOLPHIN__TRKDoWriteRegisters();
undefined TRK_MINNOW_DOLPHIN__TRKDoReadRegisters();
undefined TRK_MINNOW_DOLPHIN__TRKDoWriteMemory();
undefined TRK_MINNOW_DOLPHIN__TRKDoReadMemory();
undefined TRK_MINNOW_DOLPHIN__TRKDoCPUType();
undefined TRK_MINNOW_DOLPHIN__TRKDoSupportMask();
undefined TRK_MINNOW_DOLPHIN__TRKDoVersions();
undefined TRK_MINNOW_DOLPHIN__TRKDoReset();
undefined TRK_MINNOW_DOLPHIN__TRKDoDisconnect();
undefined TRK_MINNOW_DOLPHIN__TRKDoConnect();
undefined TRK_MINNOW_DOLPHIN__TRKDoUnsupported();
undefined TRK_MINNOW_DOLPHIN__TRKStandardACK();
undefined TRK_MINNOW_DOLPHIN__SetTRKConnected();
undefined TRK_MINNOW_DOLPHIN__GetTRKConnected();
undefined TRK_MINNOW_DOLPHIN__HandlePositionFileSupportRequest();
undefined TRK_MINNOW_DOLPHIN__HandleCloseFileSupportRequest();
undefined TRK_MINNOW_DOLPHIN__HandleOpenFileSupportRequest();
undefined TRK_MINNOW_DOLPHIN__TRKRequestSend();
undefined TRK_MINNOW_DOLPHIN__TRKSuppAccessFile();
undefined TRK_MINNOW_DOLPHIN__TRKReleaseMutex();
undefined TRK_MINNOW_DOLPHIN__TRKAcquireMutex();
undefined TRK_MINNOW_DOLPHIN__TRKInitializeMutex();
undefined TRK_MINNOW_DOLPHIN__TRKDoNotifyStopped();
undefined TRK_MINNOW_DOLPHIN__TRK_flush_cache();
undefined TRK_MINNOW_DOLPHIN__TRK_fill_mem();
undefined TRK_MINNOW_DOLPHIN____TRK_get_MSR();
undefined TRK_MINNOW_DOLPHIN____TRK_set_MSR();
undefined TRK_MINNOW_DOLPHIN__TRK_ppc_memcpy();
undefined TRK_MINNOW_DOLPHIN__TRKInterruptHandler();
undefined TRK_MINNOW_DOLPHIN__TRKExceptionHandler();
undefined TRK_MINNOW_DOLPHIN__TRKSwapAndGo();
undefined TRK_MINNOW_DOLPHIN__TRKInterruptHandlerEnableInterrupts();
undefined TRK_MINNOW_DOLPHIN__TRKTargetSetInputPendingPtr();
undefined TRK_MINNOW_DOLPHIN__TRKPPCAccessFPRegister();
undefined TRK_MINNOW_DOLPHIN__TRKTargetStop();
undefined TRK_MINNOW_DOLPHIN__TRKTargetSetStopped();
undefined TRK_MINNOW_DOLPHIN__TRKTargetStopped();
undefined TRK_MINNOW_DOLPHIN__TRKTargetFlushCache();
undefined TRK_MINNOW_DOLPHIN__TRKTargetSupportRequest();
undefined TRK_MINNOW_DOLPHIN__TRKTargetGetPC();
undefined TRK_MINNOW_DOLPHIN__TRKTargetStepOutOfRange();
undefined TRK_MINNOW_DOLPHIN__TRKTargetSingleStep();
undefined TRK_MINNOW_DOLPHIN__TRKTargetAddExceptionInfo();
undefined TRK_MINNOW_DOLPHIN__TRKTargetAddStopInfo();
undefined TRK_MINNOW_DOLPHIN__TRKTargetInterrupt();
undefined TRK_MINNOW_DOLPHIN__TRKPostInterruptEvent();
undefined TRK_MINNOW_DOLPHIN__TRKTargetCPUType();
undefined TRK_MINNOW_DOLPHIN__TRKTargetSupportMask();
undefined TRK_MINNOW_DOLPHIN__TRKTargetVersions();
undefined TRK_MINNOW_DOLPHIN__TRKTargetAccessExtended2();
undefined TRK_MINNOW_DOLPHIN__TRKTargetAccessExtended1();
undefined TRK_MINNOW_DOLPHIN__TRKTargetAccessFP();
undefined TRK_MINNOW_DOLPHIN__TRKTargetAccessDefault();
undefined TRK_MINNOW_DOLPHIN__TRKTargetAccessMemory();
undefined TRK_MINNOW_DOLPHIN__TRKValidMemory32();
undefined FUN_80337020();
undefined TRK_MINNOW_DOLPHIN__InitMetroTRK();
undefined TRK_MINNOW_DOLPHIN__TRKInitializeTarget();
undefined TRK_MINNOW_DOLPHIN__TRKTargetTranslate();
undefined TRK_MINNOW_DOLPHIN__EnableMetroTRKInterrupts();
undefined TRK_MINNOW_DOLPHIN__TRKSaveExtended1Block();
undefined TRK_MINNOW_DOLPHIN__TRKRestoreExtended1Block();
undefined TRK_MINNOW_DOLPHIN__TRKTargetCPUMinorType();
undefined TRK_MINNOW_DOLPHIN__TRK_main();
undefined TRK_MINNOW_DOLPHIN__TRKLoadContext();
undefined TRK_MINNOW_DOLPHIN__TRKUARTInterruptHandler();
undefined TRK_MINNOW_DOLPHIN__TRK_board_display();
undefined TRK_MINNOW_DOLPHIN__UnreserveEXI2Port();
undefined TRK_MINNOW_DOLPHIN__ReserveEXI2Port();
undefined TRK_MINNOW_DOLPHIN__TRKReadUARTPoll();
undefined TRK_MINNOW_DOLPHIN__WriteUART1();
undefined TRK_MINNOW_DOLPHIN__WriteUARTFlush();
undefined TRK_MINNOW_DOLPHIN__EnableEXI2Interrupts();
undefined TRK_MINNOW_DOLPHIN__TRKInitializeIntDrivenUART();
undefined TRK_MINNOW_DOLPHIN__InitMetroTRKCommTable();
undefined TRK_MINNOW_DOLPHIN__TRKEXICallBack();
undefined TRK_MINNOW_DOLPHIN__TRKTargetContinue();
undefined TRK_MINNOW_DOLPHIN__GetUseSerialIO();
undefined TRK_MINNOW_DOLPHIN__SetUseSerialIO();
undefined TRK_MINNOW_DOLPHIN____TRK_write_console();
undefined TRK_MINNOW_DOLPHIN____read_console();
undefined amcstubs__EXI2_Init();
undefined amcstubs__EXI2_EnableInterrupts();
undefined amcstubs__EXI2_Poll();
undefined amcstubs__EXI2_ReadN();
undefined amcstubs__EXI2_WriteN();
undefined amcstubs__EXI2_Reserve();
undefined amcstubs__EXI2_Unreserve();
undefined amcstubs__AMC_IsStub();
undefined OdemuExi2__DBClose();
undefined OdemuExi2__DBOpen();
undefined OdemuExi2__DBWrite();
undefined OdemuExi2__DBRead();
undefined OdemuExi2__DBQueryData();
undefined OdemuExi2__DBInitInterrupts();
undefined OdemuExi2__DBInitComm();
undefined OdemuExi2__DBGHandler();
undefined OdemuExi2__MWCallback();
undefined OdemuExi2__DBGReadStatus();
undefined OdemuExi2__DBGWrite();
undefined OdemuExi2__DBGRead();
undefined OdemuExi2__DBGReadMailbox();
undefined OdemuExi2__DBGEXIImm();
undefined odenotstub__Hu_IsStub();
